#defcfunc txtitemoncell int txtitemoncell_arg1, int txtitemoncell_arg2
	cell_itemoncell txtitemoncell_arg1, txtitemoncell_arg2
	if ( stat <= 3 ) {
		if ( map(txtitemoncell_arg1, txtitemoncell_arg2, 5) < 0 ) {
			rtvaln = ""
			locvar_txtitemoncell_p = -map(txtitemoncell_arg1, txtitemoncell_arg2, 5), 0
			locvar_txtitemoncell_i = locvar_txtitemoncell_p \ 1000 + RANGE_INV2, locvar_txtitemoncell_p / 1000 \ 1000 + RANGE_INV2, locvar_txtitemoncell_p / 1000000 \ 1000 + RANGE_INV2
			repeat 3
				if ( locvar_txtitemoncell_i(cnt) == 999 + RANGE_INV2 ) {
					continue
				}
				if ( locvar_txtitemoncell_p(1) != 0 ) {
					rtvaln += lang("‚Ж", " and ")
				}
				rtvaln += itemname(locvar_txtitemoncell_i(cnt))
				locvar_txtitemoncell_p(1)++
			loop
		}
		else {
			rtvaln = itemname(rtval(1))
		}
		if ( inv(INV_ITEM_PROPERTY, rtval(1)) <= PROP_NONE ) {
			bedtxt = lang(rtvaln + "‚Є—Ћ‚ї‚Д‚ў‚йЃB", "You see " + rtvaln + " here.")
		}
		else {
			if ( inv(INV_ITEM_PROPERTY, rtval(1)) == PROP_CONSTRUCT ) {
				bedtxt = lang(rtvaln + "‚ЄђЭ’u‚і‚к‚Д‚ў‚йЃB", "" + rtvaln + " is constructed here.")
			}
			else {
				bedtxt = lang(rtvaln + "‚Є‚ ‚йЃB", "You see " + rtvaln + " placed here.(" + cnvweight(inv(INV_ITEM_WEIGHT, rtval(1))) + ")")
			}
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_JURES_BODY_PILLOW ) {
			bedtxt += lang("ђQђS’n‚Н€«‚»‚¤‚ѕ‚ЄЃA‚ў‚ў–І‚рЊ©‚к‚»‚¤‚ѕЃB", " It looks uncomfortable to sleep on, but I'm sure I'll have good dreams.")
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_SLEEPING_BAG | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_CHEAP_BED2 ) {
			bedtxt += lang("’n‚Ч‚Ѕ‚ЕђQ‚й‚М‚Ж‘еЌ·‚И‚ў‚ѕ‚л‚¤ЃB", " It wouldn't be much different from sleeping on the ground.")
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_PLAIN_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_CHEAP_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_BUNK_BED ) {
			bedtxt += lang("’n‚Ч‚Ѕ‚ЕђQ‚й‚ж‚и‚Нѓ}ѓV‚ѕ‚ЄЃcЃB", " It's better than sleeping on the ground.")
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_GIANT_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_COMFORTABLE_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_EASTERN_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_CLEAN_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_SOFT_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_COFFIN ) {
			bedtxt += lang("‚Ь‚џ‚Ь‚џ‹x‚Я‚»‚¤‚ѕЃB", " I think I can rest to some extent.")
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_SLEEP_SHEEP | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_LUXURY_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_DOUBLE_BED ) {
			bedtxt += lang("ђQђS’n‚Є—З‚і‚»‚¤‚ѕЃB", " I think I'll be able to sleep comfortably.")
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_KINGS_BED | inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_HAPPY_BED ) {
			bedtxt += lang("‚Ж‚Б‚Д‚ађQђS’n‚Є—З‚і‚»‚¤‚ѕЃI", " I think I'll be able to sleep very comfortably!")
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_BOMB_BARREL ) {
			if ( cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) == "B‹аЏpЋm" | instr(cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER), 0, "lchemist") != (-1) ) {
				bedtxt += lang("Ѓu‚Ѕ‚йЃcЃv", " \"Baaarrel...\"")
			}
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_POTION_NEKTAR ) {
			if ( cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) == "B‹аЏpЋm" | instr(cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER), 0, "lchemist") != (-1) ) {
				bedtxt += lang("Ѓu‚Ѕ‚йЃ`Ѓv", " \"It's a Barrel~\"")
			}
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_SNOW_BARREL ) {
			if ( cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) == "B‹аЏpЋm" | instr(cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER), 0, "lchemist") != (-1) ) {
				bedtxt += lang("Ѓu‚Ѕ‚й‚БЃv", " \"A barrel.\"")
			}
		}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_CARGO_BARREL ) {
			if ( cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) == "B‹аЏpЋm" | instr(cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER), 0, "lchemist") != (-1) ) {
				bedtxt += lang("Ѓu‚Ѕ‚йЃIЃv", " \"Barrel!\"")
			}
	}
		if ( inv(INV_ITEM_ID, rtval(1)) == ITEM_ID_BARREL ) {
			if ( cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) == "B‹аЏpЋm" | instr(cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER), 0, "lchemist") != (-1) ) {
				bedtxt += lang("Ѓu‚ЅЃ[‚йЃv", " \"Barrel.\"")
			}
		}
		return bedtxt
	}
	return lang("‚±‚±‚Й‚Н" + rtval + "Ћн—Ю‚МѓAѓCѓeѓЂ‚Є‚ ‚йЃB", "There are " + rtval + " items lying here.")

#deffunc txttargetnpc int txttargetnpc_arg1, int txttargetnpc_arg2, int txttargetnpc_arg3
	locvar_txttargetnpc_dy = 0
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	if ( txttargetnpc_arg3 == 0 ) {
		if ( fov_los(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), txttargetnpc_arg1, txttargetnpc_arg2) == 0 | dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), txttargetnpc_arg1, txttargetnpc_arg2) > cdata(CDATA_FOV, CHARA_PLAYER) / 2 ) {
			pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
			locvar_txttargetnpc_dy++
			color 0, 0, 0
			bmes lang("Ћ‹ЉE”Н€НЉO", "This location is out of sight."), 255, 2552, 255
			cansee = 0
			return
		}
	}
	if ( map(txttargetnpc_arg1, txttargetnpc_arg2, 1) != 0 ) {
		locvar_txttargetnpc_i = map(txttargetnpc_arg1, txttargetnpc_arg2, 1) - 1
		if ( cbit(CHARA_BIT_INVISIBLE, locvar_txttargetnpc_i) == 0 | cbit(CHARA_BIT_SEE_INVISIBLE, CHARA_PLAYER) | cdata(CDATA_CONDITION_WET, locvar_txttargetnpc_i) ) {
			tc = locvar_txttargetnpc_i
			txttargetlevel
			color 0, 0, 0
			pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
			locvar_txttargetnpc_dy++
			bmes s, 255, 2552, 255
			txttargetsp
			color 0, 0, 0
			pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
			locvar_txttargetnpc_dy++
			bmes s, 255, 2552, 255
			repeat MAX_BLESSINGS + MAX_HEXES - 1
				if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, locvar_txttargetnpc_i) == 0 ) {
					continue
				}
				calcbuff -2, cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, locvar_txttargetnpc_i), cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 1, locvar_txttargetnpc_i)
				s = "" + buffname(cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, locvar_txttargetnpc_i)) + ": " + cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 2, locvar_txttargetnpc_i) + lang("А°Э", "turns ")
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes s, 255, 2552, 255
			loop
			/********** CUSTOM - BEGINNING **********/ // more status display
			displaystates = CDATA_CONDITION_GRAVITY, CDATA_CONDITION_INVERT, CDATA_CONDITION_OIL, CDATA_CONDITION_WET, CDATA_CONDITION_ANGRY, CDATA_CONDITION_BIND, CDATA_CONDITION_INSANE, CDATA_CONDITION_SUFFOCATION, CDATA_CONDITION_MPOISON, CDATA_CONDITION_BLEED, CDATA_CONDITION_SLEEP, CDATA_CONDITION_ATROPHY, CDATA_CONDITION_BRAINWASH, CDATA_CONDITION_FEAR, CDATA_CONDITION_DIM, CDATA_CONDITION_POISON, CDATA_CONDITION_CONFUSE, CDATA_CONDITION_BLIND, CDATA_CONDITION_PARALYZE, CDATA_CONDITION_CHILLS, CDATA_CONDITION_WINCE
			displaytexts  = _congravity, _coninvert, _conoil, _conwet, _conangry, _conbind, _coninsane, _conmochi, _conmpoison, _conbleed, _consleep, _conbrowbeat, _conwash, _confear, _condim, _conpoison, _conconfuse, _conblind, _conparalyze, _conreiki, _conkaen
			repeat length(displaystates)
				if ( cdata(displaystates(cnt), locvar_txttargetnpc_i) > 0 ) {
					s = "" + displaytexts(cnt) + ": " + cdata(displaystates(cnt), locvar_txttargetnpc_i) + lang("А°Э", " stacks ")
					color 0, 0, 0
					pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
					locvar_txttargetnpc_dy++
					bmes s, 255, 2552, 255
				}
			loop
			if ( ( cdata(CDATA_TARGET, locvar_txttargetnpc_i) != CHARA_PLAYER | cdata(CDATA_RELATION, locvar_txttargetnpc_i) == (-3) ) & cdata(CDATA_AI_AGGRO, locvar_txttargetnpc_i) > 0 ) {
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes "Target: " + cdatan(CDATAN_NAME, cdata(CDATA_TARGET, locvar_txttargetnpc_i)) + "(" + cdata(CDATA_AI_AGGRO, locvar_txttargetnpc_i) + ")", 255, 2552, 255
			}
			/********** CUSTOM - ENDING **********/
			if ( cdata(CDATA_TAGTEAM_PARTNER, locvar_txttargetnpc_i) > 0 ) {
				/********** CUSTOM - BEGINNING **********/ // more status display
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes "" + name(cdata(CDATA_TAGTEAM_PARTNER, locvar_txttargetnpc_i)) + ": " + cdata(CDATA_HP, cdata(CDATA_TAGTEAM_PARTNER, locvar_txttargetnpc_i)) + "/" + cdata(CDATA_MAX_HP, cdata(CDATA_TAGTEAM_PARTNER, locvar_txttargetnpc_i)), 255, 2552, 255
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes "" + name(locvar_txttargetnpc_i) + ": " + cdata(CDATA_HP, locvar_txttargetnpc_i) + "/" + cdata(CDATA_MAX_HP, locvar_txttargetnpc_i), 255, 2552, 255
				/********** CUSTOM - ENDING **********/
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes lang("Њ»ЌЭ‚Мѓ^Ѓ[ѓQѓbѓg‚Н", "You are targeting ") + cdatan(CDATAN_NAME, locvar_txttargetnpc_i) + lang(" Ѓ{ ", " + ") + cdatan(CDATAN_NAME, cdata(CDATA_TAGTEAM_PARTNER, locvar_txttargetnpc_i)) + lang(" (‹——Ј ", ".(Distance ") + dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, locvar_txttargetnpc_i), cdata(CDATA_Y, locvar_txttargetnpc_i)) + ")", 255, 2552, 255
			}
			else {
				/********** CUSTOM - BEGINNING **********/ // more status display
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes "" + name(locvar_txttargetnpc_i) + ": " + cdata(CDATA_HP, locvar_txttargetnpc_i) + "/" + cdata(CDATA_MAX_HP, locvar_txttargetnpc_i), 255, 2552, 255
				/********** CUSTOM - ENDING **********/
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes lang("Њ»ЌЭ‚Мѓ^Ѓ[ѓQѓbѓg‚Н", "You are targeting ") + name(locvar_txttargetnpc_i) + lang(" (‹——Ј ", ".(Distance ") + dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, locvar_txttargetnpc_i), cdata(CDATA_Y, locvar_txttargetnpc_i)) + ")", 255, 2552, 255
			}
		}
	}
	if ( map(txttargetnpc_arg1, txttargetnpc_arg2, 5) != 0 ) {
		color 0, 0, 0
		pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
		locvar_txttargetnpc_dy++
		bmes txtitemoncell(txttargetnpc_arg1, txttargetnpc_arg2), 255, 2552, 255
	}
	if ( map(txttargetnpc_arg1, txttargetnpc_arg2, 6) != 0 ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			if ( map(txttargetnpc_arg1, txttargetnpc_arg2, 6) / 1000 \ 100 == 15 ) {
				locvar_txttargetnpc_p = map(txttargetnpc_arg1, txttargetnpc_arg2, 6) / 100000 \ 100 + map(txttargetnpc_arg1, txttargetnpc_arg2, 6) / 10000000 * 100
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes mapname(locvar_txttargetnpc_p, 1), 255, 2552, 255
			}
			if ( map(txttargetnpc_arg1, txttargetnpc_arg2, 6) / 1000 \ 100 == 34 ) {
				color 0, 0, 0
				pos 100, windowh - inf_verh - 45 - locvar_txttargetnpc_dy * 20
				locvar_txttargetnpc_dy++
				bmes txtbuilding(map(txttargetnpc_arg1, txttargetnpc_arg2, 6) / 100000 \ 100, map(txttargetnpc_arg1, txttargetnpc_arg2, 6) / 10000000), 255, 2552, 255
			}
		}
	}
	cansee = 1
	return

#deffunc key_direction
	kdx = 0
	kdy = 0
	if ( key == key_north ) {
		kdy--
		return 1
	}
	if ( key == key_south ) {
		kdy++
		return 1
	}
	if ( key == key_west ) {
		kdx--
		return 1
	}
	if ( key == key_east ) {
		kdx++
		return 1
	}
	if ( key == key_northwest ) {
		kdx--
		kdy--
		return 1
	}
	if ( key == key_northeast ) {
		kdx++
		kdy--
		return 1
	}
	if ( key == key_southwest ) {
		kdx--
		kdy++
		return 1
	}
	if ( key == key_southeast ) {
		kdx++
		kdy++
		return 1
	}
	return 0

*com_import

	/********** ORIGINAL - BEGINNING **********

	if ( dbg_noautosave == 0 & gdata(GDATA_WIZARD) == 0 ) {

	 ********** ORIGINAL - ENDING **********/

	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Re-enable save-scumming.

	if ( ( dbg_noautosave == 0 & gdata(GDATA_WIZARD) == 0 & gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_PURGE ) | TweakData(TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING, TWEAK_CATEGORY_GAMEPLAY) == 0 ) {

	/********** BLOODYSHADE CUSTOM - ENDING **********/

		snd SOUNDLIST_WRITE1
		gosub *game_save
		txtmore
		txtef COLOR_YELLOW
		txt_saving
	}
	snd SOUNDLIST_POP2
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	sdim headtemp, 1024
	folder = exedir + "user\\"
	if ( comctrl == 0 | comctrl == 2 ) {
		dirlist buff, folder + "*.pum"
	}
	if ( comctrl == 1 ) {
		dirlist buff, folder + "*.pet"
	}
	notesel buff
	sdim listn2, 40, 2, 500
	repeat stat
		noteget file, cnt
		if ( file == "temp.eum" | file == "temp.ept" | file == "temp.pum" | file == "temp.pet" ) {
			continue
		}
		bload folder + file, headtemp, 1024
		notesel headtemp
		noteget s, 0
		noteget s(1), 1
		noteget s(2), 3
		noteget s(3), 4
		sreplace s(2), s(2), "ElonaPlus Custom-GX ", ""
		list(0, listmax) = listmax, 0, int(s(3))
		listn(0, listmax) = "(" + file + ") " + s + " " + s(1), file
		listn2(0, listmax) = s(2)
		listmax++
		noteunsel
	loop
	if ( cfg_net == 0 ) {
		if ( cfg_net != 0 ) {
			if ( comctrl == 1 ) {
				net_dllist ".ept", 1
				net_dllist ".pet", 1
			}
			if ( comctrl == 2 ) {
				net_dllist ".eum", 1
				net_dllist ".pum", 1
			}
		}
	}
	if ( comctrl == 0 | comctrl == 2 ) {
		txt lang("‚З‚Мѓ‹Ѓ[ѓЂ‚р–K–в‚·‚йЃH ", "Which room do you want to visit? ")
	}
	if ( comctrl == 1 ) {
		txt lang("‚З‚Мѓ`Ѓ[ѓЂ‚Ж‘Ођн‚·‚йЃH", "Which team do you want to play a match? ")
	}
	windowshadow = 1
*com_import_loop_pgchk
	redraw 0
	page_check
*com_import_loop
	redraw 0
	if ( comctrl == 0 | comctrl == 2 ) {
		s = lang("ѓ‹Ѓ[ѓЂ€к——", "Room List")
	}
	if ( comctrl == 1 ) {
		s = lang("ѓyѓbѓgѓ`Ѓ[ѓЂ€к——", "Team List")
	}
	s(1) = lang("BackSpace [ЌнЏњ]  ", "BackSpace [Delete]  ") + strhint2 + strhint3
	display_window (windoww - 640) / 2 + inf_screenx, winposy(448), 640, 448
	if ( comctrl == 0 | comctrl == 2 ) {
		s = lang("ѓ‹Ѓ[ѓЂ‚М–јЏМ", "Name")
	}
	if ( comctrl == 1 ) {
		s = lang("ѓ`Ѓ[ѓЂ‚М–јЏМ", "Name")
	}
	display_topic s, wx + 28, wy + 36
	display_topic "Ver", wx + 534, wy + 36
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 540, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		s = listn(0, p)
		cutname s, 64
		cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		pos wx + 570, wy + 66 + cnt * 19
		mes listn2(0, p)
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		if ( p == (-999) ) {
			snd SOUNDLIST_FAIL1
			txt lang("ЊЭЉ·ђ«‚М‚И‚ўѓoЃ[ѓWѓ‡ѓ“‚Мѓtѓ@ѓCѓ‹‚Е‚·ЃB", "Selected item is incompatible.")
			goto *com_import_loop_pgchk
		}
		folder = exedir + "user\\"
		if ( listn(1, p) == "net" ) {
			if ( comctrl == 1 ) {
				s = ".ept"
			}
			else {
				s = ".eum"
			}
			net_dl "" + list(1, p) + s, "temp" + s
			usermapid = list(1, p)
			if ( stat == 0 ) {
				txt lang("ѓtѓ@ѓCѓ‹‚МЋж“ѕ‚ЙЋё”s‚µ‚ЅЃB", "Failed to retrieve designated files.")
				goto *com_import_loop_pgchk
			}
			if ( list(2, p) == NET_VERSION ) {
				if ( comctrl == 1 ) {
					s = ".pet"
				}
				else {
					s = ".pum"
				}
				net_dl "" + list(1, p) + s, "temp" + s
				usermapid = list(1, p)
			}
			userfile = "temp" + s
		}
		else {
			userfile = listn(1, p)
		}
		bload folder + userfile, headtemp, 1024
		notesel headtemp
		noteget s, 5
		noteget s(1), 6
		noteget s(2), 1
		if ( comctrl == 0 | comctrl == 2 ) {
			username = "" + s
			userrelation = int(s(1))
		}
		if ( comctrl == 1 ) {
			rtval = int(s), int(s(1))
			rtvaln = s(2)
		}
		return 1
	}
	getkey a, 8
	if ( ginfo(2) == 0 ) {
		if ( noteinfo(0) != 0 ) {
			if ( a == 1 ) {
				userfile = listn(1, cs + pagesize * page)
				exist exedir + "user\\" + userfile
				if ( strsize == (-1) ) {
					goto *com_import_loop_pgchk
				}
				txt lang("–{“–‚Й" + userfile + "‚рЌнЏњ‚·‚йЃH ", "Do you really want to delete " + userfile + "? ")
				promptYesNo
				if ( rtval == 0 ) {
					delete exedir + "user\\" + userfile
					goto *com_import
				}
				goto *com_import_loop_pgchk
			}
		}
	}
	page_change *com_import_loop_pgchk
	if ( key == key_cancel ) {
		gosub *screen_draw
		return 0
	}
	goto *com_import_loop

*findLocation
	if ( tlocinitx != 0 | tlocinity != 0 ) {
		tlocx = tlocinitx
		tlocy = tlocinity
	}
	else {
		tlocx = cdata(CDATA_X, cc)
		tlocy = cdata(CDATA_Y, cc)
	}
	if ( homemapmode ) {
		scposval = 0
	}
	else {
		scposval = 1
		if ( cdata(CDATA_TARGET, CHARA_PLAYER) == 0 ) {
			gosub *findTarget
		}
		gosub *com_findTarget
		if ( listmax == 0 ) {
			txt lang("Ћ‹ЉE“а‚Йѓ^Ѓ[ѓQѓbѓg‚Н‘¶ЌЭ‚µ‚И‚ўЃB", "You look around and find nothing.")
		}
		repeat listmax
			if ( list(0, cnt) == 0 ) {
				continue
			}
			if ( list(0, cnt) == cdata(CDATA_TARGET, CHARA_PLAYER) ) {
				tlocx = cdata(CDATA_X, list(0, cnt))
				tlocy = cdata(CDATA_Y, list(0, cnt))
				break
			}
		loop
	}
*findLocation_WHILE1
	if ( tlochomex != 0 | tlochomey != 0 ) {
		tlocx = tlochomex
		tlocy = tlochomey
		tlochomex = 0
		tlochomey = 0
	}
	screenupdate = -1
	gosub *screen_draw
	dx = (tlocx - scx) * inf_tiles + inf_screenx
	dy = (tlocy - scy) * inf_tiles + inf_screeny
	if ( dy + inf_tiles <= windowh - inf_verh ) {
		pos dx, dy * (dy > 0)
		gfini inf_tiles - (dx + inf_tiles > windoww) * (dx + inf_tiles - windoww), inf_tiles + (dy < 0) * inf_screeny - (dy + inf_tiles > windowh - inf_verh) * (dy + inf_tiles - windowh + inf_verh)
	}
	mapok = 0
	if ( windoww == 1152 & windowh == 864 ) {
		if ( dx > 1104 & dy == (-40) ) {
			mapok = 1
		}
	}
	if ( mapok == 0 ) {
		gfinc 50, 50, 100
	}
	if ( homemapmode == 1 ) {
		pos windoww - 80, 20
		gcopy 2, tile \ 33 * inf_tiles, tile / 33 * inf_tiles, inf_tiles, inf_tiles
	}
	else {
		rc = -1
		repeat 1
			if ( map(tlocx, tlocy, 1) <= 1 ) {
				break
			}
			rc = map(tlocx, tlocy, 1) - 1
			if ( synccheck(rc, -1) == 0 ) {
				if ( cdata(CDATA_TAGTEAM_PARTNER, rc) < 0 ) {
					break
				}
			}
			if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, rc), cdata(CDATA_Y, rc)) == 0 ) {
				break
			}
			if ( (cbit(CHARA_BIT_INVISIBLE, rc) == 0 | cbit(CHARA_BIT_SEE_INVISIBLE, CHARA_PLAYER) | cdata(CDATA_CONDITION_WET, rc)) == 0 ) {
				break
			}
			get_route cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, rc), cdata(CDATA_Y, rc)
			dx = (tlocx - scx) * inf_tiles + inf_screenx
			dy = (tlocy - scy) * inf_tiles + inf_screeny
			if ( maxroute != 0 ) {
				dx = cdata(CDATA_X, cc)
				dy = cdata(CDATA_Y, cc)
				repeat 100
					route_info dx, dy, cnt
					if ( stat == 0 ) {
						break
					}
					else {
						if ( stat == (-1) ) {
							continue
						}
					}
					sx = (dx - scx) * inf_tiles + inf_screenx
					sy = (dy - scy) * inf_tiles + inf_screeny
					if ( sy + inf_tiles <= windowh - inf_verh ) {
						pos sx, sy * (sy > 0)
						gfini inf_tiles - (sx + inf_tiles > windoww) * (sx + inf_tiles - windoww), inf_tiles + (sy < 0) * inf_screeny - (sy + inf_tiles > windowh - inf_verh) * (sy + inf_tiles - windowh + inf_verh)
						gfinc 25, 25, 25
					}
				loop
			}
		loop
	}
	txttargetnpc tlocx, tlocy
	redraw 1
	await cfg_wait1
	key_check
	if ( homemapmode == 1 ) {
		if ( meadmap == 0 ) {
			if ( key == key_enter ) {
				gosub *com_mapset
				keyrelease
				goto *findLocation_WHILE1_CONTINUE
			}
		}
		stick a, 768
		if ( meadmap == 0 ) {
			if ( a == 256 ) {
				key = key_enter
			}
		}
		if ( meadmap == 0 ) {
			if ( a == 512 ) {
				if ( chipm(CHIPM_ROLE, map(tlocx, tlocy, MAP_TILE_ID)) == MAP_CHIP_ROLE_CROP | chipm(CHIPM_ROLE, map(tlocx, tlocy, MAP_TILE_ID)) == MAP_CHIP_ROLE_DRYROCK | chipm(CHIPM_ROLE, map(tlocx, tlocy, MAP_TILE_ID)) == MAP_CHIP_ROLE_COMPOST ) {
					snd SOUNDLIST_FAIL1
					keyrelease
					goto *findLocation_WHILE1_CONTINUE
				}
				tile = map(tlocx, tlocy, MAP_TILE_ID)
				snd SOUNDLIST_CURSOR1
				keyrelease
			}
		}
		tx = limit(mousex - inf_screenx, 0, windoww) / 48
		ty = limit(mousey - inf_screeny, 0, windowh - inf_verh) / 48
		key_direction
		if ( stat == 1 ) {
			cdata(CDATA_X, CHARA_PLAYER) += kdx
			cdata(CDATA_Y, CHARA_PLAYER) += kdy
			if ( cdata(CDATA_X, CHARA_PLAYER) < 0 ) {
				cdata(CDATA_X, CHARA_PLAYER) = 0
			}
			else {
				if ( cdata(CDATA_X, CHARA_PLAYER) >= mdata(MDATA_WIDTH) ) {
					cdata(CDATA_X, CHARA_PLAYER) = mdata(MDATA_WIDTH) - 1
				}
			}
			if ( cdata(CDATA_Y, CHARA_PLAYER) < 0 ) {
				cdata(CDATA_Y, CHARA_PLAYER) = 0
			}
			else {
				if ( cdata(CDATA_Y, CHARA_PLAYER) >= mdata(MDATA_HEIGHT) ) {
					cdata(CDATA_Y, CHARA_PLAYER) = mdata(MDATA_HEIGHT) - 1
				}
			}
		}
		tlocx = tx + scx
		if ( tlocx < 0 ) {
			tlocx = 0
		}
		else {
			if ( tlocx >= mdata(MDATA_WIDTH) ) {
				tlocx = mdata(MDATA_WIDTH) - 1
			}
		}
		tlocy = ty + scy
		if ( tlocy < 0 ) {
			tlocy = 0
		}
		else {
			if ( tlocy >= mdata(MDATA_HEIGHT) ) {
				tlocy = mdata(MDATA_HEIGHT) - 1
			}
		}
	}
	else {
		key_direction
		if ( stat == 1 ) {
			x = tlocx + kdx
			y = tlocy + kdy
			if ( x >= 0 & y >= 0 & x < mdata(MDATA_WIDTH) & y < mdata(MDATA_HEIGHT) ) {
				tlocx += kdx
				tlocy += kdy
			}
		}
	}
	if ( findlocmode == 1 ) {
		if ( rc == (-1) ) {
			i = 0
		}
		else {
			i = rc
		}
		f = 0
		p = 0
		repeat listmax
			if ( cdata(CDATA_X, list(0, cnt)) == cdata(CDATA_X, i) ) {
				if ( cdata(CDATA_Y, list(0, cnt)) == cdata(CDATA_Y, i) ) {
					p = cnt
					break
				}
			}
		loop
		if ( rc != (-1) ) {
			if ( key == key_pageup ) {
				p++
				if ( cdata(CDATA_IN_TAGTEAM, i) == (-1) ) {
					p++
				}
				f = 1
				if ( p >= listmax ) {
					p = 0
				}
			}
			if ( key == key_pagedown ) {
				p--
				f = 1
				if ( p < 0 ) {
					p = listmax - 1
				}
			}
		}
		i = list(0, p)
		if ( f ) {
			snd SOUNDLIST_CURSOR1
			tlocx = cdata(CDATA_X, list(0, p))
			tlocy = cdata(CDATA_Y, list(0, p))
		}
	}
	if ( key == key_enter ) {
		if ( findlocmode == 1 ) {
			if ( cansee == 0 | (chipm(CHIPM_ATTRIB, map(tlocx, tlocy, 0)) & CHIPM_ATTRIB_CANT_PASS) ) {
				txt_cantsee
				goto *findLocation_WHILE1_CONTINUE
			}
			snd SOUNDLIST_OK1
			if ( tlocx == cdata(CDATA_X, CHARA_PLAYER) & tlocy == cdata(CDATA_Y, CHARA_PLAYER) ) {
				if ( gdata(GDATA_RIDER) != 0 ) {
					rc = gdata(GDATA_RIDER)
				}
			}
			if ( rc > CHARA_PLAYER ) {
				if ( cdata(CDATA_IN_TAGTEAM, rc) != 0 ) {
					promptTagTeam
					if ( stat == 0 ) {
						goto *findLocation_WHILE1_CONTINUE
					}
					if ( rtval == 1 ) {
						rc = cdata(CDATA_TAGTEAM_PARTNER, rc)
					}
				}
				cdata(CDATA_TARGET, CHARA_PLAYER) = rc
				txt lang(name(rc) + "‚рѓ^Ѓ[ѓQѓbѓg‚Й‚µ‚ЅЃB", "You target " + name(rc) + ".")
			}
			else {
				tgloc = 1
				tglocx = tlocx
				tglocy = tlocy
				txt lang("’n–К‚рѓ^Ѓ[ѓQѓbѓg‚Й‚µ‚ЅЃB", "You target the ground.")
			}
		}
		else {
			if ( homemapmode == 0 ) {
				snd SOUNDLIST_CURSOR1
			}
		}
		scposval = 0
		if ( tlocinitx == 0 & tlocinity == 0 ) {
			scposval = 0
			gosub *screen_draw
		}
		tlocinitx = 0
		tlocinity = 0
		return cansee
	}
	if ( key == key_cancel ) {
		tlocinitx = 0
		tlocinity = 0
		scposval = 0
		gosub *screen_draw
		return -1
	}
*findLocation_WHILE1_CONTINUE
	goto *findLocation_WHILE1

*com_target
	procid = (procid + 1) \ 4
	proclist(procid) = "com_target" + " ct:" + ct
	page = 0
	pagesize = 16
	cs_bk = -1
	gosub *com_findTarget
	if ( listmax == 0 ) {
		msgdup++
		txt lang("Ћ‹ЉE“а‚Йѓ^Ѓ[ѓQѓbѓg‚Н‘¶ЌЭ‚µ‚И‚ўЃB", "You look around and find nothing.")
		gosub *screen_draw
		goto *pc_turn
	}
	cs = 0
	repeat listmax
		if ( list(0, cnt) == cdata(CDATA_TARGET, CHARA_PLAYER) ) {
			cs = cnt \ pagesize
			page = cnt / pagesize
		}
	loop
*com_target_loop_pgchk
	redraw 0
	page_check
*com_target_loop
	if ( cs != cs_bk ) {
		screenupdate = -1
		gosub *screen_draw
		keyrange = 0
		font lang(cfg_font1, cfg_font2), 20 - en * 2, 1
		color 255, 255, 255
		repeat pagesize
			p = pagesize * page + cnt
			if ( p >= listmax ) {
				break
			}
			key_list(cnt) = key_select(cnt)
			keyrange++
			x = list(1, p) - scx
			y = list(2, p) - scy
			if ( cs == cnt ) {
				i = p
				get_route cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, list(0, p)), cdata(CDATA_Y, list(0, p))
				dx = (tlocx - scx) * inf_tiles + inf_screenx
				dy = (tlocy - scy) * inf_tiles + inf_screeny
				if ( maxroute != 0 ) {
					dx = cdata(CDATA_X, cc)
					dy = cdata(CDATA_Y, cc)
					repeat 100
						route_info dx, dy, cnt
						if ( stat == 0 ) {
							break
						}
						else {
							if ( stat == (-1) ) {
								continue
							}
						}
						sx = (dx - scx) * inf_tiles + inf_screenx
						sy = (dy - scy) * inf_tiles + inf_screeny
						if ( sy + inf_tiles <= windowh - inf_verh ) {
							pos sx, sy * (sy > 0)
							gfini inf_tiles - (sx + inf_tiles > windoww) * (sx + inf_tiles - windoww), inf_tiles + (sy < 0) * inf_screeny - (sy + inf_tiles > windowh - inf_verh) * (sy + inf_tiles - windowh + inf_verh)
							gfinc 25, 25, 25
						}
						await
					loop
				}
				sx = x * inf_tiles + inf_screenx
				sy = y * inf_tiles + inf_screeny
				if ( sy + inf_tiles <= windowh - inf_verh ) {
					pos sx, sy * (sy > 0)
					gfini inf_tiles, inf_tiles + (sy < 0) * inf_screeny - (sy + inf_tiles > windowh - inf_verh) * (sy + inf_tiles - windowh + inf_verh)
					gfinc 50, 50, 100
				}
			}
			display_key x * inf_tiles + inf_screenx - 12, y * inf_tiles - 12, cnt
		loop
		txttargetnpc cdata(CDATA_X, list(0, i)), cdata(CDATA_Y, list(0, i))
		cs_bk = cs
		gosub *screen_drawStatus
		redraw 1
	}
	await cfg_wait1
	key_check
	cursor_check
	if ( key == key_target ) {
		key = key_list(cs)
	}
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		cdata(CDATA_TARGET, CHARA_PLAYER) = p
		snd SOUNDLIST_OK1
		txt lang(name(p) + "‚рѓ^Ѓ[ѓQѓbѓg‚Й‚µ‚ЅЃB", "You target " + name(p) + ".")
		gosub *screen_draw
		goto *com_target_loop_BREAK1
	}
	page_change *com_target_loop_pgchk
	if ( key == key_cancel ) {
		gosub *screen_draw
		goto *com_target_loop_BREAK1
	}
	goto *com_target_loop
*com_target_loop_BREAK1
	goto *pc_turn

*com_mapset
	ww = 33
	wh = 25
	wx = 0
	wy = 0
	snd SOUNDLIST_POP2
*com_mapset_WHILE1
	redraw 0
	gmode 0
	color 200, 200, 200
	p = 0
	repeat wh
		cnt2 = cnt
		repeat ww
			if ( p < listmax ) {
				pos wx + cnt * 24, wy + cnt2 * 24
				gzoom 24, 24, 2, list(0, p) \ ww * 48, list(0, p) / ww * 48, 48, 48
				if ( chipm(CHIPM_ATTRIB, list(0, p)) & CHIPM_ATTRIB_CANT_PASS ) {
					color 240, 230, 220
					boxl wx + cnt * 24, wy + cnt2 * 24, wx + cnt * 24 + 24, wy + cnt2 * 24 + 24
				}
			}
			p++
		loop
	loop
	gmode 2
	redraw 1
	await cfg_wait1
	stick a
	if ( a == 256 ) {
		p = mousex / 24 + mousey / 24 * ww
		if ( p >= listmax ) {
			snd SOUNDLIST_FAIL1
			goto *com_mapset_WHILE1_CONTINUE
		}
		tile = list(0, p)
		snd SOUNDLIST_OK1
		goto *com_mapset_WEND1
	}
	if ( a == 512 ) {
		goto *com_mapset_WEND1
	}
*com_mapset_WHILE1_CONTINUE
	goto *com_mapset_WHILE1
*com_mapset_WEND1
	screenupdate = -1
	gosub *screen_draw
	return

*com_ally
	snd SOUNDLIST_POP2
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	if ( allyctrl == 2 ) {
		list(0, listmax) = 99, -9999
		listmax++
	}
	repeat MAX_CHARA_FOLLOWER
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) {
			continue
		}

		/********** ANNA CUSTOM - BEGINNING **********/

		if ( cdata(CDATA_PRECIOUS_ALLY, cnt) != 0 & PAllyFilter == 1 ) {
			continue
		}

		/********** ANNA CUSTOM - ENDING **********/

		if ( allyctrl == 1 ) {
			if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_ALLY_DEAD | cdata(CDATA_PRECIOUS_ALLY, cnt) != 0 ) {
				continue
			}
		}
		if ( allyctrl == 7 ) {
			if ( cdata(CDATA_PRECIOUS_ALLY, cnt) != 0 ) {
				continue
			}
		}
		if ( allyctrl == 3 | allyctrl == 5 | allyctrl == 6 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
		}
		if ( allyctrl == 5 ) {
			if ( cnt == rc ) {
				continue
			}
		}
		if ( allyctrl == 2 ) {
			if ( cdata(CDATA_IN_TAGTEAM, cnt) != 0 ) {
				continue
			}
		}
		if ( cdata(CDATA_AREA, cnt) != AREA_NONE ) {
			if ( allyctrl == 1 | allyctrl == 2 ) {
				continue
			}
		}
		if ( allyctrl != 1 ) {
			if ( cbit(CHARA_BIT_BODYGUARD, cnt) == 1 ) {
				continue
			}
		}
		if ( allyctrl != 6 ) {
			if ( cbit(CHARA_BIT_GUARD_TEMP, cnt) == 1 ) {
				continue
			}
		}
		if ( allyctrl != 6 ) {
			if ( cbit(CHARA_BIT_RIDE, cnt) ) {
				continue
			}
		}
		if ( allyctrl == 8 ) {
			if ( cnt == tc ) {
				continue
			}
			if ( cdata(CDATA_IN_TAGTEAM, cnt) != 0 ) {
				continue
			}
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( cdata(CDATA_AREA, cnt) != 0 ) {
				continue
			}
		}
		if ( cnt == CHARA_PLAYER ) {
			continue
		}
		list(0, listmax) = cnt, -cdata(CDATA_LEVEL, cnt)
		listmax++
	loop
	gosub *sort_list
	if ( allyctrl == 2 ) {
		p = 0
		dim followerin, 16
		repeat listmax
			if ( cnt == 0 ) {
				continue
			}
			i = list(0, cnt)
			if ( cdata(CDATA_EXIST, i) != CHAR_STATE_ALLY_DEAD & cdata(CDATA_EXIST, i) != CHAR_STATE_ALLY_WAIT & cdata(CDATA_EXIST, i) != CHAR_STATE_SUSPEND & cdata(CDATA_EXIST, i) != CHAR_STATE_ALLY_WORK ) {
				followerin(i) = 1
				p++
				if ( p == arenaop(1) ) {
					break
				}
			}
		loop
	}
	windowshadow = 1
*com_ally_loop
	redraw 0
	cs_bk = -1
	pagemax = (listmax - 1) / pagesize
	if ( page < 0 ) {
		page = pagemax
	}
	else {
		if ( page > pagemax ) {
			page = 0
			txtnew
		}
	}
	if ( allyctrl == 0 ) {
		txt lang("’N‚рЊД‚С–Я‚·ЃH", "Who to recall?")
		s(10) = lang("ЊД‚С–Я‚·’‡ЉФ", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		x = 0
	}
	if ( allyctrl == 1 ) {
		txt lang("’N‚р”„‚и”т‚О‚·ЃH", "Who to sell off?")
		s(10) = lang("”„‚и”т‚О‚·’‡ЉФ", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("’l’i", "Value")
		x = 20
	}
	if ( allyctrl == 2 ) {
		i = 0
		repeat MAX_CHARA_FOLLOWER
			i += followerin(cnt) == 1
		loop
		if ( i < arenaop(1) ) {
			txtef COLOR_RED
		}
		else {
			txtef COLOR_BLUE
		}
		txt lang("ЋЋЌ‡‚М‹K’иђlђ”: ", "Participant: ") + i + " / " + arenaop(1)
		s(10) = lang("ЏoЏк‚·‚й’‡ЉФ", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		x = 20
	}
	if ( allyctrl == 3 ) {
		if ( leoleo == 1 | leoleo == 2 ) {
			txt lang("’N‚М—Н‚рЉoђБ‚і‚№‚йЃH", "Whose power will you awaken?")
			s(10) = lang("‘ОЏЫЊу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("•K—vAP/ЏЉЋќAP", "Cost/AP")
		}
		if ( leoleo == 3 ) {
			txt lang("’N‚М—Н‚рЉoђБ‚і‚№‚йЃH", "Whose power will you awaken?")
			s(10) = lang("‘ОЏЫЊу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("ЏЉЋќAP", "AP")
		}
		if ( ikoru == 1000 ) {
			txt lang("’N‚М•”€К‚р‘ќ‚в‚·ЃH", "Who will you add body parts to?")
			s(10) = lang("‘ОЏЫЊу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Њ»ЌЭ‚Мђ¶–Ѕ—Н", "Life")
		}
		if ( ikoru == 100 ) {
			txt lang("’N‚ЙЋи“`‚н‚№‚йЃH", "Who will help?")
			s(10) = lang("‘ОЏЫЊу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		}
		if ( ikoru == 10 ) {
			txt lang("’N‚МbЃH", "Whose story?")
			s(10) = lang("‘ОЏЫЊу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		}
		if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_DOJO ) {
			txt lang("’N‚р“ь–е‚і‚№‚йЃH", "Who will train here?")
			s(10) = lang("–е‰єђ¶Њу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		}
		if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_DISCARDED_RANCH ) {
			txt lang("’N‚р•ъ–q‚·‚йЃH", "Who do you want to leave here?")
			s(10) = lang("•ъ–qЊу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		}
		if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_SHOP ) {
			txt lang("’N‚р“X’·‚Й‚·‚йЃH", "Who will be the shopkeeper?")
			s(10) = lang("“X’·Њу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("–Ј—Н/ЊрЏВ", "CHR/Negotiation")
		}
		if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
			txt lang("’N‚рѓuѓЉЃ[ѓ_Ѓ[‚Й‚·‚йЃH", "Who will be the breeder?")
			s(10) = lang("ѓuѓЉЃ[ѓ_Ѓ[Њу•в", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("”ЙђB—Н", "Breed Power")
		}
		if ( gdata(GDATA_AREA) == AREA_HOME ) {
			txt lang("’N‚р‘ШЌЭ‚і‚№‚йЃH", "Who should stay in your home?")
			s(10) = lang("‘ШЌЭЏу‘Ф‚М•ПЌX", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		}
		x = 20
	}
	if ( allyctrl == 4 | allyctrl == 5 | allyctrl == 6 | allyctrl == 7 | allyctrl == 8 ) {
		txt lang("‘ОЏЫ‚Й‚·‚й’‡ЉФ‚НЃH", "Who is the subject?")
		s(10) = lang("’‡ЉФ", "Ally List"), strhint2 + strhint3, lang("’‡ЉФ‚МЏо•с", "Name"), lang("Џу‘Ф", "Status")
		if ( allyctrl == 5 ) {
			if ( rc != CHARA_PLAYER ) {
				s(13) = lang("Љl“ѕ•”€К/‹Z”\", "Body/Skill")
			}
		}
		x = 0
	}
*com_ally_loop_WHILE1
	redraw 0
	s = s(10), s(11)
	display_window (windoww - 620) / 2 + inf_screenx, winposy(400), 620, 400
	display_topic s(12), wx + 28, wy + 36
	display_topic s(13), wx + 350 + x, wy + 36
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 500, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		if ( list(0, p) != 99 ) {
			picols = cdata(CDATA_CHARA_PIC, list(0, p))
			if ( cdata(CDATA_PIC, list(0, p)) >= xy2pic(1, 21) & cdata(CDATA_PIC, list(0, p)) <= xy2pic(31, 21) ) {
				picols = 0
			}
			i = cdata(CDATA_PIC, list(0, p)) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT, (cdata(CDATA_PIC, list(0, p)) - picols * COLOR_TINT_MULT) / COLOR_TINT_MULT
			chara_preparepic i, i(1)
			pos wx + 40, wy + 74 + cnt * 19 - 8
			gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
			grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i) / (1 + (chipc(CHIPC_HEIGHT, i) > inf_tiles)), inf_tiles
		}
		i = list(0, p)
		if ( i == 99 ) {
			cs_list lang("Њ€’и", "Proceed"), wx + 84, wy + 66 + cnt * 19 - 1, 19
			continue
		}
		if ( allyctrl == 0 | allyctrl == 2 | allyctrl == 3 | allyctrl == 4 | allyctrl == 5 | allyctrl == 6 | allyctrl == 7 | allyctrl == 8 ) {
			s = "" + cdatan(CDATAN_AKA, i) + " " + cdatan(CDATAN_NAME, i)
			if ( cdata(CDATA_AREA, i) != AREA_NONE ) {
				s = s + "(" + mapname(cdata(CDATA_AREA, i)) + ")"
			}
			if ( cbit(CHARA_BIT_RIDE, i) ) {
				s += lang("(Џж”n)", "(Riding")
			}
			if ( allyctrl == 2 ) {
				if ( followerin(i) == 1 ) {
					s += lang(" *ЏoЏк* ", " *In* ")
				}
			}
			n = 0
			if ( allyctrl == 5 ) {
				if ( cdata(CDATA_LEVEL, i) > sdata(SKILL_NORMAL_GENE_ENGINEER, CHARA_PLAYER) + 5 ) {
					n = 3
				}
			}
			cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19, 0, n
			if ( allyctrl != 3 | (allyctrl == 3 & gdata(GDATA_AREA) == AREA_HOME) | (allyctrl == 3 & gdata(GDATA_AREA) == AREA_DOJO) | (allyctrl == 3 & adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_DISCARDED_RANCH) ) {
				if ( allyctrl == 6 ) {
					if ( fov_los(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, i), cdata(CDATA_Y, i)) == 0 | dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, i), cdata(CDATA_Y, i)) > sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
						s = lang("(Ћ‹ЉoЉO)", "(OutRange")
					}
					else {
						s = "Hp:" + cdata(CDATA_HP, i) * 100 / cdata(CDATA_MAX_HP, i) + "%"
						if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_OFFENSIVE ) {
							s += lang("/“ЛЊ‚/", "(offensive")
						}
						if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_DEFENSIVE ) {
							s += lang("/–hЊд/", "(defensive")
						}
						if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_INTERCEPT ) {
							s += lang("/Њ}Њ‚/", "(intercept")
						}
						if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_TALKING ) {
							s += lang("/ЊрЏВ/", "(talking")
						}
						s += lang("ѓpѓЏЃ[ѓQЃ[ѓW" + cdata(CDATA_POWER_GAUGE, i) + "%", " PGauge:" + cdata(CDATA_POWER_GAUGE, i) + "%")
					}
				}
				if ( allyctrl != 6 ) {
					s = "Lv." + cdata(CDATA_LEVEL, i) + " "
					if ( cdata(CDATA_EXIST, i) == CHAR_STATE_ALLY_DEAD ) {
						if ( cdata(CDATA_CAN_REVIVE, i) <= 0 ) {
							s += lang("(ѓ}ѓbѓvђШ‘Ц‚¦‚й‚Ь‚Е•њЉ€•s”\)", "(revival impossible until you switch area)")
						}
						else {
							s += lang("(ЋЂ‚с‚Е‚ў‚й)", "(Dead")
						}
					}
					if ( cdata(CDATA_EXIST, i) == CHAR_STATE_ALLY_WAIT ) {
						if ( allyctrl == 0 ) {
							s += lang("(‘Т‹@‚µ‚Д‚ў‚й)", "(Waiting)")
						}
						else {
							s += "(Hp: " + cdata(CDATA_HP, i) * 100 / cdata(CDATA_MAX_HP, i) + "%) " + lang("‘Т‹@", "Waiting")
						}
					}
					if ( cdata(CDATA_EXIST, i) == CHAR_STATE_ALIVE ) {
						if ( allyctrl == 0 ) {
							s += lang("(ђ¶‚«‚Д‚ў‚й)", "(Alive)")
						}
						else {
							s += "(Hp: " + cdata(CDATA_HP, i) * 100 / cdata(CDATA_MAX_HP, i) + "%)"
						}
					}
					if ( cdata(CDATA_EXIST, i) == CHAR_STATE_SUSPEND ) {
						if ( gdata(GDATA_FLAG_MAIN) >= 875 & gdata(GDATA_FLAG_MAIN) < 1000 ) {
							if ( allyctrl == 0 ) {
								s += lang("(ЉD‚Й‚И‚Б‚Ѕ)", "(Ash)")
							}
                        }
						else {
							if ( allyctrl == 0 ) {
								s += lang("(‚Н‚®‚к‚Д‚ў‚й)", "(Stray)")
							}
                            else {
								s += "(Hp: " + cdata(CDATA_HP, i) * 100 / cdata(CDATA_MAX_HP, i) + "%)"
                            }
						}
					}
				}
			}
			else {
				if ( ikoru == 1000 ) {
					s = "   " + sorg(SKILL_ATTR_LIFE, i)
				}
				if ( leoleo == 1 ) {
					hpcost = cdata(CDATA_INIT_SPEED, i) + 100
					s = "   " + hpcost + " / " + cdata(CDATA_AP_CURRENT, i)
				}
				if ( leoleo == 2 ) {
					hpcost = 0
					hpcost = cdata(CDATA_INIT_LIFEMANA, i) + 300
					if ( cbit(CHARA_BIT_ARMOUR, i) ) {
						hpcost += 300
					}
					if ( cbit(CHARA_BIT_RES_ELEMENTAL, i) ) {
						hpcost += 500
					}
					if ( cbit(CHARA_BIT_METAL, i) ) {
						hpcost += 800
					}
					s = "   " + hpcost + " / " + cdata(CDATA_AP_CURRENT, i)
				}
				if ( leoleo == 3 ) {
					s = "   " + cdata(CDATA_AP_CURRENT, i)
				}
				if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_SHOP ) {
					s = "   " + sdata(SKILL_ATTR_CHA, i) + " / " + sdata(SKILL_NORMAL_NEGOTIATION, i)
				}
				hansyoku = cbreeder(i) + 1
				if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
					s = "   " + hansyoku
				}
			}
			if ( allyctrl == 5 ) {
				if ( rc != CHARA_PLAYER ) {
					tc = i
					gosub *gene_body
					if ( stat == (-1) ) {
						s = lang("‚И‚µ", "None")
					}
					else {
						s = bodyn(rtval)
					}
					s += "/"
					gosub *gene_skill
					if ( stat == 0 ) {
						s += lang("‚И‚µ", "None")
					}
					else {
						s += "" + skillname(rtval)
						if ( rtval(1) != (-1) ) {
							s += ", " + skillname(rtval(1))
						}
					}
				}
			}
			pos wx + 370, wy + 66 + cnt * 19 + 2
			mes s
		}
		if ( allyctrl == 1 ) {
			s = "" + cdatan(CDATAN_AKA, i) + " " + cdatan(CDATAN_NAME, i)
			s += " Lv." + cdata(CDATA_LEVEL, i)
			cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19
			s = "" + calcslavevalue(i) * 2 / 3 + strgold
			pos wx + 390, wy + 66 + cnt * 19 + 2
			mes s
		}
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		if ( allyctrl == 5 ) {
			if ( cdata(CDATA_LEVEL, p) > sdata(SKILL_NORMAL_GENE_ENGINEER, CHARA_PLAYER) + 5 ) {
				snd SOUNDLIST_FAIL1
				txt lang("ђ¶‰»Љw‚МѓXѓLѓ‹‚Є‘«‚и‚И‚ўЃB", "You need to be a better gene engineer.")
				goto *com_ally_loop
			}
		}
		if ( allyctrl == 2 ) {
			i = 0
			repeat MAX_CHARA_FOLLOWER
				if ( followerin(cnt) == 1 ) {
					i++
				}
			loop
			if ( p == 99 ) {
				if ( i == 0 ) {
					txt lang("ЌЕ’б‚Е‚а€кђl‚МЋQ‰БЋТ‚Є•K—v‚ѕЃB", "You need at least 1 pet to start the battle.")
					snd SOUNDLIST_FAIL1
					goto *com_ally_loop_WHILE1_CONTINUE
				}
				snd SOUNDLIST_OK1
				return 1
			}
			if ( cdata(CDATA_EXIST, p) == CHAR_STATE_ALLY_DEAD | cdata(CDATA_EXIST, p) == CHAR_STATE_SUSPEND ) {
				txt lang("ЋЂ‚с‚Е‚ў‚йЃB", he(p) + " " + is(p) + " dead.")
				snd SOUNDLIST_FAIL1
				goto *com_ally_loop_WHILE1_CONTINUE
			}
			if ( cdata(CDATA_EXIST, p) == CHAR_STATE_ALLY_WAIT ) {
				txt lang("‘Т‚Б‚Д‚ў‚йЃB", he(p) + " " + is(p) + " waiting.")
				snd SOUNDLIST_FAIL1
				goto *com_ally_loop_WHILE1_CONTINUE
			}
			if ( cdata(CDATA_EXIST, p) == CHAR_STATE_ALLY_WORK ) {
				txt lang("“­‚ў‚Д‚ў‚йЃB", he(p) + " " + is(p) + " working.")
				snd SOUNDLIST_FAIL1
				goto *com_ally_loop_WHILE1_CONTINUE
			}
			if ( followerin(p) == 0 ) {
				if ( i >= arenaop(1) ) {
					snd SOUNDLIST_FAIL1
					txt lang("ЋQ‰Бg‚р’ґ‚¦‚Д‚ў‚йЃB", "Too many participants.")
					goto *com_ally_loop_WHILE1_CONTINUE
				}
				else {
					followerin(p) = 1
					snd SOUNDLIST_OK1
				}
			}
			else {
				followerin(p) = 0
				snd SOUNDLIST_OK1
			}
			goto *com_ally_loop
		}
		return p
	}
	page_change *com_ally_loop, 1
	if ( key == key_cancel ) {
		return -1
	}
*com_ally_loop_WHILE1_CONTINUE
	goto *com_ally_loop_WHILE1

*com_knowOther
	listmax = 0
	pagesize = 16
	page = 0
	cs = 0
	cc = tc
	cs_bk = -1
	snd SOUNDLIST_POP2
	buff = ""
	notesel buff
	if ( jp ) {
		buff += "<title1>ЃџЋvЌlЏу‘Ф<def>\n"
	}
	if ( en ) {
		buff += "<title1>* Mental state<def>\n"
	}
	s = lang("“Б‚Й‰Ѕ‚аЌl‚¦‚Д‚ў‚И‚ў", "Not thinking anything in particular")
	kokoro = rnd(17)
	if ( kokoro == 1 ) {
		s = lang("‚а‚Б‚ЖЋhЊѓ‚Є‚Щ‚µ‚ў", "Want more stimulation")
	}
	if ( kokoro == 2 ) {
		s = lang("ђМ‚М‚±‚Ж‚рЋv‚ўЏo‚µ‚Д‚ў‚й", "Remember old things")
	}
	if ( kokoro == 3 ) {
		s = lang("Ћ©•Є‚Н‚±‚М‚Ь‚Ь‚Е‚ў‚ў‚М‚©‹^–в", "Am I OK?")
	}
	if ( kokoro == 4 ) {
		s = lang("‰Ѕ‚аЌl‚¦‚И‚ўЃI‚ЖЌl‚¦‚Д‚ў‚й", "Do not think about anything!")
	}
	if ( kokoro == 5 ) {
		s = lang("ђS‚р”`‚ў‚Д‚ў‚й‚±‚Ж‚И‚с‚Д‚ЁЊ©’К‚µЃI‚Ж”O‚¶‚Д‚ў‚й", "I know that you are looking into my heart!")
	}
	if ( kokoro == 6 ) {
		s = lang("‚а‚Б‚ЖЋ©•Є‚М‚±‚Ж‚р—ќ‰р‚µ‚Д‚Щ‚µ‚ў", "Want you to understand more about myself")
	}
	if ( kokoro == 7 ) {
		s = lang("“V‹C‚Є‹C‚Й‚И‚й", "Concerned about the weather!")
	}
	if ( kokoro == 8 ) {
		s = lang("‰Ж‘°‚М‚±‚Ж‚ЄђS”z", "Worried about my family")
	}
	if ( kokoro == 9 ) {
		s = lang("‘Ю‹ь‚Е‚µ‚е‚¤‚Є‚И‚ў", "Very bored")
	}
	if ( kokoro == 10 ) {
		s = lang("‰Ѕ‚©–Y‚к‚Д‚ў‚й‹C‚Є‚·‚йЃc", "Forgetting something...")
	}
	if ( kokoro == 11 ) {
		s = lang("–Ъ‚Є‚ї‚е‚Б‚Ж‚©‚д‚ў", "Eyes slightly itchy")
	}
	if ( kokoro == 12 ) {
		s = lang("‚И‚єЉiЌ·‚Н‚И‚­‚И‚з‚И‚ў‚М‚ѕ‚л‚¤", "Why will the gaps not disappear?")
	}
	if ( kokoro == 13 ) {
		s = lang("ђ¶‚«‚й‚±‚Ж‚М€У–Ў‚рЌl‚¦‚Д‚ў‚й", "Thinking about the meaning of living")
	}
	if ( kokoro == 14 ) {
		s = lang("‚З‚¤‚µ‚Д‚аѓAѓЊ‚Є—~‚µ‚ўЃc", "Absolutely want it...")
	}
	if ( kokoro == 15 ) {
		s = lang("€¤‚рЉґ‚¶‚Д‚ў‚Ѕ‚ў", "Want to feel love")
	}
	if ( kokoro == 16 ) {
		s = lang("‚±‚М‘OЊ©‚Ѕ–І‚Н‚И‚с‚ѕ‚Б‚Ѕ‚М‚©", "What was the dream last time?")
	}
	if ( cdata(CDATA_HUNGER, tc) <= 10000 ) {
		s = lang("‚Ё• ‚Є‹у‚ў‚Д—Н‚ЄЏo‚И‚ў", "Hungry and has no strength.")
		kokoro = rnd(5)
		if ( kokoro == 1 ) {
			s = lang("‚И‚с‚Е‚а‚ў‚ў‚©‚з€Э‚Й“ь‚к‚Ѕ‚ў", "Want to eat anything")
		}
		if ( kokoro == 2 ) {
			s = lang("‰Ѕ‚©ѓKѓbѓcѓЉ‚ЖђH‚Ч‚Ѕ‚ў", "Wants to eat a lot")
		}
		if ( kokoro == 3 ) {
			s = lang("ЉГ‚ў‚а‚М‚Є‚Щ‚µ‚ў", "Wants a sweet one")
		}
		if ( kokoro == 4 ) {
			s = lang("”ь–Ў‚µ‚ўЋи—ї—ќ‚ЄђH‚Ч‚Ѕ‚ў", "Want to eat delicious home cooking")
		}
	}
	if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_THIRST, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
		if ( cdata(CDATA_THIRST, tc) <= 10000 ) {
			s = lang("Љ±‚©‚з‚С‚»‚¤", "Looks completely dried up")
			kokoro = rnd(4)
			if ( kokoro == 1 ) {
				s = lang("ЌA‚ЄѓJѓ‰ѓJѓ‰‚ѕ", "My throat hurts")
			}
			if ( kokoro == 2 ) {
				s = lang("ђ…•Є•s‘«‚Е‚У‚з‚У‚з‚·‚й", "Seems disoriented from the lack of water")
			}
			if ( kokoro == 3 ) {
				s = lang("‚ЭЃAђ…Ѓc", "W-Water...")
			}
		}
	}
	if ( cdata(CDATA_EVOCHAT_POINTS, tc) > 0 ) {
		s = lang("ЌЎ“ъ‚а€к“ъЉж’Ј‚к‚»‚¤", "I can work hard today")
		kokoro = rnd(3)
		if ( kokoro == 1 ) {
			s = lang("Љр‚µ‚­‚Д‚µ‚е‚¤‚Є‚И‚ў", "Happy")
		}
		if ( kokoro == 2 ) {
			s = lang("‚±‚¤‚ў‚¤ђ¶Љ€‚а€«‚­‚И‚ў", "Such a life is not bad either")
		}
	}
	if ( cdata(CDATA_EVOCHAT_POINTS, tc) == 10 ) {
		s = lang("’N‚©‚Й‚М‚л‚Ї‚Ѕ‚ў", "Want to brag about someone")
		kokoro = rnd(3)
		if ( kokoro == 1 ) {
			s = lang("‚Ж‚Б‚Д‚аЌK‚№ЃI", "Very happy!")
		}
		if ( kokoro == 2 ) {
			s = lang("ЌЎ‚Ь‚Еђ¶‚«‚Д‚«‚Д‚ж‚©‚Б‚Ѕ", "I am glad that I am alive")
		}
	}
	if ( cdata(CDATA_AI_AGGRO, tc) > 0 ) {
		if ( cdata(CDATA_TONE, tc) == 0 ) {
			s = lang("ђв‘О•‰‚Ї‚И‚ў", "I will never lose")
		}
		if ( cdata(CDATA_TONE, tc) == 1 ) {
			s = lang("“G‚Н“|‚·‚ѕ‚Ї", "Only enemies are beaten")
		}
		if ( cdata(CDATA_TONE, tc) == 2 ) {
			s = lang("‚ў‚В‚а’К‚и‚в‚к‚О‘еЏд•v", "I will fight as usual")
		}
		if ( cdata(CDATA_TONE, tc) == 3 ) {
			s = lang("Џџ‚Д‚й‚©•s€А", "Anxious about defeat")
		}
		if ( cdata(CDATA_TONE, tc) == 4 ) {
			s = lang("•‰‚Ї‚й‚н‚Ї‚Є‚И‚ў", "No possibility of lose")
		}
		if ( cdata(CDATA_TONE, tc) == 5 ) {
			s = lang("‚ў‚ґђqЏн‚ЙЏџ•‰ЃI", "Let's fight squarely")
		}
		if ( cdata(CDATA_TONE, tc) == 6 ) {
			s = lang("‚«‚Б‚Ж‚И‚с‚Ж‚©‚И‚й", "Sure works well")
		}
	}
	if ( cdata(CDATA_SP, tc) < cdata(CDATA_MAX_SP, tc) / 4 ) {
		s = lang("‚а‚¤‹x‚Э‚Ѕ‚ў", "Want to rest")
		kokoro = rnd(4)
		if ( kokoro == 1 ) {
			s = lang("‚И‚с‚©‚З‚¤‚Е‚а‚ж‚­‚И‚Б‚Д‚«‚Ѕ", "It keeps getting more difficult...")
		}
		if ( kokoro == 2 ) {
			s = lang("‚±‚к€ИЏгЉж’Ј‚й•K—v‚Н‚ ‚й‚М‚©ЃH", "Do I really need to work this hard?")
		}
		if ( kokoro == 3 ) {
			s = lang("‚ѕ‚©‚зѓCѓ„‚ѕ‚Б‚Ѕ‚с‚ѕ", "Well, that was unpleasant")
		}
	}
	if ( cdata(CDATA_HP, tc) < cdata(CDATA_MAX_HP, tc) / 4 ) {
		s = lang("Ћ©•Є‚НЋЂ‚К‚©‚а‚µ‚к‚И‚ў", "I may die")
		kokoro = rnd(3)
		if ( kokoro == 1 ) {
			s = lang("‚Ь‚ѕ“|‚к‚й‚н‚Ї‚Й‚Н‚ў‚©‚И‚ў", "I can not afford to fall down yet")
		}
		if ( kokoro == 2 ) {
			s = lang("‚±‚±‚рЋЂ‚ЙЏкЏЉ‚Й‚·‚й‹C‚Н‚И‚ў", "I am not going to die here")
		}
		if ( cdata(CDATA_MASTER_SERVANT2, tc) >= 5 ) {
			s = lang("’Й‚ў’Й‚ўЊ™‚ѕЋЂ‚Й‚Ѕ‚­‚И‚ў", "I do not want to die...")
		}
		if ( cdata(CDATA_MASTER_SERVANT2, tc) <= (-5) ) {
			s = lang("‚И‚с‚ѕ‚©ѓ]ѓNѓ]ѓN‚·‚й", "I am excited")
		}
	}
	if ( cdata(CDATA_CONDITION_BLIND, tc) > 0 ) {
		s = lang("‰Ѕ‚аЊ©‚¦‚И‚­‚Д•s€А", "Anxious that can not see anything")
	}
	if ( cdata(CDATA_CONDITION_DRUNK, tc) > 0 ) {
		s = lang("‚И‚с‚ѕ‚©–щ‰хЃф", "Somewhat funny")
	}
	if ( cdata(CDATA_CONDITION_BIND, tc) > 0 ) {
		s = lang("‚И‚с‚Ж‚©‚µ‚Д’EЏo‚µ‚И‚ў‚ЖЃI", "Wants to escape by some means")
	}
	if ( cdata(CDATA_CONDITION_PARALYZE, tc) > 0 ) {
		s = lang("“®‚Ї‚И‚­‚Д‰ч‚µ‚ў", "Regret that can not move")
	}
	if ( cdata(CDATA_CONDITION_ANGRY, tc) > 0 ) {
		s = lang("“{‚и‚ЄЋы‚Ь‚з‚И‚ўЃI", "Can not stop anger")
	}
	if ( cdata(CDATA_CONDITION_CONFUSE, tc) > 0 ) {
		s = lang("“Є‚М’†‚Є‚®‚й‚®‚й‚·‚й", "Scattered in head")
	}
	if ( cdata(CDATA_CONDITION_DIM, tc) > 0 ) {
		s = lang("“Є‚Йѓ‚ѓ„‚Є‚©‚©‚Б‚Д‚ў‚й‚Э‚Ѕ‚ў", "Misty on head")
	}
	if ( cdata(CDATA_CONDITION_BRAINWASH, tc) > 0 ) {
		s = lang("–Ѕ—Яѓ’ЋАЌsѓXѓ‹", "Trying to execute the order")
	}
	if ( cdata(CDATA_CONDITION_POISON, tc) > 0 ) {
		s = lang("‹C•Є‚Є€«‚ў", "In a bad mood")
	}
	if ( cdata(CDATA_CONDITION_SICK, tc) > 0 ) {
		s = lang("‘М’І•s—З‚Е‚В‚з‚ў", "Painful a poor physical condition")
	}
	if ( cdata(CDATA_CONDITION_FEAR, tc) > 0 ) {
		s = lang("“¦‚°‚И‚«‚б‘К–Ъ‚ѕ“¦‚°‚И‚«‚б‘К–Ъ‚ѕ", "Have to run away")
	}
	if ( cdata(CDATA_CONDITION_SUFFOCATION, tc) > 0 ) {
		s = lang("‘§‚Є‚Е‚«‚И‚ўЃI‹к‚µ‚ўЃc", "Painful that can not breathe")
	}
	if ( cdata(CDATA_CONDITION_SLEEP, tc) > 0 ) {
		s = lang("–І‚М’†‚Е—r‚Ж—V‚с‚Е‚ў‚й", "Playing with the sheep in dream")
	}
	if ( cdata(CDATA_CONDITION_INSANE, tc) > 0 ) {
		s = lang("‹­”—ЉП”O‚Й‚Ж‚и‚В‚©‚к‚Д‚ў‚й", "Obsession")
		kokoro = rnd(5)
		if ( kokoro == 1 ) {
			s = lang("‹°•|‚Е“Є‚М’†‚Є‚®‚ї‚б‚®‚ї‚б", "Scared with fear")
		}
		if ( kokoro == 2 ) {
			s = lang("ђМ‚Мѓgѓ‰ѓEѓ}‚Й‹к‚µ‚с‚Е‚ў‚й", "Suffering from trauma.")
		}
		if ( kokoro == 3 ) {
			s = lang("‚ ‚И‚Ѕ‚ЙЋE‚і‚к‚йЊ¶Љo‚рЊ©‚Д‚ў‚й", "Looking at the hallucination killed by you")
		}
		if ( kokoro == 4 ) {
			s = lang("Ћ©ЋEЏХ“®‚Й‚ ‚з‚Є‚Б‚Д‚ў‚й", "Suffers from a suicide impulse.")
		}
	}
	if ( tc == CHARA_PLAYER ) {
		s = lang("Ћ©•Є‚МђS‚р”`‚­‚М‚НЉп–­‚ИЉґ‚¶‚ѕ", "It's a strange feeling looking into one's own heart.")
	}
	buff += s
	buff += "\n"
	buff += "\n"
	if ( jp ) {
		buff += "<title1>Ѓџ‹кЋи‚И‚а‚М<def>\n"
	}
	if ( en ) {
		buff += "<title1>* Weak point<def>\n"
	}
	if ( cdata(CDATA_PV, tc) + cdata(CDATA_DV, tc) < limit((gdata(GDATA_DEEPEST_LEVEL) + 1) * sqrt(gdata(GDATA_DEEPEST_LEVEL) + 1) / 3 + 20, 1, 1000) ) {
		buff += lang("•Ё—ќЌUЊ‚", "Physical damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_FIRE, tc) / 50 < 6 ) {
		buff += lang("‰О‰Љ‘®ђ«‚МЌUЊ‚", "Fire damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_COLD, tc) / 50 < 6 ) {
		buff += lang("—в‹C‘®ђ«‚МЌUЊ‚", "Cold damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_LIGHTNING, tc) / 50 < 6 ) {
		buff += lang("“dЊ‚‘®ђ«‚МЌUЊ‚", "Lightning damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_DARKNESS, tc) / 50 < 6 ) {
		buff += lang("€ГЌ•‘®ђ«‚МЌUЊ‚", "Darkness damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_MIND, tc) / 50 < 6 ) {
		buff += lang("Њ¶f‘®ђ«‚МЌUЊ‚", "Mind damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_POISON, tc) / 50 < 6 ) {
		buff += lang("“Е‘®ђ«‚МЌUЊ‚", "Poison damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_NETHER, tc) / 50 < 6 ) {
		buff += lang("’nЌ–‘®ђ«‚МЌUЊ‚", "Nether damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_SOUND, tc) / 50 < 6 ) {
		buff += lang("‰№‘®ђ«‚МЌUЊ‚", "Sound damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_NERVE, tc) / 50 < 6 ) {
		buff += lang("ђ_Њo‘®ђ«‚МЌUЊ‚", "Nerve damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_CHAOS, tc) / 50 < 6 ) {
		buff += lang("Ќ¬“Ч‘®ђ«‚МЌUЊ‚", "Chaos damage")
		buff += "\n"
	}
	if ( sdata(SKILL_RES_MAGIC, tc) / 50 < 6 ) {
		buff += lang("–‚–@‘®ђ«‚МЌUЊ‚", "Magic damage")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_RES_CONFUSE, tc) == 0 ) {
		buff += lang("Ќ¬—ђЏу‘Ф", "Confuse status")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_RES_BLIND, tc) == 0 ) {
		buff += lang("–У–ЪЏу‘Ф", "Blind status")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_RES_FEAR, tc) == 0 ) {
		buff += lang("‹°•|Џу‘Ф", "Fear status")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_RES_SLEEP, tc) == 0 ) {
		buff += lang("ђ‡–°Џу‘Ф", "Sleep status")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_RES_PARALYZE, tc) == 0 ) {
		buff += lang("–ѓбѓЏу‘Ф", "Paralyze status")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_RES_POISON, tc) == 0 ) {
		buff += lang("“ЕЏу‘Ф", "Poison status")
		buff += "\n"
	}
	p = -1
	acid = 0
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		body = cdata(cnt, tc) / EXT_EQUIP_SLOTS
		if ( body == 0 ) {
			continue
		}
		p = cdata(cnt, tc) \ EXT_EQUIP_SLOTS - 1
		if ( p == (-1) ) {
			continue
		}
		if ( ibit(ITEM_BIT_ACIDPROOF, p) == 1 ) {
			continue
		}
		acid = 1
	loop
	if ( acid == 1 ) {
		buff += lang("Ћ_", "Acid")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_CURE_BLEEDING, tc) != 1 ) {
		buff += lang("ЏoЊЊЏу‘Ф", "Bleeding")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_FLOAT, tc) == 0 ) {
		buff += lang("ѓgѓ‰ѓbѓv", "Trap")
		buff += "\n"
	}
	if ( cbit(CHARA_BIT_SEE_INVISIBLE, tc) == 0 ) {
		buff += lang("“§–ѕ‚М“G", "Invisible enemy")
		buff += "\n"
	}
	if ( encfind(tc, ENCHANT_RES_PREGNANCY) == (-1) ) {
		buff += lang("Љсђ¶ђ¶•Ё", "Parasite")
		buff += "\n"
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_ALCHEMIST_NAPLUS ) {
		buff += lang("‚У‚©‚У‚©ѓpѓ“", "Puff puff bread")
		buff += "\n"
	}
	if ( cdatan(CDATAN_RACE, tc) == "snail" ) {
		buff += lang("‰–", "Salt")
		buff += "\n"
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_AINC_THE_NOVICE_KNIGHT ) {
		buff += lang("ѓCЃ[ѓN", "Yeek")
		buff += "\n"
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_TAM_THE_CAT_HATER ) {
		buff += lang("”L", "Cat")
		buff += "\n"
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_HAKUTOSHIN ) {
		buff += lang("ЋL", "Shark")
		buff += "\n"
	}
	listmax = noteinfo(0)
*com_knowOther_loop
	redraw 0
	page_check

	s = lang("‚±‚±‚л‚М’†", "In the heart"), strhint2 + strhint3b
	display_window (windoww - 400) / 2 + inf_screenx, winposy(448), 400, 448
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		noteget s, p
		gmesx = HIGHDPI_X(wx + 40)
		gmesy = HIGHDPI_Y(wy + 66 + cnt * 19 + 2)
		gmesw = HIGHDPI_X(600)
		gmescol = 30, 30, 30
		gmestype = 0
		pos wx + 54, wy + 66 + cnt * 19 + 2
		gmes s
	loop
	redraw 1
*com_knowOther_pgchg
	redraw 0
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	page_change *com_knowOther_loop
	if ( key == key_cancel ) {
		return
	}
	goto *com_knowOther_pgchg

*com_knowSelf
	listmax = 0
	pagesize = 16
	page = 0
	cs = 0
	cc = tc
	cs_bk = -1
	snd SOUNDLIST_POP2
	buff = ""
	notesel buff
	del_chara MAX_CHARA_NC
	r1 = MAX_CHARA_NC
	cdata(CDATA_PIETY, r1) = cdata(CDATA_PIETY, tc)
	cdata(CDATA_GOD, r1) = cdata(CDATA_GOD, tc)
	repeat STARTING_SKILL_SPACT
		sdata(cnt, r1) = 1
	loop
	if ( tc == CHARA_PLAYER ) {
		gosub *god_effect
	}
	if ( cdata(CDATA_GOD, CHARA_PLAYER) != GOD_EYTH ) {
		buff += lang("<title1>Ѓџ " + name(tc) + "‚МЋу‚Ї‚Д‚ў‚й‰e‹ї<def>\n", "*<title1> Your bonuses and penalties.<def>\n")
		repeat STARTING_SKILL_SPACT
			sdata(cnt, MAX_CHARA_NC) = sdata(cnt + STARTING_SKILL_SPACT, tc) / 1000000
			if ( sdata(cnt, MAX_CHARA_NC) != sdata(cnt, tc) ) {
				p = sdata(cnt, tc) - sdata(cnt, MAX_CHARA_NC)
				cnvbonus cnt, p
			}
		loop
	}
	r1 = tc
	refreshmode = 1
	gosub *charaRefresh
	refreshmode = 0
	buff += "\n"
	buff += lang("<title1>Ѓџ ‚»‚М“аЃAЏj•џ‚ЖЋф‚ў‚Й‚ж‚й‰e‹ї<def>\n", "<title1>*Effects of Blessings and Hexes<def>\n")
	repeat MAX_BLESSINGS + MAX_HEXES - 1
		if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, tc) == 0 ) {
			continue
		}
		calcbuff -2, cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, tc), cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 1, tc)
		buff += "" + buffname(cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, tc)) + ": " + cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF + 2, tc) + lang("(" + dur + ")А°Э‚МЉФЃA", "(" + dur + ") ") + buffdesc
		buff += "\n"
	loop
	listmax = noteinfo(0)
*com_knowSelf_loop
	redraw 0
	page_check
	s = lang("Џу‘Ф•ЄђН", "Analysis"), strhint2 + strhint3b
	display_window (windoww - 580) / 2 + inf_screenx, winposy(448), 580, 448
	s = lang("•ЄђНЊ‹‰К", "Results")
	display_topic s, wx + 28, wy + 36
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		noteget s, p
		gmesx = HIGHDPI_X(wx + 40)
		gmesy = HIGHDPI_Y(wy + 66 + cnt * 19 + 2)
		gmesw = HIGHDPI_X(600)
		gmescol = 30, 30, 30
		gmestype = 0
		pos wx + 54, wy + 66 + cnt * 19 + 2
		gmes s
	loop
	redraw 1
*com_knowSelf_pgchg
	redraw 0
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	page_change *com_knowSelf_loop
	if ( key == key_cancel ) {
		return
	}
	goto *com_knowSelf_pgchg

*com_trait
	listmax = 0
	page = 0
	pagesize = 15
	cs = 0
	tc = CHARA_PLAYER
	cs_bk = -1
	curmenu = 2
	snd SOUNDLIST_FEAT
	drawmenu
	ww = 700
	wh = 400
	wx = (windoww - ww) / 2 + inf_screenx
	wy = winposy(wh)
	windowanime wx, wy, ww, wh, 10, 4
	redraw 0
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_feat.bmp", 1
	gsel 0
	windowshadow = 1
*com_trait_loop
	listmax = 0
	if ( gdata(GDATA_TRAIT_POINT) > 0 ) {
		if ( tc == CHARA_PLAYER ) {
			list(0, listmax) = -1, 0
			listmax++
		}
	}
	f = 0
	repeat MAX_TRAIT
		if ( tc != CHARA_PLAYER ) {
			break
		}
		traitmode = 0
		tid = cnt
		gosub *trait_ref
		if ( stat == 0 ) {
			continue
		}
		if ( stat == 1 ) {
			if ( traitref == 0 ) {
				if ( gdata(GDATA_TRAIT_POINT) > 0 ) {
					list(0, listmax) = cnt, cnt + 1
					listmax++
				}
			}
		}
		if ( trait(cnt) != 0 ) {
			list(0, listmax) = cnt, 10000 + cnt + 1
			listmax++
			f++
		}
	loop
	if ( f != 0 ) {
		list(0, listmax) = -2, 10000
		listmax++
	}
	gosub *sort_list
	repeat listmax
		i = list(0, cnt)
		if ( i < 0 ) {
			if ( i == (-1) ) {
				s = lang("Ѓџ Ћж“ѕ‚Е‚«‚йѓtѓBЃ[ѓg", "[Available feats]")
			}
			if ( i == (-2) ) {
				s = lang("Ѓџ “Б’Ґ‚Ж‘МЋї", "[Feats and traits]")
			}
			listn(0, cnt) = s
			continue
		}
		tid = i
		traitmode = 0
		gosub *trait_ref
		featrq = stat
		s = ""
		if ( list(1, cnt) < 10000 ) {
			if ( trait(tid) < traitref(2) ) {
				s = traitrefn2(trait(tid))
			}
			else {
				s = traitrefn2(traitref(2) - 1) + "(MAX)"
			}
			if ( featrq == (-1) ) {
				s += lang("(ЏрЊЏ•s‘«)", "(requirement)")
			}
			pos wx + 30, wy + 61 + cnt * 19
			x = 84
		}
		else {
			pos wx + 45, wy + 61 + cnt * 19
			x = 70
			if ( traitref == 0 ) {
				s = lang("[ѓtѓBЃ[ѓg]", "[Feat]")
			}
			if ( traitref == 1 ) {
				s = lang("[•П€Щ]", "[Mutation]")
			}
			if ( traitref == 2 ) {
				s = lang("[ђж“V]", "[Race]")
			}
			if ( traitref == 3 ) {
				s = lang("[ґ°ГЩ•a]", "[Disease]")
			}
			s += traitrefn(2 + abs(trait(tid)))
		}
		listn(0, cnt) = s
	loop
	r1 = tc
	if ( cdata(CDATA_RACE_ID, r1) == 0 ) {
		gosub *raceID_fix
	}
	locvar_com_trait_bit = lang("[bit]", "[bit]")
	if ( cbit(CHARA_BIT_INCOGNITO, tc) == 1 ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н•П‘•‚µ‚Д‚ў‚й", "You are disguising yourself.")
		listmax++
	}
	if ( cbit(CHARA_BIT_PREGNANT, tc) == 1 ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЉсђ¶‚і‚к‚Д‚ў‚й", "You are pregnant.")
		listmax++
	}
	if ( cbit(CHARA_BIT_ANOREXIA, tc) == 1 ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н‹‘ђHЏЗ‚ѕ", "You have anorexia.")
		listmax++
	}
	if ( cbit(CHARA_BIT_FLOAT, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н•‚—V‚Е‚«‚й", "You can float.")
		listmax++
	}
	if ( cbit(CHARA_BIT_INVISIBLE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н“§–ѕ‚Й‚И‚к‚й", "You can be invisible.")
		listmax++
	}
	if ( cbit(CHARA_BIT_SEE_INVISIBLE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н“§–ѕ‚И‘¶ЌЭ‚ЄЊ©‚¦‚й", "You see invisible creatures.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_CONFUSE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Й‚НЌ¬—ђ‚ЄЊш‚©‚И‚ў", "You negates the effect of confusion.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_BLIND, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Й‚Н–У–Ъ‚ЄЊш‚©‚И‚ў", "You negates the effect of blindness.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_FEAR, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Й‚Н‹°•|‚ЄЊш‚©‚И‚ў", "You negates the effect of fear.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_SLEEP, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Й‚Нђ‡–°‚ЄЊш‚©‚И‚ў", "You negates the effect of sleep.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_PARALYZE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Й‚Н–ѓбѓ‚ЄЊш‚©‚И‚ў", "You negates the effect of paralysis.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_POISON, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Й‚Н“Е‚ЄЊш‚©‚И‚ў", "You negates the effect of poison.")
		listmax++
	}
	if ( cbit(CHARA_BIT_EAT_ROTTEN, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н•…‚Б‚Ѕ‚а‚М‚р“п‚И‚­ЏБ‰»‚·‚й", "You can digest rotten foods.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_STEAL, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НѓAѓCѓeѓЂ‚р“ђ‚Ь‚к‚И‚ў", "You will not have item stolen.")
		listmax++
	}
	if ( cbit(CHARA_BIT_SUICIDE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЋ©”љ‚·‚й", "You self-destruct.")
		listmax++
	}
	if ( cbit(CHARA_BIT_DEATH_MASTER, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЋЂ‚рЋi‚й", "You govern death word.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RAPID_MAGIC, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НA‘±–о–‚–@‚рЋg‚¦‚й", "You can cast triple arrow spells.")
		listmax++
	}
	if ( cbit(CHARA_BIT_LAY_HANDS, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НѓЊѓCѓnѓ“ѓh‚рЋg‚¦‚й", "You can use Layhand.")
		listmax++
	}
	if ( cbit(CHARA_BIT_SUPERIOR_RIDING, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЏж”n‚Й“K‚µ‚Д‚ў‚й", "You are suitable for riding.")
		listmax++
	}
	if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н•Є—ф‚Е‚«‚й", "You can split when attacked easily.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_CURSE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЋф‚ў‚Й‹­‚ў", "You are strong against curses.")
		listmax++
	}
	if ( cbit(CHARA_BIT_INFERIOR_RIDING, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЏж”n‚Й“K‚і‚И‚ў", "You are too weak to carry you.")
		listmax++
	}
	if ( cbit(CHARA_BIT_RES_ELEMENTAL, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н‚ЁЊЭ‚ў‚М‘®ђ«ЌUЊ‚‚р’†a‚·‚й", "You neutralize each other's attribute attacks.")
		listmax++
	}
	if ( cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЊі‹C‚ИЏкЌ‡•Є—ф‚·‚й", "You can split when attacked.")
		listmax++
	}
	if ( cbit(CHARA_BIT_METAL, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н“БЋк‹а‘®‚ЕЌ\ђ¬‚і‚к‚Д‚ў‚й", "You are made of special metal")
		listmax++
	}
	if ( cbit(CHARA_BIT_CURE_BLEEDING, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЏoЊЊ‚µ‚Й‚­‚ў", "You don't bleed easily.")
		listmax++
	}
	if ( cbit(CHARA_BIT_IMMUNE_MINE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н’n—‹‚Й”Ѕ‰ћ‚і‚к‚И‚ў", "You are not sensed by land mines.")
		listmax++
	}
	if ( cbit(CHARA_BIT_TEMPER, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЌUЊ‚‚і‚к‚й‚Ж“{‚й", "You get angry when attacked.")
		listmax++
	}
	if ( cbit(CHARA_BIT_ARMOUR, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н“БЋк‘•Ќb‚Й•ў‚н‚к‚Д‚ў‚й", "You are covered in special armor.")
		listmax++
	}
	if ( cbit(CHARA_BIT_QUICK_SHOOTING, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н‘ЃЊ‚‚ї‚Є“ѕ€У‚ѕ", "You are good at shooting fast.")
		listmax++
	}
	if ( cbit(CHARA_BIT_VINDALIAN_JIUJITSU_ACTIVE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚НЏ_Џp‚МЌ\‚¦‚р‚µ‚Д‚ў‚й", "You are ready for Jiujitsu.")
		listmax++
	}
	if ( cbit(CHARA_BIT_UPLIFTED_WHILE_CASTING, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = locvar_com_trait_bit + lang("‚ ‚И‚Ѕ‚Н‰rЏҐ’†‚Й‹C•Є‚ЄЌ‚—g‚·‚й", "You feel uplifted while casting.")
 		listmax++
 	}
	if ( cdata(CDATA_BODY_SPEED_FIX, tc) != 0 ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = lang("[‚»‚М‘ј]", "[ETC]") + lang("‚ ‚И‚Ѕ‚Н•ЎЋG‚И‘М‚р‚µ‚Д‚ў‚й[‘¬“x-" + cdata(CDATA_BODY_SPEED_FIX, tc) + "%]", "Your body is complicated. [SPD-" + cdata(CDATA_BODY_SPEED_FIX, tc) + "%]")
		listmax++
	}
	if ( gdata(GDATA_ETHER_SPEED) != 0 & tc == CHARA_PLAYER ) {
		if ( gdata(GDATA_ETHER_SPEED) > 0 ) {
			list(0, listmax) = 1, 99999
			listn(0, listmax) = lang("[‚»‚М‘ј]", "[ETC]") + lang("‚ ‚И‚Ѕ‚МѓGЃ[ѓeѓ‹•a‚МђiЌs‚Н‘Ѓ‚ўЃB", "Your Ether Disease grows fast.")
			listmax++
		}
		else {
			list(0, listmax) = 1, 99999
			listn(0, listmax) = lang("[‚»‚М‘ј]", "[ETC]") + lang("‚ ‚И‚Ѕ‚МѓGЃ[ѓeѓ‹•a‚МђiЌs‚Н’x‚ўЃB", "Your Ether Disease grows slow.")
			listmax++
		}
	}
	if ( cbit(CHARA_BIT_AWAKE_DIM_ATTACKER, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚М–Ј—Н‚Н“G‚і‚¦‚аћNћO‚Ж‚і‚№‚й[’јђЪЌUЊ‚‚µ‚Д‚«‚Ѕ“G‚ЄћNћO]", "You dim enemies that directly attack you.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_EVASION, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚М€У’n‚Н‹‡’n‚·‚з‚аЏж‚и‰z‚¦‚й[HPЊё‚й‚Щ‚З‰с”рЊyЊёѓNѓЉѓeѓBѓJѓ‹ЏгЏё]", "You become more evasive as you near death.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_DAMAGE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚М’к—Н‚Н‹‡’n‚·‚з‚аЏж‚и‰z‚¦‚й[HPЊё‚й‚Щ‚ЗЌЕЏI—^ѓ_ѓЃЃ[ѓWЏгЏё]", "Your damage increases as you near death.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_MP_BARRIER, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚МЏб•З‚Н”@‰Ѕ‚И‚йЌUЊ‚‚Е‚а–h‚®[ѓ_ѓЃЃ[ѓW•ЄMPЏБ”п‚µЌUЊ‚–іЊш‰»]", "You use your MP as a barrier against damage.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_INSULT, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н”l“|‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Insult.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_CRYSTAL_SPEAR, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н–‚—Н‚МЏWђП‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Crystal Spear.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_DIMENSIONAL_MOVE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н‹уЉФc‹И‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Dimensional Move.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_TACTICAL_HEAL, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Нѓ^ѓNѓeѓBѓJѓ‹ѓqЃ[ѓ‹‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Tactical Heal.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_TACTICAL_ATTACK, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Нѓ^ѓNѓeѓBѓJѓ‹ѓAѓ^ѓbѓN‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Tactical Attack.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_TACTICAL_MARTIAL_ARTS, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Нѓ^ѓNѓeѓBѓJѓ‹ѓAЃ[ѓc‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Tactical Martial Arts.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_TACTICAL_CURSE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Нѓ^ѓNѓeѓBѓJѓ‹ѓJЃ[ѓX‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Tactical Curse.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_CHARGE_ATTACK, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Нѓ`ѓѓЃ[ѓW‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Charge Attack.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_PROVOKE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н’§”­‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Provoke.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_ZERO_SHOOT, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н—л‚МЉФЊ‚‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Zero shoot.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_TACTICAL_THROW, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Нѓ^ѓNѓeѓBѓJѓ‹ѓXѓЌЃ[‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Tactical Throw.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_VARIABLE_BREATH, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н‰В•П•ъЋЛ‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Variable Breath.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_VARIABLE_STORM, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н”Н€Н–‚–@‰В•ПЏpЋ®‚р‰п“ѕ‚µ‚Д‚ў‚й", "You got Variable Storm.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_PROXIMITY_ATTACK, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н‹ЯђЪЌUЊ‚‚рЌD‚Ю", "You prefer the proximity attack.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_RANGED_ATTACK, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н‰“ЉuЌUЊ‚‚рЌD‚Ю", "You prefer the shot.")
		listmax++
	}
	if ( cbit(CHARA_BIT_AWAKE_MAGIC_ATTACK, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н–оЊn–‚–@‚рЌD‚Ю", "You prefer the magic arrows.")
		listmax++
	}
	if ( cdata(CDATA_SEALED_MAGIC, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н–‚–@‚р••€у‚µ‚Д‚ў‚й", "Your magic is sealed.")
		listmax++
	}
	if ( cdata(CDATA_SEALED_ABILITY, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ЉoђБ]", "[AWAKE]") + lang("‚ ‚И‚Ѕ‚Н‹Z”\‚р••€у‚µ‚Д‚ў‚й", "Your ability is sealed.")
		listmax++
	}
	if ( cbit(CHARA_BIT_SHOP_ELEGANCE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[‰c‹Ж]", "[SHOP]") + lang("‚ ‚И‚Ѕ‚Й‚Н‹C•i‚Є‚ ‚й[“X‚М‹qЋїЏгЏё]", "You got elegance. [Increase Quality Of Customers In Shop]")
		listmax++
	}
	if ( cbit(CHARA_BIT_SHOP_AESTHETIC_SENSE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[‰c‹Ж]", "[SHOP]") + lang("‚ ‚И‚Ѕ‚НђR”ьЉб‚рЋќ‚Б‚Д‚ў‚й[ЊрЉ·ѓЊЃ[ѓgЏгЏё]", "You got aesthetic sense. [Increase Exchange Rate]")
		listmax++
	}
	if ( cbit(CHARA_BIT_SHOP_SALES_ROUTE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[‰c‹Ж]", "[SHOP]") + lang("‚ ‚И‚Ѕ‚Н“ЖЋ©‚М”М”„ѓ‹Ѓ[ѓg‚рЋќ‚В[–€“ъ“ЖЋ©‚Й‰Т‚®]", "You got your own sales route. [Earn Gold Independently Each Day]")
		listmax++
	}
	if ( cbit(CHARA_BIT_SHOP_STRONG_ALLY, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[‰c‹Ж]", "[SHOP]") + lang("‚ ‚И‚Ѕ‚Н‹­‚ў’сЊg—Н‚рЋќ‚В[“ЇЌsЋћ‚Й”„”ѓ‹­‰»]", "You got strong alliances. [Increases Sell Value When In Party]")
		listmax++
	}
	if ( cbit(CHARA_BIT_SHOP_BUSINESS_SMILE, tc) == 1 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[‰c‹Ж]", "[SHOP]") + lang("‚ ‚И‚Ѕ‚М‰c‹ЖѓXѓ}ѓCѓ‹‚НЉ®аш‚ѕ[”YЋEЌUЊ‚‚р‰п“ѕ]", "You got a business smile. [Learns Bewitch]")
		listmax++
	}
	if ( cdata(CDATA_ROLE_SHOP_LEVEL, tc) > 0 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ђ«Љi]", "[CHARA]") + lang("‚ ‚И‚Ѕ‚Н" + _seikaku(cdata(CDATA_ROLE_SHOP_LEVEL, tc)) + "‚ѕ[ѓ}ѓbѓvЉJЋnЋћ‚МЏ‰ЉъѓpѓЏЃ[ѓQЃ[ѓW+3]", "You are " + _seikaku(cdata(CDATA_ROLE_SHOP_LEVEL, tc)) + ". [Power gauge +3 at the start of the map]")
		listmax++
	}
	if ( cdata(CDATA_ROLE_RESTOCK, tc) > 0 ) {
		list(0, listmax) = 1, 99998
		listn(0, listmax) = lang("[ђ«Љi]", "[CHARA]") + lang("‚ ‚И‚Ѕ‚Й‚Н" + _seikaku(cdata(CDATA_ROLE_RESTOCK, tc)) + "‚И€к–К‚а‚ ‚й[”нѓ_ѓЃЃ[ѓWЋћ‚ЙѓpѓЏЃ[ѓQЃ[ѓW+1]", "You have a " + _seikaku(cdata(CDATA_ROLE_RESTOCK, tc)) + " aspect. [Power gauge +1 when damaged]")
		listmax++
	}
	if ( cbit(CHARA_BIT_HEARTLOCK_CAREFREE, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = lang("[‚»‚М‘ј]", "[ETC]") + lang("‚ ‚И‚Ѕ‚Н”Y‚Э‚ЙЋъ‚н‚к‚Д‚ў‚И‚ў[ѓpѓЏЃ[ѓQЃ[ѓW‰єЊА+1]", "You are not trapped by your trouble. [Power gauge lower limit +1]")
		listmax++
	}
	if ( cbit(CHARA_BIT_HEARTLOCK_DANGEROUS, tc) == TRUE ) {
		list(0, listmax) = 1, 99999
		listn(0, listmax) = lang("[‚»‚М‘ј]", "[ETC]") + lang("‚ ‚И‚Ѕ‚Н‚в‚О‚ўЋп–Ў‚Й–ЪЉo‚Я‚Д‚ў‚й[‹¶‹C“x‰єЊА+10‚ЖѓpѓЏЃ[ѓQЃ[ѓW‰єЊА+5]", "You have developed a dangerous hobby. [SAN lower limit +10/Power gauge lower limit +5]")
		listmax++
	}
	if ( dump_return == 1 ) {
		dump_return = 0
		return
	}
	xnotesel buff
	buff = ""
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, tc) \ EXT_EQUIP_SLOTS != 0 ) {
			ci = cdata(cnt, tc) \ EXT_EQUIP_SLOTS - 1
			kakunin = 0
		}
		else {
			kakunin = 100
		}
		repeat RANGE_INV_ITEM_ENCHANT
			if ( kakunin == 100 ) {
				break
			}
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci) == 0 ) {
				break
			}
			val = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci), inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, ci), 1, 0
			gosub *item_encdetail
			if ( s == "" ) {
				continue
			}
			xnoteadd s
		loop
	loop
	notesel buff
	repeat noteinfo(0)
		noteget s, cnt
		list(0, listmax) = 1, 99999
		listn(0, listmax) = lang(his(tc, 1) + "‘•”х‚Н", cnven(his(tc, 1)) + " equipment ") + s
		listmax++
	loop
	if ( tc != CHARA_PLAYER ) {
		repeat listmax
			if ( jp ) {
				cnv_str listn(0, cnt), "‚ ‚И‚Ѕ", he(tc, 1)
			}
			if ( en ) {
				/********** ORIGINAL - BEGINNING **********

				cnv_str listn(0, cnt), " your", his(tc, 1)
				cnv_str listn(0, cnt), " you", him(tc, 1)

				 ********** ORIGINAL - ENDING **********/

				/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // fix gender and spacing on the feats page

				cnv_str listn(0, cnt), " your", " " + his(tc, 1)
				cnv_str listn(0, cnt), " you", " " + him2(tc)
				cnv_str listn(0, cnt), "Your", "" + his(tc, 1)
				cnv_str listn(0, cnt), "You", "" + him2(tc)

				/********** BLOODYSHADE CUSTOM - ENDING **********/

			}
		loop
	}
	redraw 0
	page_check
	if ( cs < 0 ) {
		repeat listmax
			if ( list(1, cnt) >= 10000 ) {
				if ( list(0, cnt) - 10000 == cs ) {
					page = cnt / pagesize
					cs = cnt \ pagesize
					break
				}
			}
		loop
		if ( cs < 0 ) {
			cs = 0
		}
	}
*com_trait_loop_WHILE1
	redraw 0
	s = lang("“Б’Ґ‚Ж‘МЋї", "Feats and Traits"), lang("Њ€’и [ѓtѓBЃ[ѓgЋж“ѕ]  " + strhint2 + strhint3, "Enter [Gain Feat]  " + strhint2 + strhint3) + "z,x [" + lang("’‡ЉФ", "Ally") + "]"
	if ( mode == MODELIST_CHARA_CREATION ) {
		i = 1
	}
	else {
		i = 0
	}
	display_window (windoww - 730) / 2 + inf_screenx, winposy(430, i) + i * 15, 730, 430, 55, 40
	if ( jp ) {
		s = "“Б’Ґ‚М–јЏМ", "’iЉK", "“Б’Ґ‚МЊш‰К"
	}
	else {
		s = "Name", "Level", "Detail"
	}
	display_topic s, wx + 46, wy + 36
	display_topic s(2), wx + 255, wy + 36
	pos wx + 46, wy - 16
	gcopy 3, 288 + 11 * 48, 48, 48, 48
	pos wx + ww - 56, wy + wh - 198
	gcopy 3, 960, 96, 48, 192
	pos wx, wy
	gcopy 3, 1008, 96, 48, 144
	pos wx + ww - 108, wy
	gcopy 3, 960, 288, 96, 72
	pos wx, wy + wh - 70
	gcopy 3, 1008, 240, 96, 48
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( list(0, p) < 0 ) {
			continue
		}
		if ( cnt \ 2 == 0 ) {
			pos wx + 57, wy + 66 + cnt * 19
			gfini 640, 18
			gfdec2 12, 14, 16
		}
		if ( list(1, p) >= 10000 | list(0, p) < 0 ) {
			continue
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	if ( tc == CHARA_PLAYER ) {
		s = lang("Ћc‚и " + gdata(GDATA_TRAIT_POINT) + "ЊВ‚МѓtѓBЃ[ѓg‚рЋж“ѕ‚Е‚«‚й", "You can acquire " + gdata(GDATA_TRAIT_POINT) + " feats")
	}
	else {
		s = cnven(cdatan(CDATAN_NAME, tc)) + lang("‚М“Бђ«", "'s Trait")
	}
	display_note s, 50
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)
		if ( i < 0 ) {
			color 0, 0, 0
			cs_list listn(0, p), wx + 114, wy + 66 + cnt * 19 - 1, 19, 0, -1
			continue
		}
		if ( list(1, p) != 99999 ) {
			tid = i
			traitmode = 0
			gosub *trait_ref
			featrq = stat
			if ( trait(tid) == 0 ) {
				color 0, 0, 0
			}
			else {
				if ( trait(tid) > 0 ) {
					color 0, 0, 200
				}
				else {
					color 200, 0, 0
				}
			}
			if ( list(1, p) == 99998 ) {
				color 0, 200, 0
			}
		}
		else {
			traitref = 5
			color 0, 0, 0
		}
		if ( list(1, p) < 10000 ) {
			pos wx + 30, wy + 61 + cnt * 19
			x = 84
		}
		else {
			pos wx + 45, wy + 61 + cnt * 19
			x = 70
		}
		gcopy 3, 384 + traitref * 24, 336, 24, 24
		cs_list listn(0, p), wx + x, wy + 66 + cnt * 19 - 1, 19, 0, -1
		if ( list(1, p) < 10000 ) {
			pos wx + 270, wy + 66 + cnt * 19 + 2
			mes traitrefn(2)
		}
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = pagesize * page + cnt
			break
		}
	loop
	if ( tc == CHARA_PLAYER ) {
		if ( gdata(GDATA_TRAIT_POINT) > 0 ) {
			if ( p > 0 ) {
				if ( list(1, p) < 10000 ) {
					tid = list(0, p)
					traitmode = 0
					gosub *trait_ref
					if ( traitref(2) <= trait(tid) ) {
						if ( mode != MODELIST_CHARA_CREATION ) {
							txt lang("‚±‚к€ИЏгЋж“ѕ‚Е‚«‚И‚ўЃB", "You already have maxed out the feat.")
						}
						goto *com_trait_loop
					}
					gdata(GDATA_TRAIT_POINT)--
					cs = (-10000) + tid
					snd SOUNDLIST_DING3
					trait(tid)++
					r1 = tc
					gosub *charaRefresh
					if ( mode == MODELIST_CHARA_CREATION ) {
						if ( gdata(GDATA_TRAIT_POINT) == 0 ) {
							return 1
						}
					}
					else {
						redraw 0
						gosub *screen_drawStatus
					}
					goto *com_trait_loop
				}
			}
		}
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 3 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 3
				}
			}
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					csctrl = 0
					goto *com_charainfo
				}
				if ( curmenu == 1 ) {
					goto *com_wear
				}
				if ( curmenu == 2 ) {
					goto *com_trait
				}
				if ( curmenu == 3 ) {
					goto *com_material
				}
			}
		}
	}
	page_change *com_trait_loop
	if ( key == "z" | key == "x" ) {
		p = tc
		repeat 16
			if ( key == "z" ) {
				p--
				if ( p < 0 ) {
					p = 16 - 1
				}
			}
			if ( key == "x" ) {
				p++
				if ( p == 16 ) {
					p = 0
				}
			}
			if ( cdata(CDATA_EXIST, p) != CHAR_STATE_ALIVE ) {
				continue
			}
			break
		loop
		tc = p
		snd SOUNDLIST_POP1
		page = 0
		cs = 0
		goto *com_trait_loop
	}
	if ( key == key_cancel ) {
		if ( mode == MODELIST_CHARA_CREATION ) {
			return 0
		}
		gosub *screen_draw
		goto *pc_turn
	}
	if ( mode == MODELIST_CHARA_CREATION ) {
		getkey p, 112
		if ( p ) {
			gosub *com_help
			return -1
		}
	}
	goto *com_trait_loop_WHILE1

*com_journal
	curmenu = 1
	listmax = 0
	page = 99
	pagesize = 40
	cs = 0
	cc = CHARA_PLAYER
	listmax = noteinfo(0)
	keyrange = 0
	key_list(0) = key_enter
	buff = newsbuff
	if ( newsbuff == "" ) {
		buff = "No news"
	}
	notesel buff
	noteadd " - News - ", 0
	noteadd "", 1
	if ( noteinfo(0) / (pagesize / 2) \ 2 == 1 ) {
		repeat pagesize / 2
			noteadd "", 2
		loop
	}
	page = noteinfo(0) / pagesize
	repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
		noteadd ""
	loop
	noteadd " - Quest - "
	noteadd ""
	gosub *quest_info
	val = 0
	gosub *daily_info
	repeat gdata(GDATA_CLIENT)
		if ( qdata(QDATA_STATUS, cnt) == QUEST_STATE_NONE ) {
			continue
		}
		rq = cnt
		val = 2
		gosub *talk_quest
	loop
	val = 0
	gosub *quest_info2
	repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
		noteadd ""
	loop
	noteadd " - Quest Item - "
	noteadd ""
	gosub *quest_item
	repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
		noteadd ""
	loop
	gold = 0
	p = limit(cdata(CDATA_FAME, CHARA_PLAYER) / 10, 100, 25000)
	if ( cdata(CDATA_FAME, CHARA_PLAYER) >= 25000 ) {
		p += (cdata(CDATA_FAME, CHARA_PLAYER) - 25000) / 100
	}
	gold += p
	noteadd " - Title & Ranking - "
	noteadd ""
	noteadd lang("–јђє: ", "Fame: ") + cdata(CDATA_FAME, CHARA_PLAYER)
	noteadd ""
	repeat 9
		if ( gdata(STARTING_GDATA_RANK + cnt) < 10000 ) {
			noteadd "" + ranktitle(cnt) + " Rank." + gdata(STARTING_GDATA_RANK + cnt) / 100
			s = lang("‹‹—ї: –с " + calcincome(cnt) + " gold  ", "Pay: About " + calcincome(cnt) + " gold pieces ")
			gold += calcincome(cnt)
			if ( cnt != 3 & cnt != 4 & cnt != 5 & cnt != 8 ) {
				s += lang("ѓmѓ‹ѓ}: ", "\nDeadline: ") + gdata(STARTING_GDATA_RANK_NORMA + cnt) + lang("“ъ€И“а", " Days left")
			}
			noteadd s
			noteadd ""
		}
	loop
	noteadd lang("EXѓoѓgѓ‹: Џџ— " + gdata(GDATA_EX_BATTLE_WIN) + "‰с ЌЕЌ‚Lv" + gdata(GDATA_EX_BATTLE_MAX_LVL), "EX Arena Wins:" + gdata(GDATA_EX_BATTLE_WIN) + "  Highest Level:" + cnvrank(gdata(GDATA_EX_BATTLE_MAX_LVL)))
	noteadd ""
	repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
		noteadd ""
	loop
	noteadd " - Income & Expense - "
	noteadd ""
	if ( jp ) {
		noteadd "Ѓџ ‹‹—ї(–€ЊЋ1“ъ‚Ж15“ъ‚ЙЋx‹‹)"
		noteadd "@BLЃ@Ќ‡ЊvЃ@Ѓ@ : –с " + gold + strgold
		noteadd ""
		noteadd "Ѓџ ђї‹ЃЏ‘“а–у(–€ЊЋ1“ъ‚Й”­Ќs)"
		noteadd "@REЃ@ђlЊЏ”п  : –с " + gdata(GDATA_COST_HIRE) + strgold
		noteadd "@REЃ@€ЫЋќ”п  : –с " + calccostbuilding() + strgold
		noteadd "@REЃ@ђЕ‹а    : –с " + calccosttax() + strgold
		noteadd "@REЃ@Ќ‡ЊvЃ@  : –с " + (gdata(GDATA_COST_HIRE) + calccostbuilding() + calccosttax()) + strgold
		if ( gdata(STARTING_GDATA_FLAG + 359) > 0 ) {
			noteadd "Њ»ЌЭђж•Ґ‚ў‚МЋcЉz‚Н" + gdata(STARTING_GDATA_FLAG + 359) + strgold
		}
		noteadd ""
		noteadd "Њ»ЌЭ–ў•Ґ‚ў‚Мђї‹ЃЏ‘‚Н" + gdata(GDATA_BILL) + "–‡"
	}
	else {
		noteadd "Salary (Paid every 1st and 15th day)"
		noteadd "@BL  Sum    : About " + gold + " GP"
		noteadd ""
		noteadd "Bills  (Issued every 1st day)"
		noteadd "@RE  Labor  : About " + gdata(GDATA_COST_HIRE) + " GP"
		noteadd "@RE  Maint. : About " + calccostbuilding() + " GP"
		noteadd "@RE  Tax    : About " + calccosttax() + " GP"
		noteadd "@RE  Sum    : About " + (gdata(GDATA_COST_HIRE) + calccostbuilding() + calccosttax()) + " GP"
		if ( gdata(STARTING_GDATA_FLAG + 359) > 0 ) {
			noteadd "Prepaid Balance " + gdata(STARTING_GDATA_FLAG + 359) + " GP"
		}
		noteadd ""
		noteadd "You have " + gdata(GDATA_BILL) + " unpaid bills."
	}
	repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
		noteadd ""
	loop
	if ( cfg_record >= 1 ) {
		noteadd " - Records of Adventure - "
		noteadd ""
		if ( jp ) {
			noteadd "Ѓџ ‚±‚к‚Ь‚Е‚М‚ ‚И‚Ѕ"
			noteadd "@BLЃ@ЌЕђ[ЌU—ЄЉK‘wЃ@Ѓ@: " + gdata(GDATA_DEEPEST_LEVEL) + lang("ЉK‘Љ“–", " level")
			noteadd "@BLЃ@ѓlѓtѓBѓAђ§”eђ”  : " + gdata(GDATA_FLAG_NEFIA_CONQUERED) + ""
			noteadd "@BLЃ@ЋEЉQђ”Ѓ@Ѓ@Ѓ@Ѓ@  : " + gdata(GDATA_KILLED) + ""
			noteadd "@BLЃ@Њ€“¬‚МЊoЊ±Ѓ@Ѓ@Ѓ@: " + gdata(GDATA_FLAG_TIMES_DUELED) + ""
			noteadd "@BLЃ@€Л—Љ’Bђ¬ђ”Ѓ@Ѓ@  : " + gdata(GDATA_FLAG_JOBS_COMPLETED) + ""
			noteadd ""
			noteadd "@BLЃ@ђўЉE€Ъ“®‹——ЈЃ@Ѓ@: " + gdata(GDATA_FLAG_MILES_TRAVELED) + lang("ѓ}ѓCѓ‹", " Miles")
			noteadd "@BLЃ@ђ¶ЋYђ”(B‹аЏp)Ѓ@: " + gdata(GDATA_FLAG_CREATED_BY_ALCHEMY) + ""
			noteadd "@BLЃ@ђ¶ЋYђ”(‘еЌH)Ѓ@Ѓ@: " + gdata(GDATA_FLAG_CREATED_BY_CARPENTRY) + ""
			noteadd "@BLЃ@ђ¶ЋYђ”(•уђОЌЧЌH): " + gdata(GDATA_FLAG_CREATED_BY_JEWELRY) + ""
			noteadd "@BLЃ@ђ¶ЋYђ”(ЌЩ–D)Ѓ@Ѓ@: " + gdata(GDATA_FLAG_CREATED_BY_TAILORING) + ""
			noteadd ""
			noteadd "@BLЃ@ЌЕ‘е’КЏнѓ_ѓЃЃ[ѓW: " + gdata(GDATA_FLAG_HIGHEST_NORMAL_DAMAGE) + ""
			noteadd "@BLЃ@Њ@‚и‰у‚µ‚Ѕ•З‚Мђ”: " + gdata(GDATA_FLAG_WALLS_MINED) + ""
			noteadd "@BLЃ@‘Ќђ‡–°ЋћЉФЃ@Ѓ@Ѓ@: " + gdata(GDATA_FLAG_HOURS_SLEPT) + lang("ЋћЉФ", " Hours")
			noteadd "@BLЃ@Њo‰Я“ъЃ@Ѓ@Ѓ@Ѓ@Ѓ@: " + gdata(GDATA_DAY_PAST) + lang("“ъ", " Days")
			noteadd "@BLЃ@Љи‚ў”­ђ¶‰сђ”Ѓ@Ѓ@: " + gdata(GDATA_FLAG_WISHES_MADE) + ""
			noteadd ""
			noteadd ""
			noteadd ""
			noteadd "@BLЃ@‚н‚Є‰Ж‚Ц‚М–K–в‹q: " + gdata(GDATA_FLAG_HOUSE_VISITORS) + lang("ђl", " Guest")
			noteadd "@BLЃ@•у”­Њ@‰сђ”Ѓ@Ѓ@Ѓ@: " + gdata(GDATA_FLAG_TREASURE_FOUND) + ""
			noteadd "@BLЃ@’Ч‚µ‚Ѕ“ђ‘Ї’c‚Мђ”: " + gdata(GDATA_FLAG_BANDITS_KILLED) + ""
			noteadd "@BLЃ@ѓAѓЉЃ[ѓi‘ЌЏџђ”Ѓ@: " + gdata(GDATA_FLAG_HIGHEST_ARENA_STREAK) + ""
			noteadd "@BLЃ@‚oѓAѓЉЃ[ѓi‘ЌЏџђ”: " + gdata(GDATA_FLAG_HIGHEST_PET_ARENA_STREAK) + ""
			noteadd ""
			noteadd "@BLЃ@МЯЧБЕЌd‰Э“ьЋиђ” : " + gdata(GDATA_FLAG_TOTAL_PLATINUM) + lang("–‡", " Plat")
			noteadd "@BLЃ@PCЅ·ЩОЮ°ЕЅ“ьЋиђ”: " + gdata(GDATA_FLAG_PC_SKILL_BONUS_OBTAINED) + ""
			noteadd "@BLЃ@ЅНЯЩОЮ°ЕЅ“ьЋиђ” : " + gdata(GDATA_FLAG_SPELL_BONUS_OBTAINED) + ""
			if ( gdata(GDATA_FLAG_MAIN) >= 370 ) {
				noteadd "@BLЃ@ѓNѓCѓYЌЕЌ‚‹L^Ѓ@: " + gdata(GDATA_FLAG_MELGET_HISCORE) + lang("“_", " points")
			}
			else {
				noteadd ""
			}
			if ( cfg_record == 2 ) {
				noteadd ""
				noteadd ""
				noteadd "@REЃ@ђH‚Б‚Ѕѓpѓ“‚Мђ”Ѓ@: " + gdata(GDATA_FLAG_BREAD_EATEN) + ""
				noteadd "@REЃ@ђH‚Б‚Ѕѓpѓ“ѓc‚Мђ”: " + gdata(GDATA_FLAG_PANTIES_EATEN) + ""
				noteadd "@REЃ@ђl“чђH‚М‰сђ”Ѓ@Ѓ@: " + gdata(GDATA_FLAG_HUMANS_EATEN) + ""
				noteadd "@REЃ@“ђ‚ЭђH‚ў‚М‰сђ”Ѓ@: " + gdata(GDATA_FLAG_TIMES_EATEN_IN_SECRET) + ""
				noteadd "@REЃ@“ђ‚с‚ѕ•i•Ёђ”Ѓ@Ѓ@: " + gdata(GDATA_FLAG_STOLEN_GOODS) + ""
				noteadd ""
				noteadd ""
				noteadd ""
				noteadd "@REЃ@€Л—ЉЋё”sђ”Ѓ@Ѓ@  : " + gdata(GDATA_FLAG_JOBS_FAILED) + ""
				noteadd "@REЃ@ЊЊ‚МЊq‚Є‚з‚И‚ў–…: " + gdata(GDATA_FLAG_YOUNGER_SISTERS) + lang("ђl", " Sisters")
				noteadd "@REЃ@‰ьЏ@‚µ‚Ѕ‰сђ”Ѓ@Ѓ@: " + gdata(GDATA_FLAG_TIMES_CONVERTED) + ""
				noteadd "@REЃ@Њ‹ЌҐ‚µ‚Ѕ‰сђ”Ѓ@Ѓ@: " + gdata(GDATA_FLAG_TIMES_MARRIED) + ""
				noteadd "@REЃ@‹CЋќ‚ї‚ў‚ўЋ–‰сђ”: " + gdata(GDATA_FLAG_PROSTITUTION_COUNTER) + ""
				noteadd ""
				noteadd "@REЃ@Љj”љ”­‚М”­ђ¶‰сђ”: " + gdata(GDATA_FLAG_NUCLEAR_EXPLOSIONS) + ""
				noteadd "@REЃ@ЏI––‚М”­ђ¶‰сђ”Ѓ@: " + gdata(GDATA_FLAG_RAGNAROK_STARTED) + ""
				noteadd "@REЃ@Њў”LЋEЉQђ”Ѓ@Ѓ@Ѓ@: " + gdata(GDATA_FLAG_CAT_DOG_KILLED) + ""
				noteadd "@REЃ@ѓOѓEѓFѓ“ЋЂ–Sђ”Ѓ@: " + gdata(GDATA_FLAG_GWEN_KILLED) + ""
				noteadd "@REЃ@ѓЌѓ~ѓAѓXЋЂ–Sђ”Ѓ@: " + gdata(GDATA_FLAG_LOMIAS_KILLED) + ""
				noteadd ""
				noteadd "@REЃ@”°ЌМ‚µ‚ЅЋч–ШЃ@Ѓ@: " + gdata(GDATA_FLAG_TREES_FELLED) + lang("–{", " trees")
				noteadd "@REЃ@‰ьЏ@‚і‚№‚Ѕђlђ”Ѓ@: " + gdata(GDATA_FLAG_PEOPLE_CONVERTED) + lang("ђl", " Peoples")
				noteadd "@REЃ@€щ‚с‚ѕ‚ЁЋр    Ѓ@: " + cdata(CDATA_ALCOHOL_CONSUMED, CHARA_PLAYER) + lang("–{", " bottles")
				noteadd "@REЃ@‹i‰Њ‰сђ”Ѓ@Ѓ@Ѓ@Ѓ@: " + gdata(GDATA_FLAG_SMOKING_FREQUENCY) + ""
				noteadd ""
			}
			noteadd ""
		}
		else {

			/********** ORIGINAL - BEGINNING **********

			noteadd "@BL  Days   :  " + gdata(GDATA_DAY_PAST) + " Days"
			noteadd "@BL  Kills  :  " + gdata(GDATA_KILLED) + ""
			noteadd ""
			noteadd "Bills  (Issued every 1st day)"
			noteadd "@RE  Labor  :  " + gdata(GDATA_COST_HIRE) + " GP"
			noteadd "@RE  Maint. :  " + calccostbuilding() + " GP"
			noteadd "@RE  Tax    :  " + calccosttax() + " GP"
			noteadd "@RE  Sum    :  " + (gdata(GDATA_COST_HIRE) + calccostbuilding() + calccosttax()) + " GP"
			noteadd ""

			 ********** ORIGINAL - ENDING **********/

			/********** ANNA CUSTOM - BEGINNING **********/

			noteadd "Your stats so far:"
			noteadd "@BL   Deepest Lvl : " + gdata(GDATA_DEEPEST_LEVEL) + ""
			noteadd "@BL   Nefia Conquered: " + gdata(GDATA_FLAG_NEFIA_CONQUERED) + ""
			noteadd "@BL   Kills: " + gdata(GDATA_KILLED) + ""
			noteadd "@BL   Total Duels Experienced: " + gdata(GDATA_FLAG_TIMES_DUELED) + ""
			noteadd "@BL   Jobs Completed: " + gdata(GDATA_FLAG_JOBS_COMPLETED) + ""
			noteadd ""
			noteadd "@BL   Miles Traveled: " + gdata(GDATA_FLAG_MILES_TRAVELED) + ""
			noteadd "@BL   Items Made (Alchemy): " + gdata(GDATA_FLAG_CREATED_BY_ALCHEMY) + ""
			noteadd "@BL   Items Made (Carpenter): " + gdata(GDATA_FLAG_CREATED_BY_CARPENTRY) + ""
			noteadd "@BL   Items Made (Jeweler): " + gdata(GDATA_FLAG_CREATED_BY_JEWELRY) + ""
			noteadd "@BL   Items Made (Tailor): " + gdata(GDATA_FLAG_CREATED_BY_TAILORING) + ""
			noteadd ""
			noteadd "@BL   Highest Normal Dmg: " + gdata(GDATA_FLAG_HIGHEST_NORMAL_DAMAGE) + ""
			noteadd "@BL   Walls Mined: " + gdata(GDATA_FLAG_WALLS_MINED) + ""
			noteadd "@BL   Hours Slept: " + gdata(GDATA_FLAG_HOURS_SLEPT) + ""
			noteadd "@BL   Elapsed Days: " + gdata(GDATA_DAY_PAST) + ""
			noteadd "@BL   Wishes Made: " + gdata(GDATA_FLAG_WISHES_MADE) + ""
			noteadd ""
			noteadd ""
			noteadd ""
			noteadd "@BL   House Visitors: " + gdata(GDATA_FLAG_HOUSE_VISITORS) + ""
			noteadd "@BL   Treasure Found: " + gdata(GDATA_FLAG_TREASURE_FOUND) + ""
			noteadd "@BL   Bandits Killed: " + gdata(GDATA_FLAG_BANDITS_KILLED) + ""
			noteadd "@BL   Max Arena Streak: " + gdata(GDATA_FLAG_HIGHEST_ARENA_STREAK) + ""
			noteadd "@BL   Max Pet Arena Streak: " + gdata(GDATA_FLAG_HIGHEST_PET_ARENA_STREAK) + ""
			noteadd ""
			noteadd "@BL   Total Platinum: " + gdata(GDATA_FLAG_TOTAL_PLATINUM) + lang("–‡", " Plat")
			noteadd "@BL   Player Skill Bonus Earned: " + gdata(GDATA_FLAG_PC_SKILL_BONUS_OBTAINED) + ""
			noteadd "@BL   Total Spell Bonus Earned: " + gdata(GDATA_FLAG_SPELL_BONUS_OBTAINED) + ""
			if ( gdata(GDATA_FLAG_MAIN) >= 370 ) {
				noteadd "@BL   Melget Hiscore: " + gdata(GDATA_FLAG_MELGET_HISCORE) + " points"
			}
			else {
				noteadd ""
			}
			if ( cfg_record == 2 ) {
				noteadd ""
				noteadd ""
				noteadd "@RE   Bread Eaten: " + gdata(GDATA_FLAG_BREAD_EATEN) + ""
				noteadd "@RE   Panties Eaten: " + gdata(GDATA_FLAG_PANTIES_EATEN) + ""
				noteadd "@RE   Humans Eaten: " + gdata(GDATA_FLAG_HUMANS_EATEN) + ""
				noteadd "@RE   Times Eaten in Secret: " + gdata(GDATA_FLAG_TIMES_EATEN_IN_SECRET) + ""
				noteadd "@RE   Goods Stolen: " + gdata(GDATA_FLAG_STOLEN_GOODS) + ""
				noteadd ""
				noteadd ""
				noteadd ""
				noteadd "@RE   Jobs Failed: " + gdata(GDATA_FLAG_JOBS_FAILED) + ""
				noteadd "@RE   Younger Sisters: " + gdata(GDATA_FLAG_YOUNGER_SISTERS) + ""
				noteadd "@RE   Times Converted: " + gdata(GDATA_FLAG_TIMES_CONVERTED) + ""
				noteadd "@RE   Times Married: " + gdata(GDATA_FLAG_TIMES_MARRIED) + ""
				noteadd "@RE   Prostitution Encounters: " + gdata(GDATA_FLAG_PROSTITUTION_COUNTER) + ""
				noteadd ""
				noteadd "@RE   Nuclear Explosions: " + gdata(GDATA_FLAG_NUCLEAR_EXPLOSIONS) + ""
				noteadd "@RE   Ragnaroks Started: " + gdata(GDATA_FLAG_RAGNAROK_STARTED) + ""
				noteadd "@RE   Cats/Dogs Killed: " + gdata(GDATA_FLAG_CAT_DOG_KILLED) + ""
				noteadd "@RE   Gwen Killed: " + gdata(GDATA_FLAG_GWEN_KILLED) + ""
				noteadd "@RE   Lomias Killed: " + gdata(GDATA_FLAG_LOMIAS_KILLED) + ""
				noteadd ""
				noteadd "@RE   Trees Felled: " + gdata(GDATA_FLAG_TREES_FELLED) + ""
				noteadd "@RE   People Converted: " + gdata(GDATA_FLAG_PEOPLE_CONVERTED) + ""
				noteadd "@RE   Alcohol Consumed: " + cdata(CDATA_ALCOHOL_CONSUMED, CHARA_PLAYER) + ""
				noteadd "@RE   Smoking Frequency: " + gdata(GDATA_FLAG_SMOKING_FREQUENCY) + ""
				noteadd ""
			}
			noteadd ""

			/********** ANNA CUSTOM - ENDING **********/

		}
		repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
			noteadd ""
		loop
	}
	noteadd " - Completed Quests - "
	noteadd ""
	val = 1
	gosub *quest_info2
	listmax = noteinfo(0)
	redraw 0
	showtitle lang("ѓWѓѓЃ[ѓiѓ‹", "Journal"), strhint2 + strhint3, 236, 1
	drawmenu 2
	wx = (windoww - 736) / 2 + inf_screenx
	wy = winposy(448)
	snd SOUNDLIST_BOOK1
	windowanime wx, wy, 736, 448, 10, 4
*com_journal_loop
	redraw 0
	page_check
	gsel 4
	pos 0, 0
	picload exedir + "graphic\\book.bmp", 1
	gsel 0
	pos wx, wy
	gcopy 4, 0, 0, 736, 448
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		x = wx + 80 + cnt / 20 * 306
		y = wy + 45 + cnt \ 20 * 16
		noteget s, p
		if ( strmid(s, 0, 1) == "@" ) {
			s(1) = strmid(s, 1, 2)
			s = strmid(s, 3, strlen(s) - 3)
			font lang(cfg_font1, cfg_font2), 10 + en - en * 2, 1
			color 0, 0, 200
			if ( s(1) == "QL" ) {
				color 100, 100, 0
			}
			if ( s(1) == "QC" ) {
				color 0, 100, 0
			}
			if ( s(1) == "QM" ) {
				color 200, 0, 0
			}
			if ( s(1) == "QD" ) {
				color 200, 100, 0
			}
			if ( s(1) == "QS" ) {
				color 0, 100, 100
			}
			if ( s(1) == "RE" ) {
				color 100, 0, 0
				font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
			}
			if ( s(1) == "BL" ) {
				color 0, 0, 100
				font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
			}
		}
		else {
			font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
			color 0, 0, 0
		}
		pos x, y
		mes s
		if ( p \ 20 == 0 ) {
			font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
			color 0, 0, 0
			pos x + 90, y + 330
			mes "- " + (p / 20 + 1) + " -"
			if ( p \ 40 == 20 ) {
				if ( page < pagemax ) {
					pos x + 200, y + 330
					mes "(more)"
				}
			}
		}
	loop
*com_journal_loop_pgchg
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 2 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 2
				}
			}
			key = ""
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					goto *com_log
				}
				if ( curmenu == 1 ) {
					goto *com_journal
				}
				if ( curmenu == 2 ) {
					goto *com_chatlog
				}
			}
		}
	}
	page_change *com_journal_loop, SOUNDLIST_CARD1
	if ( key == key_cancel | key == key_enter ) {
		menucycle = 0
		gosub *screen_draw
		goto *pc_turn
	}
	goto *com_journal_loop_pgchg

*com_quest
	if ( cfg_extrahelp ) {
		if ( gdata(STARTING_GDATA_HELP + 4) == 0 ) {
			if ( mode == MODELIST_MAIN ) {
				if ( cdata(CDATA_ACTION_PERIOD, CHARA_PLAYER) == 0 ) {
					gdata(STARTING_GDATA_HELP + 4) = 1
					ghelp = 4
					gosub *elona_help
					screenupdate = -1
					gosub *screen_draw
				}
			}
		}
	}
	gosub *quest_update
	listmax = 0
	page = 0
	pagesize = 4
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	repeat gdata(GDATA_CLIENT)
		if ( qdata(QDATA_MAP, cnt) != gdata(GDATA_AREA) ) {
			continue
		}
		if ( qdata(QDATA_EXIST, cnt) == QUEST_TYPE_NONE ) {
			continue
		}
		if ( qdata(QDATA_STATUS, cnt) != QUEST_STATE_NONE ) {
			continue
		}
		rc = qdata(QDATA_CLIENT, cnt)
		if ( cdata(CDATA_EXIST, rc) != CHAR_STATE_ALIVE ) {
			continue
		}
		list(0, listmax) = cnt, qdata(QDATA_LEVEL, cnt)
		listmax++
	loop
	if ( listmax == 0 ) {
		txt lang("ђV‚µ‚ў€Л—Љ‚НЊfЋ¦‚і‚к‚Д‚ў‚И‚ў‚ж‚¤‚ѕЃB", "It seems there are no new notices.")
		goto *turn_end
	}
	gosub *sort_list
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_board.bmp", 1
	gsel 0
	redraw 0
	gsel 4
	fillbg 3, 960, 96, 128, 128
	gosub *screen_drawStatus
	ww = 560
	h = 140
	wh = h * 4
	wx = (windoww - ww) / 2 + inf_screenx
	wy = winposy(wh)
	repeat 4
		y = wy + cnt * 120
		window wx + 4, y + 4, ww, h, 0, -1
		window wx, y, ww, h
		pos wx + 20, y + 8
		gcopy 3, 960, 144 + 96, 48, 84
	loop
	gsel 0
*com_quest_loop_pgchk
	redraw 0
	page_check
*com_quest_loop
	redraw 0
	s = lang("ЊfЌЪ‚і‚к‚Д‚ў‚й€Л—Љ", "Notice Board"), strhint2 + strhint3b
	gmode 0
	pos 0, 0
	gcopy 4, 0, 0, windoww, inf_ver
	gmode 2
	font lang(cfg_font1, cfg_font2), 16 - en * 2, 0
	pos wx + ww + 20, wy
	color 0, 0, 0
	bmes "Page " + (page + 1) + "/" + (pagemax + 1), 255, 255, 255
	keyrange = 0
	repeat pagesize
		y = wy + cnt * 120 + 20
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		pos wx + 70, y
		gfini 460, 18
		gfdec2 12, 14, 16
		display_key wx + 70, y - 2, cnt
	loop
	cs_listbk
	repeat pagesize
		y = wy + cnt * 120 + 20
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		rq = list(0, p)
		tc = qdata(QDATA_CLIENT, rq)
		val = 0
		gosub *talk_quest
		p = pagesize * page + cnt
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		cnt2 = cnt
		cs_list s(3), wx + 96, y - 1, 19
		color 0, 0, 0
		s(2) = "(" + nquestdate + ")"
		pos wx + 344, y + 2
		mes s(2)
		color 0, 0, 0
		s(4) = cdatan(CDATAN_NAME, tc)
		cutname s(4), 20
		pos wx + 392, y + 2
		mes s(4)
		talk_conv buff, 70
		p = qdata(QDATA_LEVEL, rq) / 5 + 1, 14
		repeat 1
			if ( cdata(CDATA_LEVEL, CHARA_PLAYER) * 2 < qdata(QDATA_LEVEL, rq) ) {
				color 205, 0, 0
				break
			}
			if ( cdata(CDATA_LEVEL, CHARA_PLAYER) * 3 / 2 < qdata(QDATA_LEVEL, rq) ) {
				color 140, 80, 0
				break
			}
			if ( cdata(CDATA_LEVEL, CHARA_PLAYER) < qdata(QDATA_LEVEL, rq) ) {
				color 0, 0, 205
				break
			}
			color 0, 155, 0
		loop
		if ( p < 11 ) {
			dy = 0
			if ( p > 5 ) {
				font lang(cfg_font1, cfg_font2), 10 - en * 2, 0
				dy = -3
			}
			repeat p
				pos wx + 270 + cnt \ 5 * 13, y + dy + cnt / 5 * 8 + 2
				mes lang("Ѓљ", "$")
			loop
		}
		else {
			pos wx + 270, y + 2
			mes lang("ЃљЃ~", "$ x ") + p
		}
		font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
		color 0, 0, 0
		pos wx + 20, y + 20
		mes buff
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		txtnew
		txt lang("€Л—ЉЋе‚Й‰п‚¤ЃH", "Do you want to meet the client?")
		promptYesNo
		if ( rtval != 0 ) {
			goto *com_quest_loop_pgchk
		}
		tc = qdata(QDATA_CLIENT, p)
		rq = p
		client = tc
		efid = SKILL_SPACT_SHADOW_STEP
		gosub *effect
		tc = client
		questteleport = 1
		gosub *chat
		client = -1
		if ( chatteleport == 1 ) {
			chatteleport = 0
			goto *map_exit
		}
		goto *turn_end
	}
	page_change *com_quest_loop_pgchk
	if ( key == key_cancel ) {
		goto *turn_end
	}
	goto *com_quest_loop

*com_listNpc
	snd SOUNDLIST_POP2
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	repeat MAX_CHARA_TOTAL
		if ( allyctrl == 2 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALLY_DEAD & cdata(CDATA_EXIST, cnt) != CHAR_STATE_SPIRIT ) {
				continue
			}
		}
		if ( allyctrl == 1 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_TEMP ) {
				continue
			}
		}
		if ( allyctrl == 0 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( cnt < MAX_CHARA_FOLLOWER ) {
				if ( cdata(CDATA_AREA, cnt) != gdata(GDATA_AREA) ) {
					continue
				}
			}
		}
		if ( allyctrl == 3 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( cnt < MAX_CHARA_FOLLOWER ) {
				continue
			}
			if ( cdata(CDATA_ROLE, cnt) >= ROLE_IDENTIFIER & cdata(CDATA_ROLE, cnt) < ROLE_GUEST_MIN ) {
				continue
			}
		}
		if ( allyctrl == 4 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( cdata(CDATA_RELATION, cnt) != RELATION_ALLY & cnt >= MAX_CHARA_FOLLOWER ) {
				continue
			}
		}
		if ( allyctrl == 5 ) {
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( cnt == rc ) {
				continue
			}
			if ( dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, cnt), cdata(CDATA_Y, cnt)) > 1 ) {
				continue
			}
		}
		if ( allyctrl != 5 ) {
			if ( cnt == 0 ) {
				continue
			}
		}
		if ( cbit(CHARA_BIT_GUARD_TEMP, cnt) == TRUE ) {
			continue
		}
		list(0, listmax) = cnt, -cdata(CDATA_LEVEL, cnt)
		listmax++
	loop
	gosub *sort_list
	windowshadow = 1
*com_listNpc_loop_pgchk
	redraw 0
	page_check
*com_listNpc_loop
	redraw 0
	if ( allyctrl != 5 ) {
		s = lang("NPC€к——", "NPC List"), strhint2 + strhint3
	}
	if ( allyctrl == 5 ) {
		s = lang("Њу•вЋТ€к——", "Chara List"), strhint2 + strhint3
	}
	display_window (windoww - 700) / 2 + inf_screenx, winposy(448), 700, 448
	if ( allyctrl == 0 ) {
		s = lang("‹‹—ї", "Wage")
	}
	if ( allyctrl == 1 ) {
		s = lang("ЊЩ—p”п(‹‹—ї)", "Init. Cost(Wage)")
	}
	if ( allyctrl == 3 ) {
		s = lang("ѓЊѓxѓ‹", "Level")
	}
	if ( allyctrl == 4 ) {
		s = lang("ѓKЃ[ѓhѓuѓЊѓCѓN", "GuardBreak")
	}
	if ( allyctrl == 5 ) {
		s = lang("ЏoЊЊ“x", "Bleeding Lv")
	}
	if ( allyctrl != 5 ) {
		display_topic lang("NPC‚М–ј‘O", "Name"), wx + 28, wy + 36
	}
	if ( allyctrl == 5 ) {
		display_topic lang("Њу•вЋТ‚М–ј‘O", "Name"), wx + 28, wy + 36
	}
	display_topic lang("Џо•с", "Info"), wx + 350, wy + 36
	if ( allyctrl != 2 ) {
		display_topic s, wx + 490, wy + 36
	}
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 600, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		picols = cdata(CDATA_CHARA_PIC, list(0, p))
		if ( cdata(CDATA_PIC, list(0, p)) >= xy2pic(1, 21) & cdata(CDATA_PIC, list(0, p)) <= xy2pic(31, 21) ) {
			picols = 0
		}
		i = cdata(CDATA_PIC, list(0, p)) \ 1000 + picols * 1000, (cdata(CDATA_PIC, list(0, p)) - picols * 1000) / 1000
		chara_preparepic i, i(1)
		pos wx + 40, wy + 74 + cnt * 19 - 8
		gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
		grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i) / (1 + (chipc(CHIPC_HEIGHT, i) > inf_tiles)), inf_tiles
		i = list(0, p)
		s = cdatan(CDATAN_NAME, i)
		cutname s, 36
		cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		if ( allyctrl == 4 ) {
			if ( fov_los(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, i), cdata(CDATA_Y, i)) == 0 | dist(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), cdata(CDATA_X, i), cdata(CDATA_Y, i)) > sdataref(SKILL_DATAREF_TG, SKILL_SPACT_CHEER) \ 1000 + 1 ) {
				s = lang("(Ћ‹ЉoЉO)", "(OutRange")
			}
			else {
				s = "Hp:" + cdata(CDATA_HP, i) * 100 / cdata(CDATA_MAX_HP, i) + "%"
				if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_OFFENSIVE ) {
					s += lang("/“ЛЊ‚/", "(offensive")
				}
				if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_DEFENSIVE ) {
					s += lang("/–hЊд/", "(defensive")
				}
				if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_INTERCEPT ) {
					s += lang("/Њ}Њ‚/", "(intercept")
				}
				if ( cdata(CDATA_DIRECTIVE_MODE, i) == DIRECTIVE_MODE_TALKING ) {
					s += lang("/ЊрЏВ/", "(talking")
				}
				s += lang("ѓKЃ[ѓhѓuѓЊѓCѓN" + cdata(CDATA_DRAIN_HP, i) + "%", " GuardBreak:" + cdata(CDATA_DRAIN_HP, i) + "%")
			}
		}
		if ( allyctrl != 4 ) {
			s = "Lv." + cdata(CDATA_LEVEL, i) + " "
			s += gendername(i)
			if ( allyctrl != 5 ) {
				s += lang(" ", "(") + calcage(i) + "" + lang("ЌО", ")")
			}
		}
		pos wx + 372, wy + 66 + cnt * 19 + 2
		mes s
		if ( allyctrl != 2 ) {
			if ( allyctrl == 1 ) {
				s = "" + calchirecost(i) * 20 + "(" + calchirecost(i) + ")"
			}
			else {
				s = "" + calchirecost(i)
			}
			if ( allyctrl == 1 ) {
				pos wx + 512, wy + 66 + cnt * 19 + 2
				mes s + lang(" gold", "gp")
			}
			if ( allyctrl == 3 ) {
				s = "" + cdata(CDATA_LEVEL, i)
			}
			if ( allyctrl == 5 ) {
				s = "" + cdata(CDATA_CONDITION_BLEED, i)
				pos wx + 512, wy + 66 + cnt * 19 + 2
				mes s
			}
		}
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		return p
	}
	page_change *com_listNpc_loop_pgchk
	if ( key == key_cancel ) {
		return -1
	}
	goto *com_listNpc_loop

*com_reserve
	snd SOUNDLIST_POP2
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	repeat MAX_DB
		if ( itemmemory(2, cnt) == 0 ) {
			continue
		}
		list(0, listmax) = cnt, cnt
		listmax++
	loop
	gosub *sort_list
	windowshadow = 1
*com_reserve_loop_pgchk
	redraw 0
	page_check
*com_reserve_loop
	redraw 0
	s = lang("—\–сѓЉѓXѓg", "Reserve List"), strhint2 + strhint3
	display_window (windoww - 540) / 2 + inf_screenx, winposy(448), 540, 448
	display_topic lang("ѓAѓCѓeѓЂ‚М–ј‘O", "Name"), wx + 28, wy + 36
	display_topic lang("—\–сЏу‹µ", "Status"), wx + 390, wy + 36
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 440, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)

        preparePicItem xy2pic(0, 13), 0

		pos wx + 38, wy + 73 + cnt * 19
		gmode 2, inf_tiles, inf_tiles
		grotate 1, 0, 960, 0, inf_tiles, inf_tiles
		s = ioriginalnameref(i)
		cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		pos wx + 400, wy + 66 + cnt * 19 + 2
		if ( itemmemory(2, i) == 1 ) {
			color 120, 120, 120
			mes lang("“ь‰Ч‚И‚µ", "-")
		}
		else {
			color 55, 55, 255
			mes lang("“ь‰Ч—\’и", "Reserved")
		}
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		if ( p == ITEM_ID_SPELLBOOK_WISHING | p == ITEM_ID_SPELLBOOK_HARVEST ) {
			snd SOUNDLIST_FAIL1
			chatc@DP = tc
			txt lang("Ѓu‚»‚М–{‚Н“ьЋи‚Е‚«‚И‚ў‚ЛЃv", cnvtalk("Ah, that book is unavailable."))
			goto *com_reserve_loop_pgchk
		}
		snd SOUNDLIST_OK1
		if ( itemmemory(2, p) == 1 ) {
			itemmemory(2, p) = 2
		}
		else {
			itemmemory(2, p) = 1
		}
		goto *com_reserve_loop_pgchk
	}
	page_change *com_reserve_loop_pgchk
	if ( key == key_cancel ) {
		return -1
	}
	goto *com_reserve_loop

*com_jukebox
	snd SOUNDLIST_POP2
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	repeat MUSICLIST_MAX - STARTING_MUSICLIST - 1, STARTING_MUSICLIST
		list(0, listmax) = cnt, cnt
		listmax++
	loop
	gosub *sort_list
*com_jukebox_loop_pgchk
	redraw 0
	page_check
*com_jukebox_loop
	redraw 0
	s = lang("ЌДђ¶ѓЉѓXѓg", "Playlist"), strhint2 + strhint3
	display_window (windoww - 340) / 2 + inf_screenx, winposy(448), 340, 448
	display_topic lang("ѓ^ѓCѓgѓ‹", "Name"), wx + 28, wy + 36
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 200, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)
		s = "No." + p + "     "
		if ( p == 0 ) {
			s += " mcTown1"
		}
		if ( p == 1 ) {
			s += " mcTown2"
		}
		if ( p == 2 ) {
			s += " mcTown3"
		}
		if ( p == 3 ) {
			s += " mcTown4"
		}
		if ( p == 4 ) {
			s += " mcDungeon1"
		}
		if ( p == 5 ) {
			s += " mcDungeon2"
		}
		if ( p == 6 ) {
			s += " mcDungeon3"
		}
		if ( p == 7 ) {
			s += " mcDungeon4"
		}
		if ( p == 8 ) {
			s += " mcDungeon5"
		}
		if ( p == 9 ) {
			s += " mcDungeon6"
		}
		if ( p == 10 ) {
			s += "mcPuti"
		}
		if ( p == 11 ) {
			s += "mcBoss"
		}
		if ( p == 12 ) {
			s += "mcBoss2"
		}
		if ( p == 13 ) {
			s += "mcVictory"
		}
		if ( p == 14 ) {
			s += "mcOpening"
		}
		if ( p == 15 ) {
			s += "mcLastBoss"
		}
		if ( p == 16 ) {
			s += "mcHome"
		}
		if ( p == 17 ) {
			s += "mcLonely"
		}
		if ( p == 18 ) {
			s += "mcChaos"
		}
		if ( p == 19 ) {
			s += "mcMarch1"
		}
		if ( p == 20 ) {
			s += "mcMarch2"
		}
		if ( p == 21 ) {
			s += "mcMarch3"
		}
		if ( p == 22 ) {
			s += "mcArena"
		}
		if ( p == 23 ) {
			s += "mcFanfare"
		}
		if ( p == 24 ) {
			s += "mcVillage1"
		}
		if ( p == 25 ) {
			s += "mcBattle1"
		}
		if ( p == 26 ) {
			s += "mcCasino"
		}
		if ( p == 27 ) {
			s += "mcCoda"
		}
		if ( p == 28 ) {
			s += "mcRuin"
		}
		if ( p == 29 ) {
			s += "mcWedding"
		}
		if ( p == 30 ) {
			s += "mcPetArena"
		}
		if ( p == 31 ) {
			s += "mcUnrest"
		}
		if ( p == 32 ) {
			s += "mcTown5"
		}
		if ( p == 33 ) {
			s += "mcUnrest2"
		}
		if ( p == 34 ) {
			s += "mcTown6"
		}
		if ( p == 35 ) {
			s += "mcField1"
		}
		if ( p == 36 ) {
			s += "mcField2"
		}
		if ( p == 37 ) {
			s += "mcField3"
		}
		if ( p == 38 ) {
			s += "mcMemory"
		}
		if ( p == 39 ) {
			s += "mcIntro"
		}
		if ( p == 40 ) {
			s += "mcBattle2"
		}
		if ( p == 41 ) {
			s += "mcBoss3"
		}
		if ( p == 42 ) {
			s += "mcTown7"
		}
		if ( p == 43 ) {
			s += "mcTown8"
		}
		if ( p == 44 ) {
			s += "mcTown9"
		}
		if ( p == 45 ) {
			s += "mcDungeon7"
		}
		if ( p == 46 ) {
			s += "mcDungeon8"
		}
		if ( p == 47 ) {
			s += "mcDungeon9"
		}
		if ( p == 48 ) {
			s += "mcLog"
		}
		if ( p == 49 ) {
			s += "mcVoyage"
		}
		if ( p == 50 ) {
			s += "mcOpening2"
		}
		if ( p == 51 ) {
			s += "mcMaid"
		}
		if ( p == 52 ) {
			s += "mcLonely2"
		}
		if ( p == 53 ) {
			s += "mcMemory2"
		}
		if ( p == 54 ) {
			s += "mcOpening3"
		}
		if ( p == 55 ) {
			s += "mcLastBoss3"
		}
		if ( p == 56 ) {
			s += "mcBoss4"
		}
		if ( p == 57 ) {
			s += "mcUnrest3"
		}
		if ( p == 58 ) {
			s += "mcDungeon10"
		}
		if ( p == 59 ) {
			s += "mcFest"
		}
		if ( p == 60 ) {
			s += "mcJapan"
		}
		if ( p == 61 ) {
			s += "mcSand"
		}
		if ( p == 62 ) {
			s += "mcBoss5"
		}
		if ( p == 63 ) {
			s += "mcTown10"
		}
		if ( p == 64 ) {
			s += "mcDungeon11"
		}
		if ( p == 65 ) {
			s += "mcLost1"
		}
		if ( p == 66 ) {
			s += "mcLost2"
		}
		if ( p == 67 ) {
			s += "mcLost3"
		}
		if ( p == 68 ) {
			s += "mcTown11"
		}
		if ( p == 69 ) {
			s += "mcTown12"
		}
		if ( p == 70 ) {
			s += "mcSad"
		}
		if ( p == 71 ) {
			s += "mcEND"
		}
		if ( p == 72 ) {
			s += "mcEND2"
		}
		if ( p == 73 ) {
			s += "mcHuge"
		}
		if ( p == 74 ) {
			s += "mcLastBoss4"
		}
		if ( p == 75 ) {
			s += "mcLastBoss5"
		}
		if ( p == 76 ) {
			s += "mcEvent1"
		}
		if ( p == 77 ) {
			s += "mcDungeon12"
		}
		if ( p == 78 ) {
			s += "mcDungeon13"
		}
		if ( p == 79 ) {
			s += "mcDungeon14"
		}
		if ( p == 80 ) {
			s += "mcDungeon15"
		}
		if ( p == 81 ) {
			s += "mcHome0"
		}
		if ( p == 82 ) {
			s += "mcZangyou"
		}
		if ( p == 83 ) {
			s += "mcMelan"
		}
		if ( p == 84 ) {
			s += "mcChurch"
		}
		if ( p == 85 ) {
			s += "mcSea1"
		}
		if ( p == 86 ) {
			s += "mcSea2"
		}
		if ( p == 87 ) {
			s += "No Music"
		}
		cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		music = p + 1
		if ( music >= MUSICLIST_MAX ) {
			music = MUSICLIST_MAX - 1
		}
		mdata(MDATA_MUSIC) = music
		gosub *music_play
		snd SOUNDLIST_OK1
		goto *com_jukebox_loop_pgchk
	}
	page_change *com_jukebox_loop_pgchk
	if ( key == key_cancel ) {
		return -1
	}
	goto *com_jukebox_loop

*com_listAdv
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	repeat MAX_CHARA_SAVE - 1
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) {
			continue
		}
		list(0, listmax) = cnt, -cdata(CDATA_FAME, cnt)
		listmax++
	loop
	gosub *sort_list
	windowshadow = 1
*com_listAdv_loop_pgchk
	redraw 0
	page_check
*com_listAdv_loop
	redraw 0
	s = lang("–`ЊЇЋТѓ‰ѓ“ѓN", "Adventurer Rank"), strhint2 + strhint3
	display_window (windoww - 640) / 2 + inf_screenx, winposy(448), 640, 448
	display_topic lang("–`ЊЇЋТ‚М–ј‘O‚Жѓ‰ѓ“ѓN", "Name and Rank"), wx + 28, wy + 36
	if ( csctrl == 4 ) {
		display_topic lang("–јђє(—FЌD)", "Fame(Impress)"), wx + 290, wy + 36
	}
	else {
		display_topic lang("“`ЊѕЋн—Ю(—FЌD)", "Message(Impress)"), wx + 290, wy + 36
	}
	display_topic lang("Њ»ЌЭ’n", "Location"), wx + 420, wy + 36
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 540, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		picols = cdata(CDATA_CHARA_PIC, list(0, p))
		if ( cdata(CDATA_PIC, list(0, p)) >= xy2pic(1, 21) & cdata(CDATA_PIC, list(0, p)) <= xy2pic(31, 21) ) {
			picols = 0
		}
		i = cdata(CDATA_PIC, list(0, p)) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT, (cdata(CDATA_PIC, list(0, p)) - picols * COLOR_TINT_MULT) / COLOR_TINT_MULT
		chara_preparepic i, i(1)
		pos wx + 40, wy + 74 + cnt * 19 - 8
		gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
		grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i) / (1 + (chipc(CHIPC_HEIGHT, i) > inf_tiles)), inf_tiles
		pos wx + 84, wy + 66 + cnt * 19 + 2
		mes cnvrank(p + 1) + lang("€К", "")
		i = list(0, p)
		s = "" + cdatan(CDATAN_AKA, i) + " " + cdatan(CDATAN_NAME, i)
		cutname s, 26
		cs_list s, wx + 118, wy + 66 + cnt * 19 - 1, 19
		if ( csctrl == 4 ) {
			s = "" + cdata(CDATA_FAME, i) + "(" + _impression(implevel(cdata(CDATA_IMPRESSION, i))) + ")"
		}
		else {
			dengon = cdata(CDATA_ADVENTURER_MESSAGE_RECEIVED, i)
			if ( i < 16 ) {
				dengon = 0
			}
			s = "" + _dengon(dengon) + "(" + _impression(implevel(cdata(CDATA_IMPRESSION, i))) + ")"
		}
		pos wx + 402 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
		mes s
		s = mapname(cdata(CDATA_AREA, i))
		if ( s == "" ) {
			s = lang("•s–ѕ", "Unknown")
		}
		if ( cdata(CDATA_EXIST, i) == CHAR_STATE_ADV_HOSPITAL ) {
			s = lang("•a‰@", "Hospital")
		}
		pos wx + 435, wy + 66 + cnt * 19 + 2
		mes s
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		if ( csctrl == 4 ) {
			snd SOUNDLIST_PAYGOLD1
			cdata(CDATA_GOLD, CHARA_PLAYER) -= 100
			cc = p
			snd SOUNDLIST_POP2
			gosub *com_charainfo
			tc = tcbk
			return
		}
		if ( csctrl == 5 ) {
			cc = p
			if ( cc < MAX_CHARA_FOLLOWER | (cdata(CDATA_AREA, cc) == gdata(GDATA_AREA) & cdata(CDATA_EXIST, cc) != CHAR_STATE_ADV_HOSPITAL) ) {
				snd SOUNDLIST_FAIL1
				txt lang("Ѓu—в‚в‚©‚µ" + _ka(1) + "Ѓv", " " + cnvtalk("You kidding?"))
				return
			}
			txtsetadvmes 6
			repeat 6
				promptl(0, promptmax) = s(cnt), key_select(cnt), "" + promptmax
				promptmax++
			loop
			val = promptx, prompty, 400, 1
			gosub *prompt_key
			if ( stat == 0 ) {
				return
			}
			cdata(CDATA_ADVENTURER_MESSAGE_RECEIVED, cc) = rtval
			if ( rtval == 0 ) {
				txt lang("Ѓu‚н‚©‚Б‚Ѕ" + _yo(3) + "Ѓv", " " + cnvtalk("Well noted!"))
				return
			}
			txt lang("Ѓu‚±‚Б‚ї‚МЏо•с–Ф‚рЋg‚Б‚ДЃAЉmЋА‚Й“`‚¦‚Д‚Ё‚­" + _yo(3) + "Ѓv", " " + cnvtalk("I'll make sure that your message is delivered!"))
			snd SOUNDLIST_PAYGOLD1
			cdata(CDATA_GOLD, CHARA_PLAYER) -= 2000
			tc = tcbk
			return
		}
	}
	page_change *com_listAdv_loop_pgchk
	if ( key == key_cancel ) {
		return
	}
	goto *com_listAdv_loop

*wish_fix
	if ( jp ) {
		inputlog = del_str(inputlog, ",")
		inputlog = del_str(inputlog, " ")
		inputlog = del_str(inputlog, "Ѓ@")
	}
	else {
		inputlog = getpath(inputlog, 16)
	}
	inputlog = del_str(inputlog, lang("ѓAѓCѓeѓЂ", "item"))
	inputlog = del_str(inputlog, lang("ѓXѓLѓ‹", "skill "))
	inputlog = del_str(inputlog, lang("ѓXѓLѓ‹", "skill"))
	return

*com_aka
	redraw 0
	cs = 0
	cs_bk = -1
	list(0, 0) = -1
	windowshadow = 1
	i = 10500
*com_aka_WHILE1
	redraw 0
	if ( cs != cs_bk ) {
		if ( val != 4 ) {
			s = lang("–ј‘O‚М‘I‘р", "Alias Selection"), strhint3b
		}
		if ( val == 4 ) {
			s = lang("–ј‘O‚М‘I‘р", "Alias Selection"), strhint1
		}
		display_window (windoww - 400) / 2 + inf_screenx, winposy(458), 400, 458
		display_topic lang("–ј‘O‚МЊу•в", "Alias List"), wx + 28, wy + 30
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		color 0, 0, 0
		repeat 17
			key_list(cnt) = key_select(cnt)
			keyrange = cnt + 1
			if ( val == 3 ) {
				randomize i + cnt
			}
			if ( val == 4 ) {
				i += rnd(500) * 17
				randomize i + cnt
			}
			if ( list(0, 0) == (-1) ) {
				listn(0, cnt) = random_title(val)
				list(1, cnt) = i + cnt
			}
			if ( cnt == 0 ) {
				listn(0, cnt) = lang("•К‚М–ј‘O‚рЌl‚¦‚й", "Reroll")
			}
			pos wx + 38, wy + 66 + cnt * 19 - 2
			gcopy 3, cnt * 24 + 72, 30, 24, 18
			cs_list listn(0, cnt), wx + 64, wy + 66 + cnt * 19 - 1, 19
		loop
		i += 17
		cs_bk = cs
		list(0, 0) = 0
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = cnt
			break
		}
		else {
			p = -1
		}
	loop
	if ( p != (-1) ) {
		if ( key == key_select(0) ) {
			list(0, 0) = -1
			snd SOUNDLIST_DICE
			cs_bk = -1
		}
		else {
			if ( val == 4 ) {
				return p
			}
			if ( val == 3 ) {
				return p
			}
			cmaka = listn(0, p)
			if ( val == 2 ) {
				gdatan(GDATAN_TEAM1) = cmaka
			}
			else {
				cdatan(CDATAN_AKA, CHARA_PLAYER) = cmaka
			}
			return 1
		}
	}
	if ( val != 4 ) {
		if ( key == key_cancel ) {
			snd SOUNDLIST_POP2
			return 0
		}
	}
	goto *com_aka_WHILE1
*com_aka_WEND1
	return

*com_wish_end
	s = lang(cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "‚Н‹¶Љм‚µ‚Д‹©‚с‚ѕЃBЃu" + inputlog + "ЃIЃIЃv" + txtcopy, cdatan(CDATAN_AKA, CHARA_PLAYER) + " " + cdatan(CDATAN_NAME, CHARA_PLAYER) + " goes wild with joy, \"" + inputlog + "!!\" " + cnven(txtcopy))
	if ( gdata(GDATA_WIZARD) == FALSE ) {
		if ( wishfilter == FALSE | develop ) {
			net_send "wish" + s
			wishfilter = TRUE
		}
	}
	return

*com_wish
	if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_LEVEL) == 179 ) {
		if ( gdata(GDATA_FLAG_MAIN) < 845 ) {
			txtef COLOR_PURPLE
			txt lang("Љи‚ў‚МЏ—ђ_‚М—Н‚аЃA‚±‚±‚Й‚Н“Н‚©‚И‚ў‚ж‚¤‚ѕЃcЃB", "The power of the Wish Goddess does not seem to reach here...")
			return
		}
		if ( gdata(GDATA_FLAG_MAIN) >= 845 ) {
			txtef COLOR_PURPLE
			txt lang("Љи‚ў‚МЏ—ђ_‚аЃAЌЎ‚Нђ_—Н‚Й—]—T‚Є‚И‚ў‚ж‚¤‚ѕЃcЃB", "It seems that even the Wish Goddess can afford to use her powers now...")
			return
		}
	}
	txtcopy = ""
	txtef COLOR_YELLOW
	txt lang("‰Ѕ‚р–]‚ЮЃH", "What do you wish for? ")
	val = (windoww - 290) / 2 + inf_screenx, winposy(90), 16, 0, 0
	inputlog = ""
	gosub *prompt_word
	txtmore
	txt lang("Ѓu" + inputlog + "ЃIЃIЃv", cnvtalk(inputlog + "!!"))
	msgtemp = ""
	autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
	tcopy = 1
	if ( inputlog == "" | inputlog == " " ) {
		txt_nothinghappens
		return
	}
	if ( en ) {
		inputlog = getpath(inputlog, 16)
	}
	snd SOUNDLIST_DING2
	if ( gdata(GDATA_WORLD) == AREA_OCEAN & gdata(GDATA_AREA) == AREA_WILDERNESS ) {
		txt lang("ђ…’†‚ЕѓSѓ{ѓSѓ{Њѕ‚н‚к‚Д‚а‚ж‚­•Є‚©‚с‚И‚ў‚с‚ѕ‚Ї‚ЗЃcЃB", "I don't quite understand what you're saying underwater...")
		goto *com_wish_end
	}
	if ( instr(inputlog, 0, "’†‚Мђ_") != (-1) | instr(inputlog, 0, "god inside") != (-1) ) {
		txt lang("’†‚Мђ_‚а‘е•ПЃc‚ Ѓc’†‚Мђ_‚И‚с‚Д‚ў‚й‚н‚Ї‚И‚ў‚¶‚б‚И‚ўЃIЃc‚Л‚¦ЃA•·‚©‚И‚©‚Б‚Ѕ‚±‚Ж‚Й‚µ‚Д‚ЛЃB", "It must be rough for the god insi... Ah... There's no god inside!... Hey, listen to me!")
		goto *com_wish_end
	}
	if ( instr(inputlog, 0, "’†‚Мђl") != (-1) | instr(inputlog, 0, "man inside") != (-1) ) {
		txt lang("’†‚Мђl‚а‘е•П‚ЛЃB", "It must be rough for the person inside.")
		goto *com_wish_end
	}
	if ( inputlog == "ѓGѓwѓJѓgѓ‹" | inputlog == "ehekatl" ) {
		txt lang("Ѓu‚¤‚Э‚Э‚г‚Э‚г‚џЃIЃv", cnvtalk("Meeewmew!"))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_EHEKATL, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓ‹ѓ‹ѓEѓB" | inputlog == "lulwy" ) {
		txt lang("ЃuѓAѓ^ѓV‚рЊД‚С‚В‚Ї‚й‚Ж‚Нђ¶€У‹C‚ЛЃv", cnvtalk("How bold you are to summon me like this."))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_LULWY, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓIѓpЃ[ѓgѓX" | inputlog == "opatos" ) {
		txt lang("ЃuѓtѓDѓnѓnѓnѓnѓnѓnЃ[ЃI—€‚Д‚в‚Б‚Ѕ‚јЃv", cnvtalk("Muwahaha! Here I am!"))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_OPATOS, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓNѓ~ѓЌѓ~" | inputlog == "kumiromi" ) {
		txt lang("ЃuЊN‚Є–l‚рЊД‚с‚Е‚­‚к‚й‚И‚с‚ДЃcЉр‚µ‚ўЃcЃv", cnvtalk("I'm happy... that you summoned me..."))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_KUMIROMI, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓ}ѓj" | inputlog == "mani" ) {
		txt lang("Ѓu‚ж‚­‚јЊД‚с‚ѕЃBЋ„‚рђ’‚ЯЏМ‚¦‚йЊ —‚р‚в‚л‚¤Ѓv", cnvtalk("You did well to summon me. I'll allow you the honor of worshiping me."))
		flt
		novoidlv = 1
		flt
		characreate -1, CREATURE_ID_MANI, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓCѓcѓpѓЌѓgѓ‹" | inputlog == "itzpalt" ) {
		txt lang("Ѓu‚»‚МЌ°‚ЙЌЏ‚ЯЃA‚±‚к‚аЊі‘f‚М–a‚®‰^–Ѕ‚И‚иЃv", cnvtalk("The engraving upon your soul... This too is part of the fate spun by the Element."))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_ITZPALT, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓ„ѓJѓeѓNѓg" | inputlog == "yacatect" ) {
		txt lang("Ѓu‚ЁЊД‚С‚Ж‚ ‚з‚О‘¦ЋQЏгЃI‚И‚с‚вЃHЏ¤’k‚в‚л‚©ЃHЃv", cnvtalk("You call on me and I appear! What's up? Got a business transaction for me?"))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_YACATECT, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "ѓWѓ…ѓA" | inputlog == "jure" ) {
		txt lang("Ѓu‚ЧЃA•К‚Й—€‚Ѕ‚­‚Д—€‚Ѕ‚н‚Ї‚¶‚б‚И‚ў‚с‚ѕ‚©‚з‚ЛЃIЃv", cnvtalk("I-it's not like I wanted to come or anything! It's not!"))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_JURE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "q" | inputlog == "Q" ) {
		txt lang("Ѓu‚«‚гЃ[ЃфЃv", cnvtalk("q!"))
		flt
		novoidlv = 1
		characreate -1, CREATURE_ID_QUANTUM_CREATURE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
		goto *com_wish_end
	}
	if ( inputlog == "Ћб‚і" | inputlog == "Ћб•Ф‚и" | inputlog == "”N" | inputlog == "”ь–e" | inputlog == "youth" | inputlog == "age" | inputlog == "beauty" ) {
		txt lang("‚У‚Ј‚сЃc‚»‚с‚ИЉи‚ў‚Е‚ў‚ў‚с‚ѕЃB", "A typical wish.")
		cdata(CDATA_AGE, CHARA_PLAYER) += 20
		if ( cdata(CDATA_AGE, CHARA_PLAYER) + 12 > gdata(GDATA_YEAR) ) {
			cdata(CDATA_AGE, CHARA_PLAYER) = gdata(GDATA_YEAR) - 12
		}
		goto *com_wish_end
	}
	if ( inputlog == "’К‚и–ј" | inputlog == "€Щ–ј" | inputlog == "aka" | inputlog == "title" | inputlog == "name" | inputlog == "alias" ) {
		if ( gdata(GDATA_WIZARD) ) {
			txt lang("‚ѕ‚Я‚жЃB", "*laugh*")
			goto *com_wish_end
		}
		txt lang("ђV‚µ‚ў€Щ–ј‚НЃH", "What's your new alias?")
		val = 0
		gosub *com_aka
		if ( stat == 1 ) {
			txt lang("‚ ‚И‚Ѕ‚МђV‚µ‚ў€Щ–ј‚НЃu" + cmaka + "ЃvЃB–ћ‘«‚µ‚Ѕ‚©‚µ‚зЃH", "You will be known as <" + cmaka + ">.")
			msgtemp = cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "‚НЌЎЊг" + cmaka + "‚Ж–јЏж‚й‚±‚Ж‚Й‚µ‚ЅЃB"
		}
		else {
			txtmore
			txt lang("‚ ‚зЃA‚»‚М‚Ь‚Ь‚Е‚ў‚ў‚МЃH", "What a waste of a wish!")
			msgtemp = "‚ ‚зЃA‚»‚М‚Ь‚Ь‚Е‚ў‚ў‚МЃH"
		}
		goto *com_wish_end
	}
	if ( inputlog == "“]ђE" | inputlog == "ђE" | inputlog == "class" | inputlog == "job" ) {
		txt lang("‚И‚и‚Ѕ‚ўђE‹Ж‚НЃH", "What's your new class?")
		val = (windoww - 220) / 2 + inf_screenx, winposy(90), 12, 1, 0
		inputlog = ""
		input_mode = 0
		gosub *prompt_word
		if ( inputlog == "" ) {
			txt lang("‚в‚Б‚П‚и‚в‚Я‚ЅЃB", "You changed your mind.")
		}
		else {
			if ( inputlog == "ђнЋm" | inputlog == "warrior" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "warrior"
			}
			if ( inputlog == "€вђХЌr‚з‚µ" | inputlog == "thief" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "thief"
			}
			if ( inputlog == "–‚–@Ћg‚ў" | inputlog == "wizard" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "wizard"
			}
			if ( inputlog == "”_–Ї" | inputlog == "farmer" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "farmer"
			}
			if ( inputlog == "ѓvѓЊѓfѓ^Ѓ[" | inputlog == "predator" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "predator"
			}
			if ( inputlog == "Ћлђl" | inputlog == "archer" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "archer"
			}
			if ( inputlog == "–‚–@ђнЋm" | inputlog == "warmage" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "warmage"
			}
			if ( inputlog == "ЉПЊх‹q" | inputlog == "tourist" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "tourist"
			}
			if ( inputlog == "ѓsѓAѓjѓXѓg" | inputlog == "pianist" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "pianist"
			}
			if ( inputlog == "‹@ЌH•є" | inputlog == "gunner" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "gunner"
			}
			if ( inputlog == "ѓvѓЉЃ[ѓXѓg" | inputlog == "priest" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "priest"
			}
			if ( inputlog == "ѓNѓЊѓCѓ‚ѓA" | inputlog == "claymore" ) {
				cdatan(CDATAN_CLASS, CHARA_PLAYER) = "claymore"
			}
			cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) = "" + inputlog
			txt lang("‚ ‚И‚Ѕ‚МђV‚µ‚ўђE‹Ж‚НЃu" + cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) + "Ѓv‚ѕЃB", "You will be known as <" + cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) + ">.")
			msgtemp = cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "‚Н" + cdatan(CDATAN_FAKE_CLASS, CHARA_PLAYER) + "‚МђE‚ЙЏA‚ў‚ЅЃB"
		}
		goto *com_wish_end
	}
	if ( inputlog == "“]ђ¶" | inputlog == "Ћн‘°" | inputlog == "race" ) {
		txt lang("ђ¶‚Ь‚к•П‚н‚и‚Ѕ‚ўЋн‘°‚НЃH", "What's your new race?")
		val = (windoww - 220) / 2 + inf_screenx, winposy(90), 12, 1, 0
		inputlog = ""
		input_mode = 0
		gosub *prompt_word
		if ( inputlog == "" ) {
			txt lang("‚в‚Б‚П‚и‚в‚Я‚ЅЃB", "You changed your mind.")
		}
		else {
			cdatan(CDATAN_CUSTOM_RACE, CHARA_PLAYER) = "" + inputlog
			txt lang("‚ ‚И‚Ѕ‚НЃu" + cdatan(CDATAN_CUSTOM_RACE, CHARA_PLAYER) + "Ѓv‚Йђ¶‚Ь‚к•П‚н‚Б‚ЅЃB", "You change your race to <" + cdatan(CDATAN_CUSTOM_RACE, CHARA_PLAYER) + ">.")
			msgtemp = cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "‚Н" + cdatan(CDATAN_CUSTOM_RACE, CHARA_PLAYER) + "‚Й“]ђ¶‚µ‚ЅЃB"
		}
		goto *com_wish_end
	}
	if ( inputlog == "ђ«“]Љ·" | inputlog == "ђ«" | inputlog == "€Щђ«" | inputlog == "sex" ) {
		txt lang("‚З‚с‚Иђ«•К‚Є—~‚µ‚ўЃH", "Which gender would you like?")

		promptAdd cnven(strmale), "null", 0
		promptAdd cnven(strfemale), "null", 1
		promptAdd cnven(lang("Ћ©ЏМ’jђ«", "male?")), "null", 2
		promptAdd cnven(lang("Ћ©ЏМЏ—ђ«", "female?")), "null", 3
		promptAdd cnven(lang("—јђ«‹п—L", "hermaphrodite")), "null", 4
		promptAdd cnven(lang("ђ«•К•s–ѕ", "unknown")), "null", 5
        val = promptx, prompty, 200, 1
		gosub *prompt_key

        if ( rtval == (-1) ) {
			txt lang("‚в‚Б‚П‚и‚в‚Я‚ЅЃB", "You changed your mind.")
			goto *com_wish_end
        }

        locvar_sex = cdata(CDATA_SEX, CHARA_PLAYER)
        locvar_newsex = cdatan(CDATAN_NEWSEX, CHARA_PLAYER)

 		if ( rtval == 0 ) {
 			locvar_sex = SEX_MALE
			locvar_newsex = ""
 		}
 		if ( rtval == 1 ) {
 			locvar_sex = SEX_FEMALE
			locvar_newsex = ""
		}
		if ( rtval == 2 ) {
			locvar_sex = SEX_FEMALE
			locvar_newsex = lang("Ћ©ЏМ’jђ«", "male?")
		}
		if ( rtval == 3 ) {
			locvar_sex = SEX_MALE
			locvar_newsex = lang("Ћ©ЏМЏ—ђ«", "female?")
		}
		if ( rtval == 4 ) {
			locvar_sex = SEX_FEMALE
			locvar_newsex = lang("—јђ«‹п—L", "hermaphrodite")
		}
		if ( rtval == 5 ) {
			locvar_sex = SEX_MALE
    	    locvar_newsex = lang("‚И‚µ", "none")
		}

        txt lang("ђ«•К–ј‚р•ПЌX‚·‚йЃH", "Will you change name of gender?")
		promptYesNo
        if ( rtval == 0 ) {
			txt lang("ђV‚µ‚ўђ«•К‚НЃH", "What's a new name of gender?")
			val = (windoww - 220) / 2 + inf_screenx, winposy(90), 12, 1, 0
			inputlog = ""
			input_mode = 0
			gosub *prompt_word
			if ( inputlog != "" ) {
				locvar_newsex = "" + inputlog
			}
        }

		cdata(CDATA_SEX, CHARA_PLAYER) = locvar_sex
		cdatan(CDATAN_NEWSEX, CHARA_PLAYER) = locvar_newsex

		txt lang(name(CHARA_PLAYER) + "‚Н" + gendername(CHARA_PLAYER) + "‚Й‚И‚Б‚ЅЃI Ѓc‚а‚¤Њг–Я‚и‚Н‚Е‚«‚И‚ў‚н‚жЃB", name(CHARA_PLAYER) + " became " + gendername(CHARA_PLAYER) + "!")
		goto *com_wish_end
	}
	if ( inputlog == "жЬЌЯ" | inputlog == "redemption" | inputlog == "atonement" ) {
		if ( cdata(CDATA_KARMA, CHARA_PLAYER) >= 0 ) {
			txt lang("ЃcЌЯ‚И‚с‚Д”Ж‚µ‚Д‚И‚ў‚¶‚б‚И‚ўЃB", "You aren't a sinner.")
			goto *com_wish_end
		}
		modkarma CHARA_PLAYER, cdata(CDATA_KARMA, CHARA_PLAYER) / 2 * (-1)
		txt lang("‚ ‚зЃc“sЌ‡‚М‚ў‚ў‚±‚Ж‚рЊѕ‚¤‚М‚ЛЃB", "What a convenient wish!")
		goto *com_wish_end
	}
	if ( inputlog == "ЋЂ" | inputlog == "death" ) {
		txt lang("‚»‚к‚Є‚Ё–]‚Э‚И‚зЃc", "If you wish so...")
		dmghp CHARA_PLAYER, 99999, DAMAGE_FROM_UNSEEN
		goto *com_wish_end
	}
	if ( inputlog == "’‡ЉФ" | inputlog == "friend" | inputlog == "company" | inputlog == "ally" ) {
		evadd EVENT_FIRST_ALLY
		goto *com_wish_end
	}
	if ( inputlog == "‹а" | inputlog == "‹а‰Э" | inputlog == "•x" | inputlog == "ЌаЋY" | inputlog == "money" | inputlog == "gold" | inputlog == "wealth" | inputlog == "fortune" ) {
		txtef COLOR_YELLOW
		txt lang("‹а‰Э‚ЄЌ~‚Б‚Д‚«‚ЅЃI", "Lots of gold pieces appear.")
		flt
		itemcreate -1, ITEM_ID_GOLD_PIECE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), (cdata(CDATA_LEVEL, CHARA_PLAYER) / 3 + 1) * 10000
		goto *com_wish_end
	}
	if ( inputlog == "ѓЃѓ_ѓ‹" | inputlog == "Џ¬‚і‚ИѓЃѓ_ѓ‹" | inputlog == "‚ї‚ў‚і‚ИѓЃѓ_ѓ‹" | inputlog == "coin" | inputlog == "medal" | inputlog == "small coin" | inputlog == "small medal" ) {
		txtef COLOR_YELLOW
		txt lang("Џ¬‚і‚ИѓЃѓ_ѓ‹‚ЄЌ~‚Б‚Д‚«‚ЅЃI", "Some small coins appear.")
		flt
		itemcreate -1, ITEM_ID_SMALL_MEDAL, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 3 + rnd(3)
		goto *com_wish_end
	}
	if ( inputlog == "ѓvѓ‰ѓ`ѓi" | inputlog == "ѓvѓ‰ѓ`ѓiЌd‰Э" | inputlog == "platina" | inputlog == "platinum" ) {
		txtef COLOR_YELLOW
		txt lang("ѓvѓ‰ѓ`ѓiЌd‰Э‚ЄЌ~‚Б‚Д‚«‚ЅЃI", "Some platinum coins appear.")
		flt
		itemcreate -1, ITEM_ID_PLATINUM_COIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 5
		goto *com_wish_end
	}
	if ( inputlog == "‚ ‚МЊў" | inputlog == "AnoЊў" | inputlog == "anoinu" | inputlog == "dog whistle" ) {
		txt lang("ЃѕЃEѓЦЃE‚t ЃuѓjѓѓЃ[ѓ“ЃIЃv", "U'w'U \"Meow!\"")
		flt
		itemcreate -1, ITEM_ID_DOG_WHISTLE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
		goto *com_wish_end
	}
	if ( inputlog == "‚ ‚Ї‚Ь‚µ‚Д‚Ё‚Я‚Е‚Ж‚¤ЃI" | inputlog == "‚ ‚Ї‚Ь‚µ‚Д‚Ё‚Я‚Е‚Ж‚¤" | inputlog == "‚ ‚Ї‚Ё‚Я" | inputlog == "‚Ё‚Я‚Е‚Ж‚¤" | inputlog == "happy new year" ) {
		txt lang("‚Я‚Е‚Ѕ‚ў‚н‚ЛЃB", cnvtalk("I wish you a Happy New Year!"))
		flt
		itemcreate -1, ITEM_ID_SMALL_MEDAL, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 3 + rnd(3)
		goto *com_wish_end
	}
	if ( inputlog == "ѓЃѓЉЃ[ѓNѓЉѓXѓ}ѓXЃI" | inputlog == "ѓЃѓЉЃ[ѓNѓЉѓXѓ}ѓX" | inputlog == "ѓNѓЉѓXѓ}ѓX’†Ћ~" | inputlog == "ѓNѓЉѓXѓ}ѓX‚М’†Ћ~" | inputlog == "merry christmas" ) {
		txt lang("‚¦ЃHЌЎ”N‚аѓNѓЉѓXѓ}ѓX‚Н’†Ћ~‚Е‚µ‚еЃH", cnvtalk("Merry Christmas!"))
		goto *com_wish_end
	}
	if ( inputlog == "ѓoѓЊѓ“ѓ^ѓCѓ“‚М’†Ћ~" | inputlog == "ѓoѓЊѓ“ѓ^ѓCѓ“’†Ћ~" | inputlog == "ѓ`ѓ‡ѓR" | inputlog == "ѓoѓЊѓ“ѓ^ѓCѓ“ѓ`ѓ‡ѓR" | inputlog == "ѓ`ѓ‡ѓRѓЊЃ[ѓg" | inputlog == "ЋиЌм‚иѓ`ѓ‡ѓR" | inputlog == "chocolate" ) {
		txt lang("‚Ь‚Б‚Ѕ‚­ЃA‚µ‚е‚¤‚Є‚И‚ў‚н‚ЛЃcЃB", cnvtalk("Here you are."))
		flt
		itemcreate -1, ITEM_ID_HANDMADE_CHOCOLATE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
		inv(INV_ITEM_PARAM1, ci) = 3
		inv(INV_ITEM_PARAM3, ci) = 6
		inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_NORMAL
		goto *com_wish_end
	}
	if ( inputlog == "‰B‚µѓLѓѓѓ‰" | inputlog == "secretchar" | inputlog == "secretcharacter" ) {
		if ( gdata(GDATA_FLAG_SUB_STRUGGLE_AGAINST_INSANITY) < 1000 ) {
			txt lang("‚»ЃA‚»‚с‚И‚М‚ў‚й‚н‚Ї‚И‚ў‚¶‚б‚И‚ўЃI", "T-there's no such thing!")
			goto *com_wish_end
		}
		evadd EVENT_SECRET_CHAR
		goto *com_wish_end
	}
	if ( inputlog == "‘—ЉТ" | inputlog == "repatriation" ) {
		txt lang("‚ЩЃ[‚зЃA‚З‚¤‚З‚¤ЃB", cnvtalk("Please calm. Here, we return."))
		repeat MAX_CHARA_TOTAL
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( cdata(CDATA_ALLIED, cnt) == 100 ) {
				continue
			}
			tc = cnt
			if ( cdata(CDATA_ID, tc) != CREATURE_ID_THE_ELEMENT & cdata(CDATA_ID, tc) != CREATURE_ID_HYPER_YACATECT & cdata(CDATA_ID, tc) != CREATURE_ID_BLESSED_JURE & cdata(CDATA_ID, tc) != CREATURE_ID_DEVASTATE_LULWY & cdata(CDATA_ID, tc) != CREATURE_ID_BUILDUP_OPATOS & cdata(CDATA_ID, tc) != CREATURE_ID_INSANE_KUMIROMI & cdata(CDATA_ID, tc) != CREATURE_ID_DEUS_EX_MANINA & cdata(CDATA_ID, tc) != CREATURE_ID_GOD_INSIDE_EHEKATL ) {
				continue
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_THE_ELEMENT ) {
				txt lang("ЃuѓnѓbЃI‰д‚Ж‚µ‚Ѕ‚±‚Ж‚Є’и–Ѕ‘ЉЋи‚Й–{‹C‚рЃcЃv", cnvtalk("Haa! What you did unto me, turned you into my destined opponent..."))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_HYPER_YACATECT ) {
				txt lang("Ѓu‚Н‚И‚і‚с‚©‚ўѓ{ѓPѓFЃIЃv", cnvtalk("Count your days, stupid!"))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_BLESSED_JURE ) {
				txt lang("ЃuѓAѓ“ѓ^‚И‚с‚©‘е‚БЊ™‚ўЃIЃc‚О‚©‚џЃv", cnvtalk("I HATE YOU!... Idiot!"))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_DEVASTATE_LULWY ) {
				txt lang("ЃuЃc‹»‚Є—в‚Я‚Ѕ‚нЃv", cnvtalk("The joy, it fades..."))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_BUILDUP_OPATOS ) {
				txt lang("ЃuѓtѓnЃ[ѓ“ЃIѓtѓnѓbЃIЃv", cnvtalk("Muhan! Muha...!"))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_INSANE_KUMIROMI ) {
				txt lang("Ѓu‚±‚к‚¶‚бЋы‚Ь‚и‚Є‚В‚©‚И‚ўЃcЃv", cnvtalk("It can't end like this..."))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_DEUS_EX_MANINA ) {
				txt lang("Ѓu‚Ё‚Б‚ЖЃA‚±‚±‚Е–‹€ш‚«‚©Ѓv", cnvtalk("Oh, are you putting an end to it?"))
				chara_vanquish tc
			}
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_GOD_INSIDE_EHEKATL ) {
				txt lang("ЃuѓtѓVѓѓЃ[ѓbЃIЃv", cnvtalk(" *Hiss* "))
				chara_vanquish tc
			}
		loop
		goto *com_wish_end
	}
	if ( instr(inputlog, 0, lang("ѓXѓLѓ‹ѓ`ѓPѓbѓg", "skill ticket")) != (-1) ) {
		flt
		itemcreate -1, ITEM_ID_SKILL_TICKET, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
		inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_NORMAL
		item_identify ci, ITEM_KNOWN_FULL
		txt lang("‘«Њі‚Й" + itemname(ci) + "‚Є“]‚Є‚Б‚Д‚«‚ЅЃB", "A " + itemname(ci) + " appears at your feet.")
		goto *com_wish_end
	}
	if ( instr(inputlog, 0, lang("ѓXѓLѓ‹", "skill")) != (-1) ) {
		goto *wish_skill
	}
	if ( instr(inputlog, 0, lang("ѓAѓCѓeѓЂ", "item")) != (-1) ) {
		goto *wish_item
	}
	if ( instr(inputlog, 0, lang("ѓJЃ[ѓh", "card")) != (-1) ) {
		goto *wish_card
	}
	if ( instr(inputlog, 0, lang("”Ќђ»", "figure")) != (-1) | instr(inputlog, 0, "‚Н‚­ђ»") != (-1) ) {
		goto *wish_figure
	}

*wish_item
	gosub *wish_fix
	i = 0
	repeat length(ioriginalnameref)
		if ( cnt == ITEM_ID_DUMMY ) {
			continue
		}
		if ( cnt == ITEM_ID_BOOK ) {
			continue
		}
		if ( cnt == ITEM_ID_ROD_WISHING ) {
			continue
		}
		if ( cnt == ITEM_ID_SPELLBOOK_WISHING ) {
			continue
		}
		if ( cnt == ITEM_ID_SHOPKEEPERS_TRUNK ) {
			continue
		}
		p = 0
		cnt2 = cnt
		if ( ioriginalnameref(cnt) == inputlog ) {
			p = 10000
		}
		s = cnvitemname(cnt2)
		if ( en ) {
			s = getpath(s, 16)
		}
		repeat strlen(inputlog)
			if ( instr(s, 0, strmid(inputlog, 0, cnt * (1 + jp))) != (-1) ) {
				p = p + 50 * (cnt + 1) + rnd(15)
			}
		loop
		if ( p != 0 ) {
			dblist(0, i) = cnt, p
			i++
		}
	loop
	if ( i != 0 ) {
		repeat
			p = 0, 0
			repeat i
				if ( dblist(1, cnt) > p(1) ) {
					p = dblist(0, cnt), dblist(1, cnt)
					wishid = cnt
				}
			loop
			if ( p == 0 ) {
				f = 0
				break
			}
			bukifix = 1
			flt cdata(CDATA_LEVEL, CHARA_PLAYER) + 10, FIX_QUALITY_MIRACLE
			if ( p == ITEM_ID_AURORA_RING | p == ITEM_ID_SEVEN_LEAGUE_BOOTS | p == ITEM_ID_VINDALE_CLOAK | p == ITEM_ID_SPEED_RING ) {
				fixlv = calcobjlv(3)
			}
			if ( p == ITEM_ID_MATERIAL_KIT ) {
				objfix = 2
			}
			nostack = 1
			nooracle = 1
			itemcreate -1, p, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
			nooracle = 0
			if ( ibit(ITEM_BIT_PRECIOUS, ci) == 1 | inv(INV_ITEM_QUALITY, ci) == FIX_QUALITY_UNIQUE ) {
				if ( gdata(GDATA_WIZARD) == 0 ) {
					dblist(1, wishid) = 0
					inv(INV_ITEM_NUM, ci) = 0
					itemmemory(1, inv(INV_ITEM_ID, ci))--
					cell_refresh inv(INV_ITEM_X, ci), inv(INV_ITEM_Y, ci)
					continue
				}
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_GOLD_PIECE ) {
				inv(INV_ITEM_NUM, ci) = cdata(CDATA_LEVEL, CHARA_PLAYER) * cdata(CDATA_LEVEL, CHARA_PLAYER) * 50 + 20000
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_PLATINUM_COIN ) {
				inv(INV_ITEM_NUM, ci) = 8 + rnd(5)
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_TEAR_OF_GOD ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_CORE_OF_NEFIA, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
				txt lang("‚¤Ѓ[‚сЃB‚ї‚е‚Б‚ЖЌЎ‚НЏo‚И‚ў‚©‚зЃA‚±‚к‚Е‰д–ќ‚µ‚ДЃB", "It does not come out now, please be patient with this.")
				txtmore
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_WONDER_BODY_FORMER ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_SCROLL_WONDER, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 3
				inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_BLESSED
				txt lang("‚ ЃA‚»‚кЌЭЊЙђШ‚кЃB", "It's sold out.")
				txtmore
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_DEED_OF_LAND_BATTLESHIP | inv(INV_ITEM_ID, ci) == ITEM_ID_DEED_OF_MAGIC_LOCOMOTIVE ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_DEED_OF_CARRIAGE, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
				txt lang("‚ ЃA‚»‚кЌЭЊЙђШ‚кЃB", "It's sold out.")
				txtmore
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_DEED_OF_PIRATE_SHIP | inv(INV_ITEM_ID, ci) == ITEM_ID_DEED_OF_CRUISE_SHIP | inv(INV_ITEM_ID, ci) == ITEM_ID_DEED_OF_WARSHIP | inv(INV_ITEM_ID, ci) == ITEM_ID_DEED_OF_SUBMARINE ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_DEED_OF_FISHING_SHIP, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
				txt lang("‚ ЃA‚»‚кЌЭЊЙђШ‚кЃB", "It's sold out.")
				txtmore
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_RESEARCHERS_DIARY ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_RED_BOOK, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_HOLY_WELL ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_BOTTLE_WATER, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 3
				inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_BLESSED
				txt lang("‚ ЃA‚»‚кЌЭЊЙђШ‚кЃB", "It's sold out.")
				txtmore
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_MEMORY_FRAGMENT ) {
				inv(INV_ITEM_NUM, ci) = 0
				flt
				itemcreate -1, ITEM_ID_SKILLBOOK, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
				inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_BLESSED
				txt lang("‚ ЃA‚»‚кЌЭЊЙђШ‚кЃB", "It's sold out.")
				txtmore
			}
			if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) == FILTER_ITEM_POTION | refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) == FILTER_ITEM_SCROLL ) {
				inv(INV_ITEM_NUM, ci) = 3 + rnd(2)
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_POTION_CURE_CORRUPTION ) {
					inv(INV_ITEM_NUM, ci) = 2 + rnd(2)
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_SCROLL_SUPERIOR_MATERIAL ) {
					inv(INV_ITEM_NUM, ci) = 2
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_SCROLL_GAIN_ATTRIBUTE ) {
					inv(INV_ITEM_NUM, ci) = 1
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_TREASURE_MAP ) {
					inv(INV_ITEM_NUM, ci) = 1
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_POTION_DESCENT ) {
					inv(INV_ITEM_NUM, ci) = 1
				}
				if ( inv(INV_ITEM_VALUE, ci) >= 5000 ) {
					inv(INV_ITEM_NUM, ci) = 3
				}
				if ( inv(INV_ITEM_VALUE, ci) >= 10000 ) {
					inv(INV_ITEM_NUM, ci) = 2
				}
				if ( inv(INV_ITEM_VALUE, ci) >= 20000 ) {
					inv(INV_ITEM_NUM, ci) = 1
				}
			}
			item_identify ci, ITEM_KNOWN_FULL
			txt lang("‘«Њі‚Й" + itemname(ci) + "‚Є“]‚Є‚Б‚Д‚«‚ЅЃB", "" + itemname(ci) + " appear" + _s2(inv(INV_ITEM_NUM, ci)) + ".")
			f = 1
			bukifix = 0
			break
		loop
		if ( f ) {
			goto *com_wish_end
		}
	}

*wish_skill
	gosub *wish_fix
	i = 0
	repeat STARTING_SKILL_SPACT
		f = 0
		if ( cnt >= STARTING_SKILL_ATTR & cnt < MAX_SKILL_ATTR ) {
			f = 1
		}
		if ( cnt >= STARTING_SKILL_WEAPON & cnt < STARTING_SKILL_SPELL ) {
			f = 1
		}
		if ( f == 0 ) {
			continue
		}
		p = 0
		cnt2 = cnt
		if ( skillname(cnt) == inputlog ) {
			p = 10000
		}
		s = skillname(cnt2)
		if ( en ) {
			s = getpath(s, 16)
		}
		repeat strlen(inputlog) / (1 + jp)
			if ( instr(s, 0, strmid(inputlog, cnt * (1 + jp), 1 + jp)) != (-1) ) {
				p += 50 + rnd(15)
			}
		loop
		if ( p != 0 ) {
			dblist(0, i) = cnt, p
			i++
		}
	loop
	if ( i != 0 ) {
		p = 0, 0
		repeat i
			if ( dblist(1, cnt) > p(1) ) {
				p = dblist(0, cnt), dblist(1, cnt)
			}
		loop
		if ( skillname(p) != "" ) {
			txtef COLOR_YELLOW
			if ( sorg(p, cc) == 0 ) {
				txt lang(name(cc) + "‚Н" + skillname(p) + "‚М‹ZЏp‚р‰п“ѕ‚µ‚ЅЃI", "You learn " + skillname(p) + "!")
				skillgain cc, p, 1
			}
			else {
				txt lang(name(cc) + "‚Н" + skillname(p) + "‚М‹ZЏp‚ЄЏг’B‚µ‚ЅЃI", "Your " + skillname(p) + " skill improves!")
				skillmod p, cc, 1000
				modgrowth cc, p, 25
			}
		}
		else {
			txt_nothinghappens
		}
		goto *com_wish_end
	}
	txt_nothinghappens
	goto *com_wish_end

*wish_card
	gosub *wish_monster
	flt
	characreate MAX_CHARA_NC, dbid, -3, 0
	flt
	itemcreate -1, ITEM_ID_CARD, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
	inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, MAX_CHARA_NC)
	inv(INV_ITEM_COL, ci) = cdata(CDATA_PIC, MAX_CHARA_NC) \ COLOR_TINT_MULT + cdata(CDATA_CHARA_PIC, MAX_CHARA_NC) * COLOR_TINT_MULT
	chara_vanquish MAX_CHARA_NC
	cell_refresh cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
	txt lang("‘«Њі‚Й" + itemname(ci) + "‚Є“]‚Є‚Б‚Д‚«‚ЅЃB", "" + itemname(ci) + " appear" + _s2(inv(INV_ITEM_NUM, ci)) + " from nowhere.")
	goto *com_wish_end

*wish_figure
	gosub *wish_monster
	flt
	characreate MAX_CHARA_NC, dbid, -3, 0
	flt
	itemcreate -1, ITEM_ID_FIGURINE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
	inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, MAX_CHARA_NC)
	inv(INV_ITEM_COL, ci) = cdata(CDATA_PIC, MAX_CHARA_NC) \ COLOR_TINT_MULT + cdata(CDATA_CHARA_PIC, MAX_CHARA_NC) * COLOR_TINT_MULT
	chara_vanquish MAX_CHARA_NC
	cell_refresh cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
	txt lang("‘«Њі‚Й" + itemname(ci) + "‚Є“]‚Є‚Б‚Д‚«‚ЅЃB", "" + itemname(ci) + " appear" + _s2(inv(INV_ITEM_NUM, ci)) + " from nowhere.")
	goto *com_wish_end

*wish_monster
	i = 0
	s2 = inputlog
	fix_wish s2
	repeat MAX_DB
		p = 0
		s = refchara(cnt, DBSPEC_CHARA_NAME_ORG, 1)
		if ( en ) {
			s = getpath(s, 16)
		}
		if ( instr(s, 0, s2) != (-1) ) {
			p = 1000 - (strlen(s) - strlen(s2)) * 10
		}
		if ( p != 0 ) {
			dblist(0, i) = cnt, p
			i++
		}
	loop
	p = 0, 0
	repeat i
		if ( dblist(1, cnt) > p(1) ) {
			p = dblist(0, cnt), dblist(1, cnt)
		}
	loop
	dbid = p
	if ( dbid == 0 ) {
		dbid = CREATURE_ID_AT_SIGN
	}
	return

*com_shortcut
	menucycle = 0
	if ( gdata(STARTING_GDATA_SHORTCUT + sc) == 0 ) {
		msgdup++
		txt lang("‚»‚МѓLЃ[‚Й‚НѓVѓ‡Ѓ[ѓgѓJѓbѓg‚ЄЉ„‚и“–‚Д‚з‚к‚Д‚ў‚И‚ўЃB", "The key is unassigned.")
		gosub *screen_draw
		goto *pc_turn
	}
	if ( gdata(STARTING_GDATA_SHORTCUT + sc) >= 10000 ) {
		invsc = gdata(STARTING_GDATA_SHORTCUT + sc) \ 10000
		invctrl = gdata(STARTING_GDATA_SHORTCUT + sc) / 10000, 0
		goto *com_inventory
	}
	efid = gdata(STARTING_GDATA_SHORTCUT + sc)
	if ( efid >= STARTING_SKILL_ACTIVE & efid < STARTING_SKILL_SPELL ) {
		goto *com_skill
	}
	if ( efid >= STARTING_SKILL_SPACT ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			txtnew
			txt_globalarea
			display_msg
			redraw 1
			goto *pc_turn
		}
		if ( efid < MAX_SKILL ) {
			if ( spact(efid - STARTING_SKILL_SPACT) == 0 ) {
				txt lang("‚а‚¤‚»‚МЌs“®‚Н‚Е‚«‚И‚ўЃB", "You can't use this shortcut any more.")
				gosub *screen_draw
				goto *pc_turn
			}
		}
		goto *com_skill
	}
	if ( efid >= STARTING_SKILL_SPELL ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			txtnew
			txt_globalarea
			display_msg
			redraw 1
			goto *pc_turn
		}
		if ( spell(efid - STARTING_SKILL_SPELL) <= 0 ) {
			msgdup++
			txt lang("‚»‚М–‚–@‚Н‚а‚¤Ћg‚¦‚И‚ўЃB", "You can't use that spell anymore.")
			gosub *screen_draw
			goto *pc_turn
		}
		goto *com_spellcast
	}
	goto *pc_turn

*com_dig
	txt lang("‚З‚М•ыЊь‚рЊ@‚йЃH ", "Which direction do you want to dig? ")
	val = 0
	gosub *prompt_direction
	if ( stat == 0 ) {
		txt_impossible
		gosub *screen_draw
		goto *pc_turn
	}
	refx = x
	refy = y
	tlocx = x
	tlocy = y
	if ( tlocx == cdata(CDATA_X, CHARA_PLAYER) ) {
		if ( tlocy == cdata(CDATA_Y, CHARA_PLAYER) ) {
			rowactre = 0
			gosub *search
			goto *turn_end
		}
	}
	if ( (chipm(CHIPM_ATTRIB, map(x, y, MAP_TILE_ID)) & CHIPM_ATTRIB_CANT_PASS) == 0 | chipm(CHIPM_ROLE, map(x, y, MAP_TILE_ID)) == MAP_CHIP_ROLE_WATER | mdata(MDATA_TYPE) == MAP_TYPE_WORLD | map(x, y, MAP_TILE_ID) == xy2pic(24, 16) | map(x, y, MAP_TILE_ID) == xy2pic(8, 21) | map(x, y, MAP_TILE_ID) == xy2pic(14, 23) | map(x, y, MAP_TILE_ID) == xy2pic(17, 23) | map(x, y, MAP_TILE_ID) == xy2pic(20, 23) ) {
		txt_impossible
		gosub *screen_draw
		goto *pc_turn
	}
	screenupdate = -1
	gosub *screen_draw
	goto *act_dig

*com_bash
	txt lang("‚З‚М•ыЊь‚Й‘М“–‚Ѕ‚и‚·‚йЃH ", "Which direction do you want to bash? ")
	val = 0
	gosub *prompt_direction
	if ( stat == 0 ) {
		txt_impossible
		gosub *screen_draw
		goto *pc_turn
	}
	goto *act_bash

*com_skill
	gosub *action
	if ( stat == 0 ) {
		gosub *screen_draw
		goto *pc_turn
	}
	goto *turn_end

*com_applySkill
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	cs = commark(0) \ 1000
	page = commark(0) / 1000
	curmenu = 1
	repeat STARTING_SKILL_SPELL - STARTING_SKILL_ACTIVE, STARTING_SKILL_ACTIVE
		if ( sdata(cnt, cc) != 0 ) {
			if ( cnt == SKILL_ACTIVE_PICKPOCKET ) {
				list(0, listmax) = cnt, 12
				listmax++
			}
		}
		if ( sdata(cnt, cc) != 0 ) {
			if ( cnt == SKILL_ACTIVE_RIDING ) {
				list(0, listmax) = cnt, 15
				listmax++
			}
		}
	loop
	repeat MAX_SKILL - STARTING_SKILL_SPACT
		if ( spact(cnt) == 1 ) {
			if ( sdataref(SKILL_DATAREF_TG, cnt + STARTING_SKILL_SPACT) / EXT_SDATAREF * EXT_SDATAREF != TARGET_TYPE_SELF & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_OVERRAY & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_MANA_BURST & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_FIRE_A_VOLLEY & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_SHADOW_RUSH ) {
				list(0, listmax) = cnt + STARTING_SKILL_SPACT, sdataref(SKILL_DATAREF_USE, STARTING_SKILL_SPACT + cnt)
				listmax++
			}
		}
	loop
	gosub *sort_list
	redraw 0
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_skill.bmp", 1
	gsel 0
	windowshadow = 1
*com_applySkill_loop_pgchk
	redraw 0
	page_check
	drawmenu 1
*com_applySkill_loop
	redraw 0
	s = lang("”\—Н‚М”­“®", "Skill"), strhint2 + strhint3 + strhint7 + strhint8
	display_window (windoww - 600) / 2 + inf_screenx, winposy(438), 600, 438, 0, 60
	display_topic lang("”\—Н‚М–јЏМ", "Name"), wx + 28, wy + 36
	display_topic lang("ѓRѓXѓg", "Cost"), wx + 220, wy + 36
	display_topic lang("”\—Н‚МЊш‰К", "Detail"), wx + 320, wy + 36
	pos wx + 46, wy - 16
	gcopy 3, 288 + 14 * 48, 48, 48, 48
	pos wx + ww - 168, wy
	gcopy 3, 1032, 96, 102, 48
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 490, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)
		pos wx + 40, wy + 74 + cnt * 19
		gmode 2, inf_tiles, inf_tiles
		grotate 1, (sdataref(SKILL_DATAREF_USE, list(0, p)) - 10) * inf_tiles, 672, 0, inf_tiles, inf_tiles
		s = ""
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == list(0, p) ) {
				s = "{" + cnt + "}"
			}
		loop
		cs_list skillname(list(0, p)) + s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		s = "" + sdataref(SKILL_DATAREF_COST, list(0, p)) + " Sp"
		pos wx + 288 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
		mes s
		gosub *skill_desc
		pos wx + 325, wy + 66 + cnt * 19 + 2
		mes strmid(s, 0, 34)
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	commark(0) = page * 1000 + cs
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		menucycle = 0
		efid = p
		screenupdate = -1
		gosub *screen_draw
		goto *com_skill
	}
	if ( key == "sc" ) {
		snd SOUNDLIST_OK1
		p = list(0, pagesize * page + cs)
		if ( gdata(STARTING_GDATA_SHORTCUT + sc) == p ) {
			gdata(STARTING_GDATA_SHORTCUT + sc) = 0
			goto *com_applySkill_loop_pgchk
		}
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == p ) {
				gdata(STARTING_GDATA_SHORTCUT + cnt) = 0
			}
		loop
		gdata(STARTING_GDATA_SHORTCUT + sc) = p
		txt_shortcut
		display_msg inf_screeny + inf_tiles
		goto *com_applySkill_loop_pgchk
	}
	if ( key == key_mode2 ) {
		p = list(0, pagesize * page + cs)
		if ( p <= 0 ) {
			goto *com_applySkill
		}
		if ( p == SKILL_ACTIVE_PICKPOCKET | p == SKILL_ACTIVE_RIDING ) {
			snd SOUNDLIST_FAIL1
			txtef COLOR_RED
			txt lang("ѓXѓLѓ‹A“®Њ^‹Z”\‚Н”с•\Ћ¦‚Й‚Е‚«‚И‚ўЃB", "Directly connected skills can not be sealed.")
		}
		else {
			snd SOUNDLIST_LOCKED1
			txtef COLOR_YELLOW
			txt lang("Ѓy”с•\Ћ¦ЃF" + skillname(p) + "Ѓz", "[Hidden: " + skillname(p) + "]")
			spact(p - STARTING_SKILL_SPACT) = 2
			goto *com_applySkill
		}
	}
	if ( key == key_msglog ) {
		snd SOUNDLIST_CHEST1
		txtef COLOR_GREEN
		txt lang("Ѓy‹Z”\ЃE‘S•\Ћ¦Ѓz", "[Showing all skills]")
		repeat MAX_SKILL - STARTING_SKILL_SPACT
			if ( spact(cnt) == 2 ) {
				if ( sdataref(SKILL_DATAREF_TG, cnt + STARTING_SKILL_SPACT) / EXT_SDATAREF * EXT_SDATAREF != TARGET_TYPE_SELF & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_OVERRAY & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_MANA_BURST & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_FIRE_A_VOLLEY & cnt + STARTING_SKILL_SPACT != SKILL_SPACT_SHADOW_RUSH ) {
					spact(cnt) = 1
				}
			}
		loop
		goto *com_applySkill
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 2 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 2
				}
			}
			key = ""
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					snd SOUNDLIST_SPELL
					goto *com_spell
				}
				if ( curmenu == 1 ) {
					snd SOUNDLIST_SKILL
					goto *com_applySkill
				}
				if ( curmenu == 2 ) {
					snd SOUNDLIST_SKILL
					goto *com_applyWideSkill
				}
			}
		}
	}
	page_change *com_applySkill_loop_pgchk
	if ( key == key_cancel ) {
		gosub *screen_draw
		goto *pc_turn
	}
	goto *com_applySkill_loop

*com_applyWideSkill
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	cs = commark(2) \ 1000
	page = commark(2) / 1000
	curmenu = 2
	repeat MAX_SKILL - STARTING_SKILL_SPACT
		if ( spact(cnt) == 1 ) {
			if ( sdataref(SKILL_DATAREF_TG, cnt + STARTING_SKILL_SPACT) / EXT_SDATAREF * EXT_SDATAREF == TARGET_TYPE_SELF | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_OVERRAY | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_MANA_BURST | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_FIRE_A_VOLLEY | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_SHADOW_RUSH ) {
				list(0, listmax) = cnt + STARTING_SKILL_SPACT, sdataref(SKILL_DATAREF_USE, STARTING_SKILL_SPACT + cnt)
				listmax++
			}
		}
	loop
	gosub *sort_list
	redraw 0
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_skill.bmp", 1
	gsel 0
	windowshadow = 1
*com_applyWideSkill_loop_pgchk
	redraw 0
	page_check
	drawmenu 1
*com_applyWideSkill_loop
	redraw 0
	s = lang("ЌL€ж”\—Н‚М”­“®", "Wide Skill"), strhint2 + strhint3 + strhint7 + strhint8
	display_window (windoww - 600) / 2 + inf_screenx, winposy(438), 600, 438, 0, 60
	display_topic lang("”\—Н‚М–јЏМ", "Name"), wx + 28, wy + 36
	display_topic lang("ѓRѓXѓg", "Cost"), wx + 220, wy + 36
	display_topic lang("”\—Н‚МЊш‰К", "Detail"), wx + 320, wy + 36
	pos wx + 46, wy - 16
	gcopy 3, 288 + 22 * 48, 48, 48, 48
	pos wx + ww - 168 - 12, wy
	gcopy 3, 1032, 96, 102, 48
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 490, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)
		pos wx + 40, wy + 74 + cnt * 19
		gmode 2, inf_tiles, inf_tiles
		grotate 1, (sdataref(SKILL_DATAREF_USE, list(0, p)) - 10) * inf_tiles, 672, 0, inf_tiles, inf_tiles
		s = ""
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == list(0, p) ) {
				s = "{" + cnt + "}"
			}
		loop
		cs_list skillname(list(0, p)) + s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		s = "" + sdataref(SKILL_DATAREF_COST, list(0, p)) + " Sp"
		pos wx + 288 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
		mes s
		gosub *skill_desc
		pos wx + 325, wy + 66 + cnt * 19 + 2
		mes strmid(s, 0, 34)
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	commark(2) = page * 1000 + cs
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		menucycle = 0
		efid = p
		screenupdate = -1
		gosub *screen_draw
		goto *com_skill
	}
	if ( key == "sc" ) {
		snd SOUNDLIST_OK1
		p = list(0, pagesize * page + cs)
		if ( gdata(STARTING_GDATA_SHORTCUT + sc) == p ) {
			gdata(STARTING_GDATA_SHORTCUT + sc) = 0
			goto *com_applyWideSkill_loop_pgchk
		}
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == p ) {
				gdata(STARTING_GDATA_SHORTCUT + cnt) = 0
			}
		loop
		gdata(STARTING_GDATA_SHORTCUT + sc) = p
		txt_shortcut
		display_msg inf_screeny + inf_tiles
		goto *com_applyWideSkill_loop_pgchk
	}
	if ( key == key_mode2 ) {
		p = list(0, pagesize * page + cs)
		if ( p <= 0 ) {
			goto *com_applyWideSkill
		}
		snd SOUNDLIST_LOCKED1
		txtef COLOR_YELLOW
		txt lang("Ѓy”с•\Ћ¦ЃF" + skillname(p) + "Ѓz", "[Hidden: " + skillname(p) + "]")
		spact(p - STARTING_SKILL_SPACT) = 2
		goto *com_applyWideSkill
	}
	if ( key == key_msglog ) {
		snd SOUNDLIST_CHEST1
		txtef COLOR_GREEN
		txt lang("ЃyЌL€ж‹Z”\ЃE‘S•\Ћ¦Ѓz", "[Showing all wide skills]")
		repeat MAX_SKILL - STARTING_SKILL_SPACT
			if ( spact(cnt) == 2 ) {
				if ( sdataref(SKILL_DATAREF_TG, cnt + STARTING_SKILL_SPACT) / EXT_SDATAREF * EXT_SDATAREF == TARGET_TYPE_SELF | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_OVERRAY | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_MANA_BURST | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_FIRE_A_VOLLEY | cnt + STARTING_SKILL_SPACT == SKILL_SPACT_SHADOW_RUSH ) {
					spact(cnt) = 1
				}
			}
		loop
		goto *com_applyWideSkill
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 2 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 2
				}
			}
			key = ""
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					snd SOUNDLIST_SPELL
					goto *com_spell
				}
				if ( curmenu == 1 ) {
					snd SOUNDLIST_SKILL
					goto *com_applySkill
				}
				if ( curmenu == 2 ) {
					snd SOUNDLIST_SKILL
					goto *com_applyWideSkill
				}
			}
		}
	}
	page_change *com_applyWideSkill_loop_pgchk
	if ( key == key_cancel ) {
		gosub *screen_draw
		goto *pc_turn
	}
	goto *com_applyWideSkill_loop

*com_stack
	txt lang("“Ї‚¶ѓAѓCѓeѓЂ‚рЃA‘N“x‚в‰ї’l‚М’б‚ў‚Щ‚¤‚Й‚ ‚н‚№‚Д‚Ь‚Ж‚Я‚йЃH", "Stack items of the same type and sort by increasing freshness and value?")
	promptYesNo
	gosub *screen_draw
	if ( rtval == 0 ) {
		txtef COLOR_SKY_BLUE
		txt lang(" *‚Є‚і‚І‚»* ", " *rummage* ")
		istack = 100
		inv_getheader 0
		repeat invrange, invhead
			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
				continue
			}
			if ( cnt >= 20 ) {
				if ( cnt \ 20 == 0 ) {
					txtef COLOR_SKY_BLUE
					txt lang(" *‚Є‚і‚І‚»* ", " *rummage* ")
				}
			}
			item_stack CHARA_PLAYER, cnt, 1
		loop
		istack = 0
	}
	goto *pc_turn

*com_give
	txt lang("‚З‚М•ыЊь‚ЙЃH ", "Which direction? ")
	gosub *screen_draw
	val = 0
	gosub *prompt_direction
	if ( stat == 0 ) {
		txt strinteractfail
		gosub *screen_draw
		goto *pc_turn
	}
	tc = map(x, y, 1)
	if ( tc == CHARA_PLAYER ) {
		txt strinteractfail
		gosub *screen_draw
		goto *pc_turn
	}
	tc -= 1
	tatc = tc
	if ( cdata(CDATA_TAGTEAM_PARTNER, tc) > 0 ) {
		tatc2 = cdata(CDATA_TAGTEAM_PARTNER, tc)
	}
	if ( cdata(CDATA_FACE, tatc) > 0 ) {
		stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc) + "_B.bmp"
		if ( cdata(CDATA_EMO_ICON, tatc) \ 100 == 18 | cdata(CDATA_CONDITION_ANGRY, tatc) > 0 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc) + "_A.bmp"
		}
		if ( cdata(CDATA_EMO_ICON, tatc) \ 100 == 21 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc) + "_Q.bmp"
		}
		if ( cdata(CDATA_EMO_ICON, tatc) \ 100 == 6 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc) + "_F.bmp"
		}
		if ( cdata(CDATA_EMO_ICON, tatc) \ 100 == 17 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc) + "_H.bmp"
		}
		if ( cdata(CDATA_HP, tatc) < cdata(CDATA_MAX_HP, tatc) / 2 | cdata(CDATA_EMO_ICON, tatc) \ 100 == 26 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc) + "_E.bmp"
		}
		exist stati
		if ( strsize != (-1) ) {
			gsel BUFFER_BUF
			pos 0, 0
			picload stati, 1
			gsel BUFFER_SCREEN
			if ( cdata(CDATA_IN_TAGTEAM, tatc) == 0 ) {
				pos windoww - 300, windowh - 588
				gcopy BUFFER_BUF, 0, 0, 300, 500
			}
			else {
				pos 0, windowh - 588
				gcopy BUFFER_BUF, 0, 0, 300, 500
			}
		}
	}
	if ( cdata(CDATA_TAGTEAM_PARTNER, tatc) > 0 ) {
		if ( cdata(CDATA_FACE, tatc2) > 0 ) {
			stati2 = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc2) + "_B.bmp"
			if ( cdata(CDATA_EMO_ICON, tatc2) \ 100 == 18 | cdata(CDATA_CONDITION_ANGRY, tatc2) > 0 ) {
				stati2 = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc2) + "_A.bmp"
			}
			if ( cdata(CDATA_EMO_ICON, tatc2) \ 100 == 21 ) {
				stati2 = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc2) + "_Q.bmp"
			}
			if ( cdata(CDATA_EMO_ICON, tatc2) \ 100 == 6 ) {
				stati2 = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc2) + "_F.bmp"
			}
			if ( cdata(CDATA_EMO_ICON, tatc2) \ 100 == 17 ) {
				stati2 = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc2) + "_H.bmp"
			}
			if ( cdata(CDATA_HP, tatc2) < cdata(CDATA_MAX_HP, tatc2) / 2 | cdata(CDATA_EMO_ICON, tatc2) \ 100 == 26 ) {
				stati2 = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tatc2) + "_E.bmp"
			}
			exist stati2
			if ( strsize != (-1) ) {
				gsel BUFFER_BUF
				pos 0, 0
				picload stati2, 1
				gsel BUFFER_SCREEN
				pos windoww - 300, windowh - 588
				gcopy BUFFER_BUF, 0, 0, 300, 500
			}
		}
	}
	if ( cdata(CDATA_TAGTEAM_PARTNER, tc) > 0 ) {
		promptTagTeam
		if ( rtval == 1 ) {
			tc = cdata(CDATA_TAGTEAM_PARTNER, tc)
		}
	}
 	if ( tc == CHARA_PLAYER ) {
 		if ( gdata(GDATA_RIDER) != 0 ) {
 			txtselectride 2
 			repeat 2
 				promptl(0, promptmax) = s(cnt), key_select(cnt), "" + promptmax
 				promptmax++
 			loop
			val = promptx, prompty, 150, 1
 			gosub *prompt_key
			if ( stat == 0 ) {
				gosub *screen_draw
				goto *pc_turn
			}
 			if ( rtval == 1 ) {
 				tc = gdata(GDATA_RIDER)
 			}
 		}
 	}
	if ( tc != CHARA_PLAYER ) {
		if ( tc < MAX_CHARA_FOLLOWER ) {
			if ( cbit(CHARA_BIT_BODYGUARD, tc) == 0 ) {
				goto *com_allyInventory
			}
		}
		gosub *screen_draw
		invctrl = 10
		snd SOUNDLIST_INV
		goto *com_inventory
	}
	txt strinteractfail
	gosub *screen_draw
	goto *pc_turn

*com_interact
	txt lang("‘ЂЌм‚·‚й‘ОЏЫ‚М•ыЊь‚НЃH", "Choose the direction of the target.")
	val = 0
	gosub *prompt_direction
	if ( stat == 0 ) {
		txt strinteractfail
		gosub *screen_draw
		goto *pc_turn
	}
	tc = map(x, y, 1)
	if ( tc == CHARA_PLAYER ) {
		txt strinteractfail
		gosub *screen_draw
		goto *pc_turn
	}
	tc -= 1
	if ( tc == CHARA_PLAYER ) {
		if ( gdata(GDATA_RIDER) != 0 ) {
			txtselectride 2
			repeat 2
				promptAdd s(cnt), key_select(cnt)
			loop
			val = promptx, prompty, 150, 0
			gosub *prompt_key
			if ( rtval == 1 ) {
				tc = gdata(GDATA_RIDER)
			}
		}
	}
	if ( cdata(CDATA_TAGTEAM_PARTNER, tc) > 0 ) {
		promptTagTeam
		if ( rtval == 1 ) {
			tc = cdata(CDATA_TAGTEAM_PARTNER, tc)
		}
	}
	if ( trait(TRAIT_ETHER_TENTACLES) != 0 ) {
		if ( cc == CHARA_PLAYER ) {
			if ( cdata(CDATA_EXIST, tc) == CHAR_STATE_ALIVE & rnd(50) == 0 ) {
				txt lang("ђGЋи‚ЄЏџЋи‚Й" + name(tc) + "‚ЦЏP‚ў‚©‚©‚Б‚ЅЃI", "Your tentacles attacked " + name(tc) + " against your will!")
				snd SOUNDLIST_ATTACK00
				telv = limit(cdata(CDATA_LEVEL, cc), 1, 1000)
				tdmg = (telv / 10 + 4) * (telv / 10 + 3) * 2 + rnd(telv + 5) + 1
				if ( trait(TRAIT_ETHER_TENTACLES) == (-2) ) {
					tdmg = tdmg * 2
				}
				dmghp tc, tdmg, cc, SKILL_RESDMG_CRUSH, 1000
				gosub *screen_draw
				goto *turn_end
			}
		}
	}
	txt lang(name(tc) + "‚Й‰Ѕ‚р‚·‚йЃH ", "What action do you want to perform to " + him(tc) + "? ")
	if ( cdata(CDATA_PV_FIX, tc) == 100 & cdata(CDATA_DV_FIX, tc) == 100 ) {
		if ( cdatan(CDATAN_RACE, tc) == "slime" ) {
			cdata(CDATA_PV_FIX, tc) = 200
		}
		if ( cdatan(CDATAN_RACE, tc) == "sheep" ) {
			cdata(CDATA_PV_FIX, tc) = 120
		}
		if ( cdatan(CDATAN_RACE, tc) == "zombie" ) {
			cdata(CDATA_PV_FIX, tc) = 150
		}
		if ( cdatan(CDATAN_RACE, tc) == "ent" ) {
			cdata(CDATA_PV_FIX, tc) = 140
		}
		if ( cdatan(CDATAN_RACE, tc) == "armor" ) {
			cdata(CDATA_PV_FIX, tc) = 200
		}
		if ( cdatan(CDATAN_RACE, tc) == "skeleton" ) {
			cdata(CDATA_PV_FIX, tc) = 120
		}
		if ( cdatan(CDATAN_RACE, tc) == "wisp" ) {
			cdata(CDATA_PV_FIX, tc) = 150
		}
		if ( cdatan(CDATAN_RACE, tc) == "rabbit" ) {
			cdata(CDATA_DV_FIX, tc) = 120
		}
		if ( cdatan(CDATAN_RACE, tc) == "cat" ) {
			cdata(CDATA_DV_FIX, tc) = 200
		}
		if ( cdatan(CDATAN_RACE, tc) == "dog" ) {
			cdata(CDATA_DV_FIX, tc) = 200
		}
		if ( cdatan(CDATAN_RACE, tc) == "rat" ) {
			cdata(CDATA_DV_FIX, tc) = 250
		}
		if ( cdatan(CDATAN_RACE, tc) == "catsister" ) {
			cdata(CDATA_DV_FIX, tc) = 200
		}
 	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_POPPY_THE_LITTLE_DOG ) {
		if ( gdata(GDATA_FLAG_SUB_DOG) >= 1000 ) {
			if ( cbit(CHARA_BIT_GUARD_TEMP, tc) ) {
				cbitmod CHARA_BIT_GUARD_TEMP, tc, 0
			}
		}
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_BELPHAT_THE_COSMIC_SWORD ) {
		if ( gdata(GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD) >= 1000 ) {
			if ( cbit(CHARA_BIT_GUARD_TEMP, tc) ) {
				cbitmod CHARA_BIT_GUARD_TEMP, tc, 0
			}
		}
	}
	p = 0
	if ( tc != CHARA_PLAYER ) {
		if ( cdata(CDATA_CONDITION_CONFUSE, CHARA_PLAYER) == 0 ) {
			promptAdd lang("b‚µ‚©‚Ї‚й", "Talk"), "null", 0
			if ( tc >= MAX_CHARA_FOLLOWER ) {
				if ( cfg_atk_select == 0 | (cfg_atk_select == 1 & cdata(CDATA_RELATION, tc) != 10) ) {
					promptAdd lang("ЌUЊ‚‚·‚й", "Attack"), "null", 1
				}
			}
		}
		if ( gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 >= cdata(CDATA_INTEREST_RENEW, tc) ) {
			cdata(CDATA_INTEREST, tc) = 100
		}
		if ( cdata(CDATA_INTEREST, tc) >= 80 ) {
			promptAdd lang("‹CЋќ‚ї‚р“`‚¦‚й", "Confess feelings"), "null", "" + 29
		}
		if ( cbit(CHARA_BIT_BODYGUARD, tc) == 0 & cbit(CHARA_BIT_GUARD_TEMP, tc) == 0 ) {
			if ( tc < MAX_CHARA_FOLLOWER | (cbit(CHARA_BIT_LIVESTOCK, tc) == 1 & gdata(GDATA_AREA) == AREA_DOJO) ) {
				promptAdd lang("‰Ѕ‚©‚р“n‚·/‚а‚з‚¤", "Give/Take"), "null", "" + 4
			}
			else {
				promptAdd lang("‰Ѕ‚©‚р“n‚·", "Give"), "null", 2
			}

			/********** ANNA CUSTOM - BEGINNING **********/ // Add Feed Option For Pets.

			if ( (tc < MAX_CHARA_FOLLOWER | (cbit(CHARA_BIT_LIVESTOCK, tc) == 1 & gdata(GDATA_AREA) == AREA_DOJO)) & TweakData(TWEAK_CONVENIENCE_FEED_OPTION_PETS, TWEAK_CATEGORY_CONVENIENCE) == 1 ) {
				promptAdd lang("ЏЉЋќ•i", "Feed"), "null", 999
			}

			/********** ANNA CUSTOM - ENDING **********/

			if ( cbit(CHARA_BIT_LIVESTOCK, tc) == 1 ) {
				promptAdd lang("A‚кЏo‚·", "Bring Out"), "null", 5
			}
			if ( cbit(CHARA_BIT_LIVESTOCK, tc) == 1 | getworker(gdata(GDATA_AREA)) == tc & adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
				if ( cdata(CDATA_HP, tc) == cdata(CDATA_MAX_HP, tc) ) {
					promptAdd lang("Ќњ‚р€ш‚«‚ё‚иЏo‚·", "Take out bone"), "null", 18
					promptAdd lang("ђS‘џ‚р”І‚«Ћж‚й", "Take out heart"), "null", 19
					promptAdd lang("–Ъ‹К‚рќP‚иЋж‚й", "Take out eye"), "null", 20
					promptAdd lang("‘М‰t‚рЌп‚иЋж‚й", "Take out blood"), "null", 21
					promptAdd lang("”з‚р”Ќ‚®", "Take out skin"), "null", 22
				}
			}
			if ( tc < MAX_CHARA_FOLLOWER ) {
				promptAdd lang("’…‘Ц‚¦‚і‚№‚й", "Appearance"), "null", 8
			}
			if ( tc < MAX_CHARA_FOLLOWER ) {
				if ( cfg_atk_select == 0 ) {
					promptAdd lang("ЌUЊ‚‚·‚й", "Attack"), "null", 1
				}
			}
			if ( tc < MAX_CHARA_FOLLOWER ) {
				promptAdd lang("Ћp‚р•П‚¦‚й", "Shape change"), "null", 14
			}
		}
		promptAdd lang("Њѕ—t‚р‹і‚¦‚й", "Teach Words"), "null", 7
		if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
			if ( cbit(CHARA_BIT_SANDBAG, tc) ) {
				promptAdd lang("“к‚р‰р‚­", "Release"), "null", 9
			}
		}
	}
	promptAdd lang("—§‚їЋp‚р•П‚¦‚й", "Change Tachi-e"), "null", "" + 27
	promptAdd lang("ѓAѓCѓeѓЂ‰ж‘њ‚М•t—^", "Item mark set"), "null", 23
	if ( cdata(CDATA_MARK_ITEM_PIC, tc) > 0 ) {
		promptAdd lang("ѓAѓCѓeѓЂ‰ж‘њ‚М’Іђ®", "Item mark adjust"), "null", 26
	}
	if ( cdata(CDATA_MARK_ITEM_PIC, tc) > 0 ) {
		promptAdd lang("ѓAѓCѓeѓЂ‰ж‘њ‚М€Ъ“®", "Item mark move"), "null", 25
	}
	if ( cdata(CDATA_MARK_ITEM_PIC, tc) > 0 ) {
		promptAdd lang("ѓAѓCѓeѓЂ‰ж‘њ‚МЌнЏњ", "Item mark delete"), "null", 24
	}
	if ( cbit(CHARA_BIT_BODYGUARD, tc) == 0 & cbit(CHARA_BIT_GUARD_TEMP, tc) == 0 ) {
		if ( tc < MAX_CHARA_FOLLOWER ) {
			if ( cdata(CDATA_IN_TAGTEAM, tc) != 1 ) {
				if ( cdata(CDATA_AREA, tc) == AREA_NONE | tc == CHARA_PLAYER ) {
					if ( cdata(CDATA_IN_TAGTEAM, tc) == 0 ) {
						promptAdd lang("ѓ^ѓbѓO•Тђ¬", "Tag organization"), "null", 16
					}
					if ( cdata(CDATA_TAGTEAM_PARTNER, tc) > 0 ) {
						if ( cdata(CDATA_EXIST, cdata(CDATA_TAGTEAM_PARTNER, tc)) == CHAR_STATE_ALIVE ) {
							promptAdd lang("ѓ^ѓbѓO‰рЋU", "Tag dissolution"), "null", 17
						}
					}
				}
			}
		}
	}
	promptAdd lang("Њы’І‚р•П‚¦‚й", "Change Tone"), "null", 10
	promptAdd lang("–ј‘O‚р‚В‚Ї‚й", "Name"), "null", 3
	if ( tc != CHARA_PLAYER & cdata(CDATA_RELATION, tc) == RELATION_ALLY | (gdata(GDATA_AREA) == AREA_DOJO & cbit(CHARA_BIT_LIVESTOCK, tc) == TRUE) | (tc != CHARA_PLAYER & cdata(CDATA_ANALYSIS_GAUGE, tc) == 100) ) {
		promptAdd lang("”\—Н‚МЉJЋ¦", "Info"), "null", "" + 28
	}
	if ( develop | gdata(GDATA_WIZARD) ) {
		promptAdd lang("Џо•с", "Information"), "null", 6
		promptAdd lang("ѓJѓXѓ^ѓЂ‚`‚h", "Custom AI"), "null", 998
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_ITZPALT | cdata(CDATA_ID, tc) == CREATURE_ID_YACATECT | cdata(CDATA_ID, tc) == CREATURE_ID_JURE | cdata(CDATA_ID, tc) == CREATURE_ID_LULWY | cdata(CDATA_ID, tc) == CREATURE_ID_EHEKATL | cdata(CDATA_ID, tc) == CREATURE_ID_OPATOS | cdata(CDATA_ID, tc) == CREATURE_ID_KUMIROMI | cdata(CDATA_ID, tc) == CREATURE_ID_MANI | cdata(CDATA_ID, tc) == CREATURE_ID_WAR_SPIRIT | cdata(CDATA_ID, tc) == CREATURE_ID_MAGIC_SPIRIT | cdata(CDATA_ID, tc) == CREATURE_ID_PUDDING_SPIRIT | cdata(CDATA_ID, tc) == CREATURE_ID_GUN_SPIRIT ) {
		if ( cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
			if ( tc >= MAX_CHARA_FOLLOWER ) {
				if ( adata(ADATA_BOSS, gdata(GDATA_AREA)) != tc ) {
					promptAdd lang("‹A‚Б‚Д‚а‚з‚¤", "Return home"), "null", 11
				}
			}
		}
	}
	if ( gdata(GDATA_MONTH) == 2 & cdata(CDATA_IMPRESSION, tc) >= 200 & tc != CHARA_PLAYER & gdata(GDATA_FLAG_CAN_RECEIVE_CHOCOLATE) == 1 ) {
		promptAdd lang("ѓ`ѓ‡ѓR‚р‚Л‚ѕ‚й", "Ask for chocolate"), "null", 12
	}
	if ( gdata(GDATA_MONTH) == 2 ) {
		if ( gdata(GDATA_FLAG_CHOCOLATE_KIT_YOURSELF) != 0 & tc != CHARA_PLAYER ) {
			promptAdd lang("Ћ©•Є‚рѓvѓЊѓ[ѓ“ѓg", "Offer yourself as a gift"), "null", 15
		}
	}
	if ( cdata(CDATA_ID, tc) == CREATURE_ID_CAT_ZOMBIE | cdata(CDATA_ID, tc) == CREATURE_ID_ZOMBIE | cdata(CDATA_ID, tc) == CREATURE_ID_MUMMY | cdata(CDATA_ID, tc) == CREATURE_ID_SKELETON_WARRIOR | cdata(CDATA_ID, tc) == CREATURE_ID_LICH | cdata(CDATA_ID, tc) == CREATURE_ID_NECRO_DOLL | cdata(CDATA_ID, tc) == CREATURE_ID_DRAGON_ZOMBIE | cdata(CDATA_ID, tc) == CREATURE_ID_DEAD_EYES_BLOOD_DRAGON ) {
		if ( cbit(CHARA_BIT_LIVESTOCK, tc) != TRUE ) {
			if ( cbit(CHARA_BIT_SHADOW_CLONE, tc) != TRUE ) {
				if ( tc >= MAX_CHARA_FOLLOWER ) {
					if ( cbit(CHARA_BIT_NECRO, tc) == TRUE ) {
						promptAdd lang("Љ»‚Й–Я‚·", "Return to the coffin"), "null", 13
					}
				}
			}
		}
	}

	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Add option to collect materials from all pets at once.

	if ( tc == CHARA_PLAYER ) {
		promptAdd lang("Ћ‘—ї‚рЏW‚Я‚й", "Collect materials"), "null", 666
	}

	/********** BLOODYSHADE CUSTOM - ENDING **********/

	val = promptx, prompty, 225, 1
	gosub *prompt_key
	if ( stat == 0 ) {
		gosub *screen_draw
		goto *pc_turn
	}
	p = rtval
	screenupdate = -1
	if ( p == 0 ) {
		gosub *screen_draw
		gosub *chat
		if ( chatteleport == 1 ) {
			chatteleport = 0
			goto *map_exit
		}
		else {
			goto *turn_end
		}
	}
	if ( p == 1 ) {
		gosub *screen_draw
		gosub *act_melee
		goto *turn_end
	}
	if ( p == 2 ) {

		/********** ANNA CUSTOM - BEGINNING **********/ // Add Feed Option For Pets.

		Filter_Food = 0

		/********** ANNA CUSTOM - ENDING **********/

		gosub *screen_draw
		invctrl = 10
		snd SOUNDLIST_INV
		goto *com_inventory
	}
	if ( p == 3 ) {
		gosub *screen_draw
		goto *com_name
	}

	/********** ORIGINAL - BEGINNING **********

	if ( p == 4 ) {
		goto *com_allyInventory
	}

	 ********** ORIGINAL - ENDING **********/

	/********** ANNA CUSTOM - BEGINNING **********/ // Add Feed Option For Pets.

	if ( p == 4 ) {
		Filter_Food = 0
		goto *com_allyInventory
	}

	if ( p == 999 ) {
		Filter_Food = 1
		goto *com_allyInventory
	}

	/********** ANNA CUSTOM - ENDING **********/

	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Add option to collect materials from all pets at once.

	if ( p == 666 ) {
		repeat MAX_CHARA_FOLLOWER - 1
			tc = cnt

			if ( tc == CHARA_PLAYER ) {
				continue
			}

			if ( cbit(CHARA_BIT_BODYGUARD, tc) == 0 & cbit(CHARA_BIT_GUARD_TEMP, tc) == 0 & cbit(CHARA_BIT_NECRO, tc) == 0 & cbit(CHARA_BIT_LIVESTOCK, tc) == 0 ) {
				if ( cdata(CDATA_MATERIAL1_COUNTER, tc) > 200 | cdata(CDATA_MATERIAL2_COUNTER, tc) > 200 | cdata(CDATA_MATERIAL3_COUNTER, tc) > 200 | cdata(CDATA_MATERIAL4_COUNTER, tc) > 200 | cdata(CDATA_MATERIAL5_COUNTER, tc) > 200 ) {
					txt lang(name(tc) + "‚Н–`ЊЇ‚М“r’†‚ЕЏW‚Я‚Ѕѓ}ѓeѓЉѓAѓ‹‚рЋи“n‚µ‚Д‚«‚ЅЃB", name(tc) + " handed over the materials " + he(tc) + " has gathered during your adventures.")

					m1 = 0
					m2 = 0
					m3 = 0
					m4 = 0
					m5 = 0

					repeat 500
						if ( cdata(CDATA_MATERIAL1_COUNTER, tc) < 40 ) {
							break
						}
						if ( cdata(CDATA_MATERIAL1_COUNTER, tc) >= 40 ) {
							matgetmain MATERIAL_PEBBLE, 1, 6
							cdata(CDATA_MATERIAL1_COUNTER, tc) -= 40
							m1++
						}
						if ( cdata(CDATA_MATERIAL1_COUNTER, tc) >= 100 ) {
							matgetmain MATERIAL_FINE_STONE, 1, 6
							cdata(CDATA_MATERIAL1_COUNTER, tc) -= 100
							m2++
						}
						if ( cdata(CDATA_MATERIAL1_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_ETHER_FRAGMENT, 1, 6
							cdata(CDATA_MATERIAL1_COUNTER, tc) -= 120
							m3++
						}
						if ( cdata(CDATA_MATERIAL1_COUNTER, tc) >= 150 ) {
							matgetmain MATERIAL_ELEMENT_FRAGMENT, 1, 6
							cdata(CDATA_MATERIAL1_COUNTER, tc) -= 150
							m4++
						}
						if ( cdata(CDATA_MATERIAL1_COUNTER, tc) >= 150 ) {
							matgetmain MATERIAL_CHAOS_STONE, 1, 6
							cdata(CDATA_MATERIAL1_COUNTER, tc) -= 150
							m5++
						}
					loop

					if ( m1 > 0 ) {
						txtef COLOR_BROWN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ђО‚±‚л‚р" + m1 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m1 + " Pebble.")
					}
					if ( m2 > 0 ) {
						txtef COLOR_BROWN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:Џг“™‚ИђО‚р" + m2 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m2 + " Fine stone.")
					}
					if ( m3 > 0 ) {
						txtef COLOR_BROWN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓGЃ[ѓeѓ‹‚МЊ‡•Р‚р" + m3 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m3 + " Ether fragment.")
					}
					if ( m4 > 0 ) {
						txtef COLOR_BROWN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:•—ђШђО‚р" + m4 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m4 + " Element fragment.")
					}
					if ( m5 > 0 ) {
						txtef COLOR_BROWN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:Ќ¬“Ч‚МђО‚р" + m5 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m5 + " Chaos stone.")
					}

					m1 = 0
					m2 = 0
					m3 = 0
					m4 = 0
					m5 = 0
					m6 = 0
					m7 = 0

					repeat 500
						if ( cdata(CDATA_MATERIAL2_COUNTER, tc) < 20 ) {
							break
						}
						if ( cdata(CDATA_MATERIAL2_COUNTER, tc) >= 20 ) {
							matgetmain MATERIAL_WATERDROP, 1, 6
							cdata(CDATA_MATERIAL2_COUNTER, tc) -= 20
							m1++
						}
						if ( cdata(CDATA_MATERIAL2_COUNTER, tc) >= 60 ) {
							matgetmain MATERIAL_HOT_WATER, 1, 6
							cdata(CDATA_MATERIAL2_COUNTER, tc) -= 40
							m2++
						}
						if ( cdata(CDATA_MATERIAL2_COUNTER, tc) >= 80 ) {
							matgetmain MATERIAL_SNOW, 1, 6
							cdata(CDATA_MATERIAL2_COUNTER, tc) -= 80
							m3++
						}
						if ( cdata(CDATA_MATERIAL2_COUNTER, tc) >= 100 ) {
							matgetmain MATERIAL_WITCHS_TEAR, 1, 6
							cdata(CDATA_MATERIAL2_COUNTER, tc) -= 100
							m4++
						}
						if ( cdata(CDATA_MATERIAL2_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_ANGELS_TEAR, 1, 6
							cdata(CDATA_MATERIAL2_COUNTER, tc) -= 120
							m5++
						}
					loop

					if ( m1 > 0 ) {
						txtef COLOR_SKY_BLUE
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ђ…“H‚р" + m1 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m1 + " Waterdrop.")
					}
					if ( m2 > 0 ) {
						txtef COLOR_SKY_BLUE
						txt lang("ѓ}ѓeѓЉѓAѓ‹:‚Ё“’‚р" + m2 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m2 + " Hot water.")
					}
					if ( m3 > 0 ) {
						txtef COLOR_SKY_BLUE
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ђб‚р" + m3 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m3 + " Snow.")
					}
					if ( m4 > 0 ) {
						txtef COLOR_SKY_BLUE
						txt lang("ѓ}ѓeѓЉѓAѓ‹:–‚Џ—‚М—Ь‚р" + m4 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m4 + " Witch's tear.")
					}
					if ( m5 > 0 ) {
						txtef COLOR_SKY_BLUE
						txt lang("ѓ}ѓeѓЉѓAѓ‹:“VЋg‚М—Ь‚р" + m5 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m5 + " Angel's tear.")
					}

					m1 = 0
					m2 = 0
					m3 = 0
					m4 = 0
					m5 = 0

					repeat 500
						if ( cdata(CDATA_MATERIAL3_COUNTER, tc) < 30 ) {
							break
						}
						if ( cdata(CDATA_MATERIAL3_COUNTER, tc) >= 30 ) {
							matgetmain MATERIAL_STICK, 1, 6
							cdata(CDATA_MATERIAL3_COUNTER, tc) -= 30
							m1++
						}
						if ( cdata(CDATA_MATERIAL3_COUNTER, tc) >= 100 ) {
							matgetmain MATERIAL_BRANCH, 1, 6
							cdata(CDATA_MATERIAL3_COUNTER, tc) -= 40
							m2++
						}
						if ( cdata(CDATA_MATERIAL3_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_HOLY_WEED, 1, 6
							cdata(CDATA_MATERIAL3_COUNTER, tc) -= 120
							m3++
						}
						if ( cdata(CDATA_MATERIAL3_COUNTER, tc) >= 130 ) {
							matgetmain MATERIAL_SHINING_WEED, 1, 6
							cdata(CDATA_MATERIAL3_COUNTER, tc) -= 130
							m4++
						}
						if ( cdata(CDATA_MATERIAL3_COUNTER, tc) >= 150 ) {
							matgetmain MATERIAL_SAP_OF_YAGGDRASIL, 1, 6
							cdata(CDATA_MATERIAL3_COUNTER, tc) -= 150
							m5++
						}
					loop

					if ( m1 > 0 ) {
						txtef COLOR_LIGHT_GREEN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:Џс‚р" + m1 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m1 + " Stick.")
					}
					if ( m2 > 0 ) {
						txtef COLOR_LIGHT_GREEN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:Ћ}‚р" + m2 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m2 + " Branch.")
					}
					if ( m3 > 0 ) {
						txtef COLOR_LIGHT_GREEN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ђ№‚И‚й‘ђ‚р" + m3 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m3 + " Holy weed.")
					}
					if ( m4 > 0 ) {
						txtef COLOR_LIGHT_GREEN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓqѓJѓЉѓ\ѓE‚р" + m4 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m4 + " Shining weed.")
					}
					if ( m5 > 0 ) {
						txtef COLOR_LIGHT_GREEN
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ђўЉEЋч‚МЋч‰t‚р" + m5 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m5 + " Sap of Yaggdrasil.")
					}

					m1 = 0
					m2 = 0
					m3 = 0
					m4 = 0
					m5 = 0

					repeat 500
						if ( cdata(CDATA_MATERIAL4_COUNTER, tc) < 40 ) {
							break
						}
						if ( cdata(CDATA_MATERIAL4_COUNTER, tc) >= 40 ) {
							matgetmain MATERIAL_HUMAN_GENE, 1, 6
							cdata(CDATA_MATERIAL4_COUNTER, tc) -= 40
							m1++
						}
						if ( cdata(CDATA_MATERIAL4_COUNTER, tc) >= 100 ) {
							matgetmain MATERIAL_TROLL_GENE, 1, 6
							cdata(CDATA_MATERIAL4_COUNTER, tc) -= 100
							m2++
						}
						if ( cdata(CDATA_MATERIAL4_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_RABBITS_TAIL, 1, 6
							cdata(CDATA_MATERIAL4_COUNTER, tc) -= 120
							m3++
						}
						if ( cdata(CDATA_MATERIAL4_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_WITCHS_EYE, 1, 6
							cdata(CDATA_MATERIAL4_COUNTER, tc) -= 120
							m4++
						}
						if ( cdata(CDATA_MATERIAL4_COUNTER, tc) >= 130 ) {
							matgetmain MATERIAL_FAIRY_DUST, 1, 6
							cdata(CDATA_MATERIAL4_COUNTER, tc) -= 130
							m5++
						}
					loop

					if ( m1 > 0 ) {
						txtef COLOR_PINK
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓqѓg‚М€в“`Ћq‚р" + m1 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m1 + " Human gene.")
					}
					if ( m2 > 0 ) {
						txtef COLOR_PINK
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓgѓЌЃ[ѓ‹‚М€в“`Ћq‚р" + m2 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m2 + " Troll gene.")
					}
					if ( m3 > 0 ) {
						txtef COLOR_PINK
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓEѓTѓM‚МђK”ц‚р" + m3 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m3 + " Rabbit's tail.")
					}
					if ( m4 > 0 ) {
						txtef COLOR_PINK
						txt lang("ѓ}ѓeѓЉѓAѓ‹:–‚Џ—‚М“µ‚р" + m4 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m4 + " Witch's eye.")
					}
					if ( m5 > 0 ) {
						txtef COLOR_PINK
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓtѓFѓAѓЉЃ[ѓ_ѓXѓg‚р" + m5 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m5 + " Fairy dust.")
					}

					m1 = 0
					m2 = 0
					m3 = 0
					m4 = 0
					m5 = 0

					repeat 500
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) < 40 ) {
							break
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 40 ) {
							matgetmain MATERIAL_CLOTH, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 40
							m1++
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 50 ) {
							matgetmain MATERIAL_PAPER, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 50
							m2++
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 100 ) {
							matgetmain MATERIAL_YELLING_MADMAN, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 100
							m3++
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_MAGIC_INK, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 120
							m4++
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 120 ) {
							matgetmain MATERIAL_MAGIC_MASS, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 120
							m5++
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 150 ) {
							matgetmain MATERIAL_GENERATOR, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 150
							m6++
						}
						if ( cdata(CDATA_MATERIAL5_COUNTER, tc) >= 150 ) {
							matgetmain MATERIAL_ELECTRICITY, 1, 6
							cdata(CDATA_MATERIAL5_COUNTER, tc) -= 150
							m7++
						}
					loop

					if ( m1 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:•z‚«‚к‚р" + m1 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m1 + " Cloth.")
					}
					if ( m2 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:Ћ†‚р" + m2 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m2 + " Paper.")
					}
					if ( m3 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:‚н‚Я‚­‹¶ђl‚р" + m3 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m3 + " Yelling madman.")
					}
					if ( m4 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:–‚–@‚МѓCѓ“ѓN‚р" + m4 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m4 + " Magic ink.")
					}
					if ( m5 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ѓ}ѓWѓbѓNѓ}ѓX‚р" + m5 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m5 + " Magic mass.")
					}
					if ( m6 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:ђ¶ђ¬‹@ЉB‚р" + m6 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m6 + " Generator.")
					}
					if ( m7 > 0 ) {
						txtef COLOR_YELLOW
						txt lang("ѓ}ѓeѓЉѓAѓ‹:“d‹C‚р" + m7 + "ЊВЋу‚ЇЋж‚Б‚ЅЃB", "You get " + m7 + " Electricity.")
					}

					m1 = 0
					m2 = 0
					m3 = 0
					m4 = 0
					m5 = 0
					m6 = 0
					m7 = 0
				}
			}
		loop
		goto *pc_turn
	}

	if ( p == 998 ) {
		snd SOUNDLIST_OK1
		gosub *PetMenu
		goto *pc_turn
	}

	/********** BLOODYSHADE CUSTOM - ENDING **********/

	if ( p == 5 ) {
		if ( cbit(CHARA_BIT_SANDBAG, tc) ) {
			txt lang("’Э‚й‚µ‚Ѕ‚Ь‚Ь‚Е‚НA‚кЏo‚№‚И‚ўЃB", "You cannot leave livestock on hanging.")
			goto *pc_turn
		}
		f = get_freeally()
		if ( f == 0 ) {
			txt lang("’‡ЉФ‚МЌЕ‘еђ”‚Й’B‚µ‚Д‚ў‚й‚Ѕ‚ЯA‚кЏo‚№‚И‚ўЃB", "Your party is already full. You can't invite someone anymore.")
			goto *pc_turn
		}
		rc = tc
		gosub *add_ally
		cdata(CDATA_AREA, rc) = AREA_NONE
		gosub *screen_draw
		goto *turn_end
	}
	if ( p == 6 | p == 28 ) {
		csctrl = 4
		snd SOUNDLIST_POP2
		cc = tc
		gosub *com_charainfo
		cc = CHARA_PLAYER
		goto *pc_turn
	}
	if ( p == 7 ) {
		txt lang("‚З‚с‚ИЊѕ—t‚р‹і‚¦‚ж‚¤‚©ЃB", "What sentence should " + name(tc) + " learn? ")
		val = (windoww - 360) / 2 + inf_screenx, winposy(90), 20, 1, 0
		inputlog = ""
		gosub *prompt_word
		cbitmod CHARA_BIT_MSG_FILE, tc, 0
		if ( inputlog == "" ) {
			cdatan(CDATAN_MSG, tc) = ""
		}
		else {
			cdatan(CDATAN_MSG, tc) = inputlog
			txtef COLOR_SKY_BLUE
			txt "" + cdatan(CDATAN_MSG, tc)
		}
		gosub *screen_draw
		goto *pc_turn
	}
	if ( p == 8 ) {
		gsel 4
		buffer 4, FACE_SIZE_WIDTH, FACE_SIZE_HEIGHT
		if ( cdata(CDATA_PORTRAIT, tc) < 80 ) {
			picload exedir + "graphic\\face1" + devfile + ".bmp", 1
		}
		else {
			picload exedir + "graphic\\face2" + devfile + ".bmp", 1
		}
		gsel 0
		ccbk = cc
		cc = tc
		gosub *com_portrait
		cc = ccbk
		gosub *screen_draw
		goto *pc_turn
	}
	if ( p == 9 ) {
		snd SOUNDLIST_BUILD1
		cbitmod CHARA_BIT_SANDBAG, tc, 0
		txt lang(name(tc) + "‚М“к‚р‰р‚ў‚ЅЃB", "You release " + name(tc) + ".")
		flt
		itemcreate -1, ITEM_ID_SAND_BAG, cdata(CDATA_X, tc), cdata(CDATA_Y, tc), 0
	}
	if ( p == 10 ) {
		gosub *com_tone
	}
	if ( p == 23 ) {
		gosub *screen_draw
		invctrl = 32
		snd SOUNDLIST_INV
		goto *com_inventory
	}
	if ( p == 24 ) {
		snd SOUNDLIST_CARD1
		cdata(CDATA_MARK_ITEM_PIC, tc) = 0
		txt lang(name(tc) + "‚Й•t—^‚µ‚Д‚ў‚ЅѓAѓCѓeѓЂ‰ж‘њ‚рЌнЏњ‚µ‚ЅЃB", "You deleted the item mark on " + name(tc) + ".")
	}
	if ( p == 25 ) {
		gosub *com_item_mark
		gosub *screen_draw
		goto *pc_turn
	}
	if ( p == 26 ) {
		gosub *com_item_mark_adjust
		gosub *screen_draw
		goto *pc_turn
	}
	if ( p == 27 ) {
		gosub *com_tag_team
		gosub *screen_draw
		goto *pc_turn
	}
	if ( p == 29 ) {
		if ( gdata(GDATA_DAY) \ 3 == 0 ) {
			txtselectkimoti0 11
		}
		if ( gdata(GDATA_DAY) \ 3 == 1 ) {
			txtselectkimoti1 11
		}
		if ( gdata(GDATA_DAY) \ 3 == 2 ) {
			txtselectkimoti2 11
		}
		repeat 11
			promptl(0, promptmax) = s(cnt), key_select(cnt), "" + promptmax
			promptmax++
		loop
		val = promptx, prompty, 300, 1
		gosub *prompt_key
		if ( stat == 0 ) {
			gosub *screen_draw
			goto *pc_turn
		}
		if ( rtval == 0 ) {
			txt lang(cdatan(CDATAN_NAME, tc) + "‚Н‚ ‚И‚Ѕ‚Є‰Ѕ‚р“`‚¦‚ж‚¤‚Ж‚µ‚Ѕ‚М‚©ЃA‚·‚І‚­‹C‚Й‚И‚Б‚Д‚ў‚йЃcЃB", cdatan(CDATAN_NAME, tc) + " becomes very curious about what you were wanting to tell " + him(tc) + "...")
			cdata(CDATA_EMO_ICON, tc) = 21 + 100 * 3
		}
		if ( cdata(CDATA_MATERIAL1_COUNTER, CHARA_PLAYER) == 5 ) {
			snd SOUNDLIST_WRITE1
			txtef COLOR_GREEN
			txt lang("ѓWѓѓЃ[ѓiѓ‹‚ЄЌXђV‚і‚к‚ЅЃB", "Your journal has been updated.")
			cdata(CDATA_MATERIAL1_COUNTER, CHARA_PLAYER) += 1000
		}
		cdata(CDATA_INTEREST, tc) -= 80
		cdata(CDATA_INTEREST_RENEW, tc) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + 12
		if ( rtval >= 1 & rtval <= 3 ) {
			if ( cdata(CDATA_IMPRESSION, tc) >= 150 ) {
				modimp tc, 12
				snd SOUNDLIST_PRAY1
				cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				txtef COLOR_GREEN
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Н" + _aisite(3) + "ЃB", cdatan(CDATAN_NAME, tc) + " looks happy.")
			}
			if ( cdata(CDATA_IMPRESSION, tc) >= 75 & cdata(CDATA_IMPRESSION, tc) < 150 ) {
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Н‘еЊUЌѕ‚ИЏз’k‚ѕ‚ЖЋv‚Б‚Ѕ‚ж‚¤‚ѕЃB", cdatan(CDATAN_NAME, tc) + " seemed to think it was an exaggerated joke.")
			}
			if ( cdata(CDATA_IMPRESSION, tc) < 75 ) {
				modimp tc, -5
				snd SOUNDLIST_ATK_DARK
				txtef COLOR_RED
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Н‹CЋќ‚ї€«‚»‚¤‚Й‚ ‚И‚Ѕ‚рЊ©‚Д‚ў‚йЃcЃB", cdatan(CDATAN_NAME, tc) + " is looking at you like you're some kind of creep.")
			}
			/********** CUSTOM - BEGINNING **********/ // Pets should (normally) be happy after you tell them how you feel.
			cdata(CDATA_EVOCHAT_POINTS, tc) += 2
			if ( cdata(CDATA_EVOCHAT_POINTS, tc) > 10 ) {
				cdata(CDATA_EVOCHAT_POINTS, tc) = 10
			}
			/********** CUSTOM - ENDING **********/
		}
		if ( rtval >= 4 & rtval <= 6 ) {
			snd SOUNDLIST_DING2
			txtef COLOR_YELLOW
			txt lang(cdatan(CDATAN_NAME, tc) + "‚Н‚Ь‚с‚ґ‚з‚Е‚а‚И‚ў‚ж‚¤‚ѕЃB", cdatan(CDATAN_NAME, tc) + " doesn't seem to be very happy about that.")
			modimp tc, 7
			cdata(CDATA_EMO_ICON, tc) = 6 + 100 * 3
			/********** CUSTOM - BEGINNING **********/ // Pets should (normally) be happy after you tell them how you feel.
			cdata(CDATA_EVOCHAT_POINTS, tc) += 1
			if ( cdata(CDATA_EVOCHAT_POINTS, tc) > 10 ) {
				cdata(CDATA_EVOCHAT_POINTS, tc) = 10
			}
			/********** CUSTOM - ENDING **********/
		}
		if ( rtval >= 7 & rtval <= 9 ) {
			if ( cdata(CDATA_IMPRESSION, tc) >= 150 ) {
				dmgcon tc, CONDITION_CONFUSE, 1000
				cdata(CDATA_EMO_ICON, tc) = 21 + 100 * 3
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Н‰Ѕ‚©‚МЉФ€б‚ў‚Е‚Н‚И‚ў‚©‚ЖЋЁ‚р‹^‚Б‚Д‚ў‚йЃcЃB", cdatan(CDATAN_NAME, tc) + " couldn't believe " + his(tc) + " ears...")
			}
			if ( cdata(CDATA_IMPRESSION, tc) >= 75 & cdata(CDATA_IMPRESSION, tc) < 150 ) {
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Н—ч‚к‚Ю‚ж‚¤‚И–Ъ‚Е‚ ‚И‚Ѕ‚рЊ©‚ЅЃB", cdatan(CDATAN_NAME, tc) + " gives you a look of pity.")
			}
			if ( cdata(CDATA_IMPRESSION, tc) < 75 ) {
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Н‚в‚к‚в‚к‚ЖЊЁ‚р‚·‚­‚Я‚ЅЃB", cdatan(CDATAN_NAME, tc) + " shrugged " + his(tc) + " shoulders in relief.")
			}
			/********** CUSTOM - BEGINNING **********/
			cdata(CDATA_EVOCHAT_POINTS, tc) -= 1
			if ( cdata(CDATA_EVOCHAT_POINTS, tc) < 0 ) {
				cdata(CDATA_EVOCHAT_POINTS, tc) = 0
			}
			/********** CUSTOM - ENDING **********/
		}
		if ( rtval == 10 ) {
			if ( cbit(CHARA_BIT_MARRIED, tc) != FALSE ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_OVERDOSE | gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
					snd SOUNDLIST_FAIL1
					txt lang("‚±‚МѓQЃ[ѓЂѓ‚Ѓ[ѓh‚Е‚Н€в“`Ћq‚рЋc‚№‚И‚ўЃB", "You can't make a gene in this game mode.")
					goto *turn_end
				}
				if ( gdata(GDATA_SLEEP) < 13 ) {
					snd SOUNDLIST_FAIL1
					txt lang("Ѓu‚Ь‚ѕ–°‚­‚И‚ў" + _yo(3) + "Ѓv", cdatan(CDATAN_NAME, tc) + " isn't sleepy yet.")
					goto *turn_end
				}
				if ( gdata(GDATA_AREA) == AREA_SHELTER ) {
					snd SOUNDLIST_FAIL1
					txt lang("Ѓu‚±‚с‚ИЏкЏЉ‚Е‚НЊ™" + _yo(3) + "Ѓv", "It seems that " + cdatan(CDATAN_NAME, tc) + " wants to get out of here.")
					goto *turn_end
				}
				txt lang("Ѓu‚ў‚в‚сЃA‚ ‚И‚Ѕ‚Б‚Ѕ‚зЃcЃv", "*blush*")
				if ( cdata(CDATA_ID, tc) == CREATURE_ID_JURE | cdata(CDATA_ID, tc) == CREATURE_ID_JURE ) {
					repeat MAX_CHARA_TOTAL
						if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
							continue
						}
						if ( cdata(CDATA_ID, cnt) == CREATURE_ID_ROVID ) {
							snd SOUNDLIST_AMMO
							txt lang(cdatan(CDATAN_NAME, cnt) + "Ѓu‚в‚Я‚И‚і‚ўЃIѓWѓ…ѓA—l‚ЄЊ™‚ѕ‚ЖЊѕ‚Б‚Д‚ў‚й‚Е‚µ‚е‚¤ЃIЃHЃv", cdatan(CDATAN_NAME, cnt) + ": \"Stop this at once! Lady Jua says she doesn't want to!\"")
							goto *turn_end
							break
						}
					loop
				}
				cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				cbitmod CHARA_BIT_MAKE_GENE, tc, TRUE
				if ( gdata(GDATA_WIZARD) == 0 ) {
					gdata(GDATA_SLEEP_GENE) = tc
				}
				goto *turn_end
			}
		}
		if ( rtval == 10 ) {
			if ( cbit(CHARA_BIT_MARRIED, tc) == FALSE ) {
				if ( cdata(CDATA_ID, tc) == CREATURE_ID_JURE | cdata(CDATA_ID, tc) == CREATURE_ID_JURE ) {
					repeat MAX_CHARA_TOTAL
						if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
							continue
						}
						if ( cdata(CDATA_ID, cnt) == CREATURE_ID_ROVID ) {
							snd SOUNDLIST_AMMO
							txt lang(cdatan(CDATAN_NAME, cnt) + "ЃuЋ„‚Є‹–‚µ‚Ь‚№‚с‚жЃIЃv", cdatan(CDATAN_NAME, cnt) + ": \"I won't forgive you for that.\"")
							goto *turn_end
							break
						}
					loop
				}
				if ( cdata(CDATA_IMPRESSION, tc) < 200 ) {
					txtef COLOR_PURPLE
					snd SOUNDLIST_ATK_DARK
					txt lang("Ѓc" + cdatan(CDATAN_NAME, tc) + "‚Н‚в‚с‚н‚и‚Ж’f‚Б‚ЅЃB", "..." + cdatan(CDATAN_NAME, tc) + " gently refuses your proposal. ")
					goto *turn_end
				}
				if ( cdata(CDATA_ALLIED, tc) == 0 ) {
					txtef COLOR_PURPLE
					snd SOUNDLIST_ATK_DARK
					txt lang("ЃuЉр‚µ‚ў" + _ga(3) + "ЃA" + _ore(3) + "‚М—§Џк‚аЌl‚¦‚Д" + _kure(3) + "Ѓv", "..." + cdatan(CDATAN_NAME, tc) + " sadly refuses your proposal. ")
					goto *turn_end
				}
				cbitmod CHARA_BIT_MARRIED, tc, TRUE
				txtef COLOR_PINK
				txt lang("Ѓu‚Н‚ўЃcЉм‚с‚ЕЃv", "..." + cdatan(CDATAN_NAME, tc) + " blushed and nodded!")
				gdata(GDATA_FLAG_TIMES_MARRIED)++
				cdata(CDATA_JOIN_DATE_MONTH, tc) = gdata(GDATA_MONTH)
				cdata(CDATA_JOIN_DATE_DAY, tc) = gdata(GDATA_DAY)
				cdata(CDATA_JOIN_DATE_YEAR, tc) = gdata(GDATA_YEAR)
				cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				marry = tc
				evadd EVENT_MARRY
				goto *turn_end
			}
		}
		gosub *screen_draw
		goto *turn_end
	}
	if ( p == 11 ) {
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_ITZPALT ) {
			if ( synccheck(cc, -1) ) {
				txt lang("Ѓu‚Е‚Н‰д‚Є–{—€ЏZ‚Ь‚¤‚Ч‚«ђўЉE‚Ц‹AЉТ‚·‚й‚Ж‚µ‚ж‚¤Ѓv", cnvtalk("Then I shall return to the world where I belong."))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_YACATECT ) {
			if ( synccheck(cc, -1) ) {
				txt lang("Ѓu‚Щ‚И‚і‚ў‚И‚зЃ[ЃIЃv", cnvtalk("See ya!"))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_JURE ) {
			if ( synccheck(cc, -1) ) {
				txt lang("ЃuѓxЃA•К‚ЙЋв‚µ‚­‚И‚с‚©‚И‚ў‚с‚ѕ‚©‚зЃIЃv", cnvtalk("I-I'm not lonely at all!"))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_LULWY ) {
			if ( synccheck(cc, -1) ) {
				txt lang("ЃuЌЎ‰с‚Н‚±‚М‚­‚з‚ў‚Й‚µ‚Д‚Ё‚ў‚Д‚ ‚°‚й‚нЋq”L‚ї‚б‚сЃv", cnvtalk("I'll let you off the hook this time, kitty."))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_EHEKATL ) {
			if ( synccheck(cc, -1) ) {
				txt lang("Ѓu‚Ё‚¤‚ї‚©‚¦‚й‚жЃI‚жЃIЃv", cnvtalk("I'm going home! Home!"))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_OPATOS ) {
			if ( synccheck(cc, -1) ) {
				txt lang("ЃuѓtѓnѓnѓbѓnѓnѓnѓnѓtѓbѓnѓnѓnЃ[ЃI‚і‚з‚О‚ѕЃv", cnvtalk("Muwahahahahahahahahaha! Farewell."))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_KUMIROMI ) {
			if ( synccheck(cc, -1) ) {
				txt lang("Ѓu–Y‚к‚И‚ў‚ЕЃc‚ў‚В‚аЊ©Ћз‚Б‚Д‚ў‚й‚©‚зЃcЃv", cnvtalk("Do not forget... I will always be watching over you..."))
			}
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_MANI ) {
			if ( synccheck(cc, -1) ) {
				txt lang("ЃuЌЕЊг‚ЙЊ©‚№‚Д‚в‚л‚¤ЃA‚±‚М‹уЉФ“]€Ъ‘•’u‚Мђ«”\‚рЃIЃv", cnvtalk("Allow me to demonstrate one last time what this spatial shifter can do!"))
				animeid = ANIMATION_GENE
				anic = tc
				gosub *anime
			}
		}
		txt lang(name(tc) + "‚Й‹A‚Б‚Д‚а‚з‚Б‚ЅЃB", "You ask " + name(tc) + " to return to heaven.")
		if ( gdata(GDATA_FLAG_DUEL_TARGET) == tc ) {
			gdata(GDATA_FLAG_DUEL_TARGET) = -1
		}
		chara_vanquish tc
		goto *pc_turn
	}
	if ( p == 12 ) {
		music = MUSICLIST_MCWEDDING
		gosub *music_play
		lovemiracle2 tc
		txtmore
		txtef COLOR_SKY_BLUE
		customtalk tc, DBMODE_FLAVOR_CHOCO
		gosub *convert_word
		if ( gdata(GDATA_CUSTOM_TALK) == 100 ) {
			txt lang("ЃuЋу‚ЇЋж‚Б‚Д" + _kure() + "‚±‚к‚Є" + _ore(3) + "‚М‹CЋќ‚ї" + _da(3) + "Ѓv", cnvtalk("Please take it. These are my true feelings.")), lang(name(tc) + "‚Н‚а‚¶‚а‚¶‚µ‚И‚Є‚з‰щ‚©‚з•п‚Э‚рЋж‚иЏo‚µ‚ЅЃB", name(tc) + "fidgeted a bit before taking out a package from " + his(tc) + " pocket."), lang(name(tc) + "‚НђФ–К‚·‚й‚ЖЌQ‚Д‚Дѓ`ѓ‡ѓR‚рЋж‚иЏo‚µЃA‚ ‚И‚Ѕ‚Й“Л‚«Џo‚µ‚ЅЃB", name(tc) + " hastily takes out some chocolate and shoves it in your face, blushing."), lang(name(tc) + "‚Н‚Й‚Б‚±‚и”чЏО‚Ю‚ЖЃAЊг‚лЋи‚Й‰B‚µ‚Д‚ў‚Ѕѓ`ѓ‡ѓR‚рЊ©‚№‚ЅЃB", name(tc) + " smiles and shows you the chocolate " + he(tc) + " hid behind " + his(tc) + " back."), lang("ЃuЃc–{“–‚Й" + _ore(3) + "‚И‚с‚©‚М‚Е‚ў‚ў" + _noka(1) + "Ѓv", cnvtalk("Are you really okay with someone like me...?"))
		}
		txt_questitem
		gdata(GDATA_FLAG_CAN_RECEIVE_CHOCOLATE) = 0
	}
	if ( p == 13 ) {
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_CAT_ZOMBIE ) {
			necrop = 2
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_ZOMBIE ) {
			necrop = 3
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_MUMMY ) {
			necrop = 4
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_SKELETON_WARRIOR ) {
			necrop = 5
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_LICH ) {
			necrop = 6
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_NECRO_DOLL ) {
			necrop = 7
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_DRAGON_ZOMBIE ) {
			necrop = 8
		}
		if ( cdata(CDATA_ID, tc) == CREATURE_ID_DEAD_EYES_BLOOD_DRAGON ) {
			necrop = 9
		}
		necrop3 = cdata(CDATA_CHARA_PIC, tc)
		txt lang(name(tc) + "‚рЉ»‚Й–Я‚µ‚ЅЃB", "You push " + name(tc) + " into the coffin.")
		flt
		itemcreate -1, ITEM_ID_COFFIN_OF_NECROMANCY, cdata(CDATA_X, tc), cdata(CDATA_Y, tc), 0
		inv(INV_ITEM_PARAM1, ci) = necrop
		inv(INV_ITEM_PARAM2, ci) = cdata(CDATA_FORM_SHIFT_PIC, tc)
		inv(INV_ITEM_WEIGHT, ci) += necrop * 1000
		inv(INV_ITEM_CHARGE, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_PARAM3, ci)
		inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_NORMAL
		inv(INV_ITEM_KNOWN, ci) = ITEM_KNOWN_NECRO
		inv(INV_ITEM_CHARA_PIC, ci) = necrop3
		if ( inv(INV_ITEM_PARAM2, ci) == ITEM_ID_BONE ) {
			inv(INV_ITEM_PARAM2, ci) = 0
		}
		if ( inv(INV_ITEM_PARAM2, ci) == ITEM_ID_HEART ) {
			inv(INV_ITEM_PARAM2, ci) = 0
		}
		if ( inv(INV_ITEM_PARAM2, ci) == ITEM_ID_EYE ) {
			inv(INV_ITEM_PARAM2, ci) = 0
		}
		if ( inv(INV_ITEM_PARAM2, ci) == ITEM_ID_BLOOD ) {
			inv(INV_ITEM_PARAM2, ci) = 0
		}
		if ( inv(INV_ITEM_PARAM2, ci) == ITEM_ID_SKIN ) {
			inv(INV_ITEM_PARAM2, ci) = 0
		}
		if ( inv(INV_ITEM_PARAM2, ci) >= 18000 ) {
			inv(INV_ITEM_PARAM2, ci) = 0
		}
		snd SOUNDLIST_CURSE3
		chara_vanquish tc
		gosub *screen_draw
		goto *pc_turn
	}
	if ( p == 15 ) {
		chatc@DP = tc
		if ( cdata(CDATA_IMPRESSION, tc) < 0 ) {
			if ( jp ) {
				txtef COLOR_RED
				txt name(tc) + "‚Н‚ ‚И‚Ѕ‚рЊ©‚ДIЌњ‚ЙЊ™‚»‚¤‚ИЉз‚р‚µ‚Д‚ў‚йЃI", "Ѓu‚«‚а‚ї‚н‚й‚ўЃv", "Ѓu—Ј‚к‚лЃI‚±‚Мѓwѓ“ѓ^ѓCЃIЃv", "Ѓu‚¤‚н‚БЃcђM‚¶‚з‚к‚И‚ўЃcЃv"
			}
			else {
				txt name(tc) + " seems disgusted by you.", cnvtalk("Disgusting."), cnvtalk("Get away! Pervert!"), cnvtalk("Wow... Unbelievable...")
			}
			modimp tc, -20
		}
		if ( cdata(CDATA_IMPRESSION, tc) >= 0 & cdata(CDATA_IMPRESSION, tc) < 50 ) {
			if ( jp ) {
				txtef COLOR_YELLOW
				txt name(tc) + "‚Н‚ ‚И‚Ѕ‚р–{‹C‚Е‹CЋќ‚ї€«‚Є‚Б‚Д‚ў‚йЃI", "Ѓu‚»‚к€ИЏг‹ЯЉс‚й‚ИЃv", "ЃuѓKЃ[ѓhЃIѓKЃ[ѓhЃIЃIЃv"
			}
			else {
				txt name(tc) + " glares angrily at you.", cnvtalk("Do not get any closer."), cnvtalk("Guards! Guards!")
			}
			modimp tc, -10
		}
		if ( cdata(CDATA_IMPRESSION, tc) >= 50 & cdata(CDATA_IMPRESSION, tc) < 100 ) {
			if ( jp ) {
				txtef COLOR_YELLOW
				txt name(tc) + "‚НЊг‚ё‚і‚и‚µ‚ЅЃB‚©‚И‚и€ш‚ў‚Д‚ў‚й‚ж‚¤‚ѕЃB", "Ѓu‚¤ЃA‚¤‚н‚џЃcЃv", name(tc) + "‚Н‰Ѕ‚аЊ©‚И‚©‚Б‚Ѕ‚±‚Ж‚Й‚µ‚ЅЃB"
			}
			else {
				txt name(tc) + " backed away a considerable distance.", cnvtalk("W-wow..."), name(tc) + " pretends to see nothing."
			}
			modimp tc, -10
		}
		if ( cdata(CDATA_IMPRESSION, tc) >= 100 & cdata(CDATA_IMPRESSION, tc) < 150 ) {
			if ( jp ) {
				txtef COLOR_GREEN
				txt name(tc) + "‚МЉз‚Є€ш‚«‚В‚Б‚Д‚ў‚йЃB", "Ѓu‚¦‚БЃv", name(tc) + "‚Н“с“xЊ©‚µ‚ЅЊг‚ЙЊЕ‚Ь‚Б‚Д‚µ‚Ь‚Б‚ЅЃcЃB"
			}
			else {
				txt name(tc) + "'s face twitches.", cnvtalk("Eh."), name(tc) + " was stupefied after doing a double take..."
			}
		}
		if ( cdata(CDATA_IMPRESSION, tc) >= 150 & cdata(CDATA_IMPRESSION, tc) < 200 ) {
			if ( jp ) {
				txtef COLOR_GREEN
				txt name(tc) + "‚Н‹кЏО‚ў‚µ‚Д‚ў‚йЃcЃB", name(tc) + "‚НЌўf‚µ‚И‚Є‚з‚аЃA‘Ѓ‚­‘М‚рђф‚Б‚Д‚­‚й‚ж‚¤Љ©‚Я‚ЅЃB"
			}
			else {
				txt name(tc) + " smiled wryly...", "While " + name(tc) + " was bewildered, I urged them to quickly wash their body."
			}
		}
		if ( cdata(CDATA_IMPRESSION, tc) >= 200 ) {
			if ( jp ) {
				txtef COLOR_GREEN
				txt name(tc) + "‚Н–{‹C‚Е‚ ‚И‚Ѕ‚М“Є‚рђS”z‚µ‚Д‚ў‚йЃcЃB", "Ѓu‘Ѓ‚­‚»‚Мѓ`ѓ‡ѓR‚рђф‚ў—Ћ‚Ж‚µ‚Й‚ў‚±‚¤Ѓv"
			}
			else {
				txt name(tc) + " is seriously worried about your head...", cnvtalk("Let's quickly wash out that chocolate.")
			}
		}
	}
	if ( p == 16 ) {
		allyctrl = 8
		gosub *com_ally
		if ( stat != (-1) ) {
			ttc = stat
			if ( ttc == tc ) {
				txt_nothinghappens
				goto *pc_turn
			}
			if ( tc != CHARA_PLAYER ) {
				if ( cdata(CDATA_AREA, ttc) != AREA_NONE | cdata(CDATA_AREA, tc) != AREA_NONE ) {
					txt lang("‘ШЌЭ’†‚М’‡ЉФ‚Нѓ^ѓbѓO‚р‘g‚Я‚И‚ўЃB", "The ally currently stays in this area.")
					goto *pc_turn
				}
			}
			if ( cbit(CHARA_BIT_GUARD_TEMP, ttc) == 1 ) {
				txt_nothinghappens
				goto *pc_turn
			}
			if ( cdata(CDATA_EXIST, ttc) != CHAR_STATE_ALIVE ) {
				txt_nothinghappens
				goto *pc_turn
			}
			if ( cdata(CDATA_IN_TAGTEAM, tc) != 0 ) {
				txt lang(cdatan(CDATAN_NAME, tc) + "‚Й‚НЉщ‚Йѓ^ѓbѓOѓpЃ[ѓgѓiЃ[‚Є‚ў‚йЃB", "There's no place.")
				goto *pc_turn
			}
			if ( cdata(CDATA_IN_TAGTEAM, ttc) != 0 ) {
				txt lang(cdatan(CDATAN_NAME, ttc) + "‚Й‚НЉщ‚Йѓ^ѓbѓOѓpЃ[ѓgѓiЃ[‚Є‚ў‚йЃB", "There's no place.")
				goto *pc_turn
			}
			if ( cdata(CDATA_EXIST, ttc) == CHAR_STATE_ALIVE ) {
				snd SOUNDLIST_CHEER
				if ( cdata(CDATA_IN_TAGTEAM, tc) != 0 ) {
					cell_findspace cdata(CDATA_X, tc), cdata(CDATA_Y, tc), 1
					if ( stat == 0 ) {
						txt_nospace
						goto *pc_turn
					}
					cdata(CDATA_TAGTEAM_PARTNER, cdata(CDATA_TAGTEAM_PARTNER, tc)) = -1
					cdata(CDATA_IN_TAGTEAM, cdata(CDATA_TAGTEAM_PARTNER, tc)) = 0
					snd SOUNDLIST_AMMO
					cell_setchara cdata(CDATA_TAGTEAM_PARTNER, tc), rtval, rtval(1)
				}
				tag_begin tc, ttc
				cdata(CDATA_X, ttc) = cdata(CDATA_X, tc)
				cdata(CDATA_Y, ttc) = cdata(CDATA_Y, tc)
				if ( spact(SKILL_SPACT_TAG_FORCE - STARTING_SKILL_SPACT) == 0 ) {
					spact(SKILL_SPACT_TAG_FORCE - STARTING_SKILL_SPACT) = 1
					txtmore
					txtef COLOR_YELLOW
					txt lang("‚ ‚И‚Ѕ‚НЃu" + skillname(SKILL_SPACT_TAG_FORCE) + "Ѓv‚М”\—Н‚р“ѕ‚ЅЃB", "You have learned a new ability, " + skillname(SKILL_SPACT_TAG_FORCE) + ".")
				}
				gosub *screen_draw
				goto *turn_end
			}
		}
		gosub *screen_draw
		goto *turn_end
	}
	if ( p == 17 ) {
		ttc = cdata(CDATA_TAGTEAM_PARTNER, tc)
		cell_findspace cdata(CDATA_X, tc), cdata(CDATA_Y, tc), 1
		if ( stat == 0 ) {
			txt_nospace
			goto *pc_turn
		}
		cell_setchara ttc, rtval, rtval(1)
		tag_end tc
		gosub *screen_draw
		goto *turn_end
	}
	if ( p >= 18 & p <= 22 ) {
		if ( sorg(SKILL_ATTR_LIFE, tc) < 4 ) {
			txtef COLOR_RED
			txt lang("–і—ќ‚ЙЌs‚¤‚ЖЋЂ‚Й‚»‚¤‚ѕЃB‚в‚Я‚Д‚Ё‚±‚¤‚©ЃH", "If you squeeze more milk, " + name(tc) + " will die. Will you stop?")
			promptYesNo
			if ( rtval != 1 ) {
				goto *pc_turn
			}
			snd SOUNDLIST_STAB
			if ( p == 18 ) {
				txt lang(name(tc) + "‚МЌњ‚р–і—ќ‚в‚и€ш‚«‚ё‚иЏo‚µ‚ЅЃB", "You take out a bone from " + name(tc) + ".")
				flt
				itemcreate -1, ITEM_ID_BONE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
				remain_make ci, tc
			}
			if ( p == 19 ) {
				txt lang(name(tc) + "‚МђS‘џ‚р–і—ќ‚в‚и”І‚«Ћж‚Б‚ЅЃB", "You take out a heart from " + name(tc) + ".")
				flt
				itemcreate -1, ITEM_ID_HEART, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
				remain_make ci, tc
			}
			if ( p == 20 ) {
				txt lang(name(tc) + "‚М–Ъ‹К‚р–і—ќ‚в‚иќP‚иЋж‚Б‚ЅЃB", "You take out an eye from " + name(tc) + ".")
				flt
				itemcreate -1, ITEM_ID_EYE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
				remain_make ci, tc
			}
			if ( p == 21 ) {
				txt lang(name(tc) + "‚М‘М‰t‚р–і—ќ‚в‚иЌп‚иЋж‚Б‚ЅЃB", "You take out blood from " + name(tc) + ".")
				flt
				itemcreate -1, ITEM_ID_BLOOD, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
				remain_make ci, tc
			}
			if ( p == 22 ) {
				txt lang(name(tc) + "‚М”з‚р–і—ќ‚в‚и”Ќ‚Є‚µ‚ЅЃB", "You take out some skin from " + name(tc) + ".")
				flt
				itemcreate -1, ITEM_ID_SKIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
				remain_make ci, tc
			}
			evadd EVENT_SQUEEZE, tc
			gosub *screen_draw
			goto *turn_end
		}
		snd SOUNDLIST_STAB
		if ( p == 18 ) {
			txt lang(name(tc) + "‚МЌњ‚р€ш‚«‚ё‚иЏo‚µ‚ЅЃB", "You take out a bone from " + name(tc) + ".")
			flt
			itemcreate -1, ITEM_ID_BONE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
			remain_make ci, tc
		}
		if ( p == 19 ) {
			txt lang(name(tc) + "‚МђS‘џ‚р”І‚«Ћж‚Б‚ЅЃB", "You take out a heart from " + name(tc) + ".")
			flt
			itemcreate -1, ITEM_ID_HEART, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
			remain_make ci, tc
		}
		if ( p == 20 ) {
			txt lang(name(tc) + "‚М–Ъ‹К‚рќP‚иЋж‚Б‚ЅЃB", "You take out an eye from " + name(tc) + ".")
			flt
			itemcreate -1, ITEM_ID_EYE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
			remain_make ci, tc
		}
		if ( p == 21 ) {
			txt lang(name(tc) + "‚М‘М‰t‚рЌп‚иЋж‚Б‚ЅЃB", "You take out blood from " + name(tc) + ".")
			flt
			itemcreate -1, ITEM_ID_BLOOD, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
			remain_make ci, tc
		}
		if ( p == 22 ) {
			txt lang(name(tc) + "‚М”з‚р”Ќ‚Є‚µ‚ЅЃB", "You take out some skin from " + name(tc) + ".")
			flt
			itemcreate -1, ITEM_ID_SKIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
			remain_make ci, tc
		}
		dmghp tc, cdata(CDATA_MAX_HP, tc), DAMAGE_FROM_SCALP
		skillmod SKILL_ATTR_LIFE, tc, sorg(SKILL_ATTR_LIFE, tc) * (-1) * 3 / 4 * 1000
		gosub *screen_draw
		goto *turn_end
	}
	if ( p == 14 ) {
		if ( cdata(CDATA_SHIFT_FORM, tc) != SHIFT_FORM_NONE ) {
			gdata(GDATA_SENSE_OBJECT) = 1
		}
		ccbk = cc
		cc = tc
		gosub *com_shape_change
		cc = ccbk
		gosub *screen_draw
		goto *pc_turn
		if ( cdata(CDATA_PIC, tc) < 693 | cdata(CDATA_PIC, tc) > 724 ) {
			cdata(CDATA_PIC_ORG, tc) = cdata(CDATA_PIC, tc)
		}
		txtef COLOR_YELLOW
		txt lang("‘О‰ћ‚·‚й‰ж‘њ‚М”ФЌ†‚НЃHЃi48*48‚Н2Ѓ`16ЃA48*96‚Н17Ѓ`32‚Е“ь—НЃB1‚р“ь—Н‚·‚й‚ЖѓfѓtѓHѓ‹ѓg‚ЙЃBЃj", "Input the number of Pic_ . (48*48ЃЁ2-16 48*96ЃЁ17-32)")
		val = (windoww - 100) / 2 + inf_screenx, winposy(90), 5, 0, 0
		inputlog = ""
		gosub *prompt_word
		if ( inputlog == "1" ) {
			if ( cdata(CDATA_PIC_ORG, tc) != 0 ) {
				cdata(CDATA_PIC, tc) = cdata(CDATA_PIC_ORG, tc)
				txtef COLOR_GREEN
				txt lang("Њі‚МЋp‚Й–Я‚µ‚ЅЃB", "You put back the original graphic.")
			}
		}
		else {
			if ( inputlog == "2" ) {
				cdata(CDATA_PIC, tc) = xy2pic(1, 21)
			}
			if ( inputlog == "3" ) {
				cdata(CDATA_PIC, tc) = xy2pic(2, 21)
			}
			if ( inputlog == "4" ) {
				cdata(CDATA_PIC, tc) = xy2pic(3, 21)
			}
			if ( inputlog == "5" ) {
				cdata(CDATA_PIC, tc) = xy2pic(4, 21)
			}
			if ( inputlog == "6" ) {
				cdata(CDATA_PIC, tc) = xy2pic(5, 21)
			}
			if ( inputlog == "7" ) {
				cdata(CDATA_PIC, tc) = xy2pic(6, 21)
			}
			if ( inputlog == "8" ) {
				cdata(CDATA_PIC, tc) = xy2pic(7, 21)
			}
			if ( inputlog == "9" ) {
				cdata(CDATA_PIC, tc) = xy2pic(8, 21)
			}
			if ( inputlog == "10" ) {
				cdata(CDATA_PIC, tc) = xy2pic(9, 21)
			}
			if ( inputlog == "11" ) {
				cdata(CDATA_PIC, tc) = xy2pic(10, 21)
			}
			if ( inputlog == "12" ) {
				cdata(CDATA_PIC, tc) = xy2pic(11, 21)
			}
			if ( inputlog == "13" ) {
				cdata(CDATA_PIC, tc) = xy2pic(12, 21)
			}
			if ( inputlog == "14" ) {
				cdata(CDATA_PIC, tc) = xy2pic(13, 21)
			}
			if ( inputlog == "15" ) {
				cdata(CDATA_PIC, tc) = xy2pic(14, 21)
			}
			if ( inputlog == "16" ) {
				cdata(CDATA_PIC, tc) = xy2pic(15, 21)
			}
			if ( inputlog == "17" ) {
				cdata(CDATA_PIC, tc) = xy2pic(16, 21)
			}
			if ( inputlog == "18" ) {
				cdata(CDATA_PIC, tc) = xy2pic(17, 21)
			}
			if ( inputlog == "19" ) {
				cdata(CDATA_PIC, tc) = xy2pic(18, 21)
			}
			if ( inputlog == "20" ) {
				cdata(CDATA_PIC, tc) = xy2pic(19, 21)
			}
			if ( inputlog == "21" ) {
				cdata(CDATA_PIC, tc) = xy2pic(20, 21)
			}
			if ( inputlog == "22" ) {
				cdata(CDATA_PIC, tc) = xy2pic(21, 21)
			}
			if ( inputlog == "23" ) {
				cdata(CDATA_PIC, tc) = xy2pic(22, 21)
			}
			if ( inputlog == "24" ) {
				cdata(CDATA_PIC, tc) = xy2pic(23, 21)
			}
			if ( inputlog == "25" ) {
				cdata(CDATA_PIC, tc) = xy2pic(24, 21)
			}
			if ( inputlog == "26" ) {
				cdata(CDATA_PIC, tc) = xy2pic(25, 21)
			}
			if ( inputlog == "27" ) {
				cdata(CDATA_PIC, tc) = xy2pic(26, 21)
			}
			if ( inputlog == "28" ) {
				cdata(CDATA_PIC, tc) = xy2pic(27, 21)
			}
			if ( inputlog == "29" ) {
				cdata(CDATA_PIC, tc) = xy2pic(28, 21)
			}
			if ( inputlog == "30" ) {
				cdata(CDATA_PIC, tc) = xy2pic(29, 21)
			}
			if ( inputlog == "31" ) {
				cdata(CDATA_PIC, tc) = xy2pic(30, 21)
			}
			if ( inputlog == "32" ) {
				cdata(CDATA_PIC, tc) = xy2pic(31, 21)
			}
			if ( cdata(CDATA_PIC, tc) >= xy2pic(0, 21) ) {
				snd SOUNDLIST_DING2
				cbitmod CHARA_BIT_PCC, tc, 0
				gsel 5
				folder = exedir + "user\\graphic\\"
				dirlist buff, folder + "Pic_*.bmp"
				notesel buff
				repeat stat
					noteget file, cnt
					p = int(strmid(file, 4, instr(file, 4, "."))) + 692
					pos p \ 33 * inf_tiles, p / 33 * inf_tiles
					picload folder + file, 1
				loop
				gsel 0
			}
		}
		gosub *screen_draw
		goto *pc_turn
	}
	gosub *screen_draw
	goto *pc_turn

*com_name
	txt lang(name(tc) + "‚р‰Ѕ‚ЖЊД‚ФЃH ", "What do you want to call " + him(tc) + "? ")
	val = (windoww - 340) / 2 + inf_screenx, winposy(90), 22, 1, 0
	inputlog = ""
	input_mode = 1
	gosub *prompt_word
	if ( inputlog == "" ) {
		txt lang("–ј‘O‚р‚В‚Ї‚й‚М‚Н‚в‚Я‚ЅЃB", "You changed your mind.")
	}
	else {
		cdatan(CDATAN_NAME, tc) = "" + inputlog
		cbitmod CHARA_BIT_HAS_NAME, tc, 1
		txt lang("" + cdatan(CDATAN_NAME, tc) + "‚Ж‚ў‚¤–ј‘O‚ЕЊД‚Ф‚±‚Ж‚Й‚µ‚ЅЃB", "You named " + him(tc) + " " + cdatan(CDATAN_NAME, tc) + ".")
	}
	gosub *screen_refresh
	goto *pc_turn

*com_tone
	gsel 4
	repeat 8
		pos cnt \ 4 * 180, cnt / 4 * 300
		picload exedir + "\\graphic\\g" + (cnt + 1) + ".bmp", 1
	loop
	gsel 0
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	folder = exedir + "user\\talk\\"
	dirlist buff, folder + "*.txt"
	notesel buff
	list(0, 0) = -999
	listn(0, 0) = lang("ѓfѓtѓHѓ‹ѓg‚МЊы’І", "Default Tone")
	listmax++
	repeat noteinfo(0)
		noteget s, cnt
		chatList listmax, s
	loop
	windowshadow = 1
*com_tone_loop_pgchk
	redraw 0
	page_check
*com_tone_loop
	redraw 0
	s = lang("Њы’І€к——", "Tone of Voice"), lang("Њ€’и [Њы’І‚М•ПЌX]  ", "Enter [Change Tone] ") + strhint2 + strhint3
	display_window (windoww - 500) / 2 + inf_screenx, winposy(400), 500, 400
	x = ww / 5 * 3
	y = wh - 80
	gmode 4, 180, 300, 50
	pos wx + ww / 3 * 2, wy + wh / 2
	grotate 4, cmbg / 4 \ 4 * 180, cmbg / 4 / 4 \ 2 * 300, 0, x, y
	gmode 2
	display_topic lang("‘и–ј", "Title"), wx + 28, wy + 36
	keyrange = 0
	repeat pagesize
		talkp = pagesize * page + cnt
		if ( talkp >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini ww - 100, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		talkp = pagesize * page + cnt
		if ( talkp >= listmax ) {
			break
		}
		i = list(0, talkp)
		s = "" + listn(0, talkp)
		cs_list s, wx + 138, wy + 66 + cnt * 19 - 1, 19
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	talkp = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			talkp = list(0, pagesize * page + cnt)
			cs = cnt
			break
		}
	loop
	if ( talkp != (-1) ) {
		snd SOUNDLIST_OK1
		txt lang(name(tc) + "‚МЊы’І‚Є•П‚н‚Б‚Ѕ‹C‚Є‚·‚йЃB", name(tc) + " is somewhat different.")
		if ( talkp == (-999) ) {
			cbitmod CHARA_BIT_MSG_FILE, tc, 0
			cdatan(CDATAN_MSG, tc) = ""
			return 1
		}
		cbitmod CHARA_BIT_MSG_FILE, tc, 1
		cdatan(CDATAN_MSG, tc) = listn(0, talkp)
		return 1
	}
	page_change *com_tone_loop_pgchk
	if ( key == key_cancel ) {
		return -1
	}
	goto *com_tone_loop

/********** CUSTOM NPC SUMMONING - BEGINNING **********/
*com_userNpcExisting
	snd SOUNDLIST_CHARA
	gsel 4
	repeat 8
		pos cnt \ 4 * 180, cnt / 4 * 300
		picload exedir + "\\graphic\\g" + (cnt + 1) + ".bmp", 1
	loop
	gsel 0
	listmax = 0
	page = 0
	pagesize = 14
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	if ( pagesaved_summon == 1 ) {
		page = pagebk_summon
		cs = csprev_summon
	}
	dim user_npc_index, 240
	tg = 0
	repeat usernpcmax
		if ( instr(userdatan(6, cnt), 0, "_tmp_") > (-1) ) {
			continue
		}
		setCom lang(userdatan(1, cnt) + "(" + userdatan(0, cnt) + ")", userdatan(1, cnt)), userdatan(6, cnt)
		user_npc_index(tg) = cnt
		tg++
	loop
	txt lang("‚З‚МЋТ‚рЏўЉ«‚µ‚Ѕ‚ў‚ЖЉи‚¤‚©ЃH", "Check which CNPC?")
	windowshadow = 1
*com_userNpcExisting_loop_pgchk
	redraw 0
	page_check
*com_userNpcExisting_loop
	redraw 0
	s = lang("ѓJѓXѓ^ѓЂNPC€к——", "Custom NPC"), lang("Њ€’и [ЏўЉ«]  ", "Enter [Details] ") + strhint2 + strhint3
	display_window (windoww - 500) / 2 + inf_screenx, winposy(400), 500, 400
	x = ww / 5 * 3
	y = wh - 80
	gmode 4, 180, 300, 50
	pos wx + ww / 3 * 2, wy + wh / 2
	grotate 4, cmbg / 4 \ 4 * 180, cmbg / 4 / 4 \ 2 * 300, 0, x, y
	gmode 2
	display_topic lang("–ј‘O", "Name"), wx + 28, wy + 36
	if ( mdata(MDATA_TYPE) != MAP_TYPE_TOWN & mdata(MDATA_TYPE) != MAP_TYPE_VILLAGE & mdata(MDATA_TYPE) != MAP_TYPE_HOME ) {
        display_topic lang("Level(Piety Cost)", "Level(Piety Cost)"), wx + 328, wy + 36
        display_topic lang("ђM‹В‚Мђ[‚іЃF" + cdata(CDATA_PIETY, CHARA_PLAYER) + "/" + sdata(SKILL_NORMAL_FAITH, CHARA_PLAYER) * 100, "Piety: " + cdata(CDATA_PIETY, CHARA_PLAYER) + "/" + sdata(SKILL_NORMAL_FAITH, CHARA_PLAYER) * 100), wx + 150, wy + 36
    } else {
        display_topic lang("Level", "Level"), wx + 348, wy + 36
    }
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini ww - 100, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = user_npc_index(list(0, p))
		s = "" + listn(0, p)
		pos wx + 380, wy + 66 + cnt * 19
		custom_summon_cost = calccostcnpcsummon(i)
        custom_summon_text_color = 0
        color 10, 10, 10
        if ( mdata(MDATA_TYPE) != MAP_TYPE_TOWN & mdata(MDATA_TYPE) != MAP_TYPE_VILLAGE & mdata(MDATA_TYPE) != MAP_TYPE_HOME ) {
            if ( userdata(2, i) >= cdata(CDATA_LEVEL, CHARA_PLAYER) * 3 / 2 + 5 | custom_summon_cost >= cdata(CDATA_PIETY, CHARA_PLAYER) ) {
                color 160, 10, 10
                custom_summon_text_color = 3
            }
            mes "" + userdata(2, i) + "(" + custom_summon_cost + ")"
        } else {
            mes "" + userdata(2, i)
        }
        cs_list s, wx + 85, wy + 66 + cnt * 19 - 1, 19, 0, custom_summon_text_color
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			cs = cnt
			break
		}
	loop
	pagebk_summon = page
	csprev_summon = cs
	pagesaved_summon = 1
	if ( p != (-1) ) {
		pbk = p
		p = user_npc_index(list(0, p))
		gosub *com_knowCNPC
		if ( key == key_enter ) {
			p@NE = get_freeallysum()
			if ( (0 < (15 - p@NE)) & mdata(MDATA_TYPE) != MAP_TYPE_TOWN & mdata(MDATA_TYPE) != MAP_TYPE_VILLAGE & mdata(MDATA_TYPE) != MAP_TYPE_HOME ) {
				p@NE(1) = calccostcnpcsummon(knowCNPC)
				if ( userdata(2, knowCNPC) < cdata(CDATA_LEVEL, CHARA_PLAYER) * 3 / 2 + 5 ) {
					if ( p@NE(1) <= cdata(CDATA_PIETY, CHARA_PLAYER) ) {
						cdata(CDATA_PIETY, CHARA_PLAYER) -= p@NE(1)
						initunid = findunid(userdatan(0, knowCNPC))
						s = ""
						if ( userdata(5, knowCNPC) == 1 ) { s += "Bad " }
						if ( userdata(5, knowCNPC) == 2 ) { s += "Common " }
						if ( userdata(5, knowCNPC) == 3 ) { s += "Skilled " }
						if ( userdata(5, knowCNPC) == 4 ) { s += "Professional " }
						if ( userdata(5, knowCNPC) == 5 ) { s += "Legendary " }
						if ( userdata(5, knowCNPC) == 6 ) { s += "Well-Known " }
						s += userdatan(3, knowCNPC)
						txtef COLOR_GREEN
						txt lang("•КђўЉE‚М‰Ѕ‚©‚рЏўЉ«‚µ‚ЅЃI", "A " + s + " is summoned from another world!")
						if ( cdata(CDATA_X, CHARA_PLAYER) > 1 ) {
							sux = cdata(CDATA_X, CHARA_PLAYER) - 1
						}
						flt
						characreate -1, CREATURE_ID_USER, sux, cdata(CDATA_Y, CHARA_PLAYER)
						cbitmod CHARA_BIT_NECRO, rc, TRUE
						cbitmod CHARA_BIT_SUMMONED, rc, TRUE
						cbitmod CHARA_BIT_SHADOW_CLONE, rc, TRUE
						cdata(CDATA_RELATION, rc) = RELATION_ALLY
						cdata(CDATA_RELATION_ORG, rc) = RELATION_ALLY
						cdata(CDATA_TARGET, rc) = cdata(CDATA_TARGET, cc)
						cdata(CDATA_AI_AGGRO, rc) = cdata(CDATA_AI_AGGRO, cc)
						cdata(CDATA_CHARACTER_TIER, rc) = CHARACTER_TIER_SUMMONED_NORMAL
						repeat MAX_CHARA_TOTAL
							if ( cnt <= MAX_CHARA_FOLLOWER ) {
								continue
							}
							if ( cdata(CDATA_ID, cnt) == CREATURE_ID_USER ) {
								getunid cnt
							}
						loop
						animeid = ANIMATION_GENE
						anic = rc
						gosub *anime
					} else {
						txtef COLOR_RED
						txt lang("ЋџЊі‚М•З‚р’К‰Я‚і‚№‚й‚Й‚НЃA‚а‚Б‚ЖђM‹В‚Мђ[‚Є•K—v‚ѕЃB", "You need to be more pious to let the being pass through the dimensional barrier.")
					}
				} else {
					txtef COLOR_RED
					txt lang("ЋџЊі‚М•З‚р’К‰Я‚і‚№‚й‚Й‚НЃA‚а‚Б‚ЖЊoЊ±‚Є•K—v‚ѕЃB", "You need more experience to let the being pass through the dimensional barrier.")
				}
				return 1
			} else {
				ppcost1@NE = userdata(2, knowCNPC)
				ppcost2@NE = (userdata(2, knowCNPC) / 3)
				if ( ppcost1@NE < 5 ) { ppcost1@NE = 5 }
				if ( ppcost2@NE < 2 ) { ppcost2@NE = 2 }
				redraw 0
				txtnew
				txt lang("[CNPCЏўЉ«]‰Ѕ‚р‚·‚йЃH", "[CNPC Summon] What do you want to do?")
				promptAdd "Summon as friendly. (" + ppcost1@NE + " pp)", "null", 1
				promptAdd "Summon as neutral. (" + ppcost2@NE + " pp)", "null", 2
				promptAdd "Summon as enemy.", "null", 3
				promptAdd "Cancel.", "null", 0
				val = promptx, prompty, 280, 1
				gosub *prompt_key
				gosub *screen_draw
				rtval@NE = rtval
				if ( rtval@NE == 0 ) {
					return 1
				}
				if ( rtval@NE >= 1 & rtval@NE <= 3 ) {
					if ( rtval@NE == 1 ) {
						if ( cdata(CDATA_PLATINUM, CHARA_PLAYER) < ppcost1@NE ) {
							txt lang("Ѓu‘«‚и‚И‚ў‚с‚жЃv", cnvtalk("Not enough!"))
							return 1
						}
						cdata(CDATA_PLATINUM, CHARA_PLAYER) -= ppcost1@NE
					}
					if ( rtval@NE == 2 ) {
						if ( cdata(CDATA_PLATINUM, CHARA_PLAYER) < ppcost2@NE ) {
							txt lang("Ѓu‘«‚и‚И‚ў‚с‚жЃv", cnvtalk("Not enough!"))
							return 1
						}
						cdata(CDATA_PLATINUM, CHARA_PLAYER) -= ppcost2@NE
					}

					initunid = findunid(userdatan(0, knowCNPC))
					txtef COLOR_GREEN
					txt lang("ѓJѓXѓ^ѓЂNPC‚рЏўЉ«‚µ‚ЅЃI", "A custom NPC has been successfully summoned from another world!")
					if ( cdata(CDATA_X, CHARA_PLAYER) > 1 ) {
						sux = cdata(CDATA_X, CHARA_PLAYER) - 1
					}
					flt
					characreate -1, CREATURE_ID_USER, sux, cdata(CDATA_Y, CHARA_PLAYER)
					repeat MAX_CHARA_TOTAL
						if ( cdata(CDATA_ID, cnt) == CREATURE_ID_USER ) {
							getunid cnt
						}
					loop
					txtef COLOR_YELLOW
					if ( rtval@NE == 1 ) {
						cdata(CDATA_RELATION, rc) = 0
						cdata(CDATA_RELATION_ORG, rc) = 0
						// Disable follow on talkable NPC so they don't annoy player that much
						if ( cdata(CDATA_AI_CALM, rc) == 4 | cdata(CDATA_AI_CALM, rc) == 5 ) {
							cdata(CDATA_AI_CALM, rc) = 0
						}
						txt lang(name(rc) + "‚Н‹»•±‚µ‚ДЏP‚ўЉ|‚©‚Б‚Д‚«‚ЅЃB", cdatan(CDATAN_NAME, rc) + " is excited!")
					}
					if ( rtval@NE == 2 ) {
						cdata(CDATA_RELATION, rc) = (-1)
						cdata(CDATA_RELATION_ORG, rc) = (-1)
						txt lang(name(rc) + "‚Н‹»•±‚µ‚ДЏP‚ўЉ|‚©‚Б‚Д‚«‚ЅЃB", cdatan(CDATAN_NAME, rc) + " is excited!")
					}
					if ( rtval@NE == 3 ) {
						cdata(CDATA_RELATION, rc) = -3
						cdata(CDATA_RELATION_ORG, rc) = -3
						txt lang(name(rc) + "‚Н‹»•±‚µ‚ДЏP‚ўЉ|‚©‚Б‚Д‚«‚ЅЃB", cdatan(CDATAN_NAME, rc) + " is confused and attacks you.")
					}
				}
				return 1
			}
		} 
		p = pbk
		key = ""
	}
	page_change *com_userNpcExisting_loop_pgchk
	if ( key == key_cancel ) {
		return -1
	}
	goto *com_userNpcExisting_loop

#defcfunc calccostcnpcsummon int calccostcnpcsummon_arg1
	locvar_calccostcnpcsummon_cost = userdata(2, calccostcnpcsummon_arg1) // Level
	locvar_calccostcnpcsummon_multiplier = 3 // Base multiplier
	// fixLv
	if ( userdata(5, calccostcnpcsummon_arg1) == 1 ) { locvar_calccostcnpcsummon_multiplier = 2 }
	if ( userdata(5, calccostcnpcsummon_arg1) == 2 ) { locvar_calccostcnpcsummon_multiplier = 3 }
	if ( userdata(5, calccostcnpcsummon_arg1) == 3 ) { locvar_calccostcnpcsummon_multiplier = 4 }
	if ( userdata(5, calccostcnpcsummon_arg1) == 4 ) { locvar_calccostcnpcsummon_multiplier = 10 }
	if ( userdata(5, calccostcnpcsummon_arg1) == 5 ) { locvar_calccostcnpcsummon_multiplier = 15 }
	if ( userdata(5, calccostcnpcsummon_arg1) == 6 ) { locvar_calccostcnpcsummon_multiplier = 20 }
	// Class
	if ( userdatan(3, calccostcnpcsummon_arg1) == "tourist" ) { locvar_calccostcnpcsummon_multiplier -= 2 }
	// Race
	if ( userdatan(2, calccostcnpcsummon_arg1) == "snail" ) { locvar_calccostcnpcsummon_multiplier -= 5 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "eye" ) { locvar_calccostcnpcsummon_multiplier -= 4 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "wisp" ) { locvar_calccostcnpcsummon_multiplier -= 4 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "zombie" ) { locvar_calccostcnpcsummon_multiplier -= 4 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "mushroom" ) { locvar_calccostcnpcsummon_multiplier -= 3 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "kobolt" ) { locvar_calccostcnpcsummon_multiplier -= 2 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "orc" ) { locvar_calccostcnpcsummon_multiplier -= 2 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "dragon" ) { locvar_calccostcnpcsummon_multiplier += 2 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "yith" ) { locvar_calccostcnpcsummon_multiplier += 5 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "quickling" ) { locvar_calccostcnpcsummon_multiplier += 20 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "metal" ) { locvar_calccostcnpcsummon_multiplier += 30 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "god" ) { locvar_calccostcnpcsummon_multiplier += 40 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "undeadgod" ) { locvar_calccostcnpcsummon_multiplier += 40 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "machinegod" ) { locvar_calccostcnpcsummon_multiplier += 40 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "catgod" ) { locvar_calccostcnpcsummon_multiplier += 50 }
	if ( userdatan(2, calccostcnpcsummon_arg1) == "doggod" ) { locvar_calccostcnpcsummon_multiplier += 50 }
	// Resistance
	if ( userdatan(5, calccostcnpcsummon_arg1) != "" ) {
		sdim unres, 6, 32
		csvstr2 unres, userdatan(5, calccostcnpcsummon_arg1)
		repeat
			if ( cnt > 15 | unres(cnt * 2) == "" ) { break }
			locvar_calccostcnpcsummon_multiplier += int(unres(cnt * 2 + 1)) / 2
		loop
	}
	// Bits
	repeat 35
		HMMBITCHECK userdata(40 + cnt / 32, calccostcnpcsummon_arg1), cnt \ 32
		if ( stat ) {
			locvar_calccostcnpcsummon_multiplier += 1
			if ( cnt >= 5 & cnt <= 13 ) { locvar_calccostcnpcsummon_multiplier += 1 }
			if ( cnt == CHARA_BIT_CURE_BLEEDING ) { locvar_calccostcnpcsummon_multiplier += 1 }
			if ( cnt == CHARA_BIT_IMMUNE_MINE ) { locvar_calccostcnpcsummon_multiplier += 1 }
			if ( cnt == CHARA_BIT_TEMPER ) { locvar_calccostcnpcsummon_multiplier += 1 }
			if ( cnt == CHARA_BIT_RAPID_MAGIC ) { locvar_calccostcnpcsummon_multiplier += 20 }
			if ( cnt == CHARA_BIT_LAY_HANDS ) { locvar_calccostcnpcsummon_multiplier += 20 }
			if ( cnt == CHARA_BIT_METAL ) { locvar_calccostcnpcsummon_multiplier += 30 }
			if ( cnt == CHARA_BIT_RES_ELEMENTAL ) { locvar_calccostcnpcsummon_multiplier += 30 }
			if ( cnt == CHARA_BIT_ARMOUR ) { locvar_calccostcnpcsummon_multiplier += 5 }
			if ( cnt == CHARA_BIT_QUICK_SHOOTING ) { locvar_calccostcnpcsummon_multiplier += 3 }
			if ( cnt == CHARA_BIT_SPLIT_KEEP_EFFECT ) { locvar_calccostcnpcsummon_multiplier += 15 }
			if ( cnt == CHARA_BIT_SPLIT_NO_EFFECT ) { locvar_calccostcnpcsummon_multiplier += 8 }
		}
	loop
	if ( gdata(GDATA_FLAG_MAIN) >= 180 ) { locvar_calccostcnpcsummon_multiplier = limit(locvar_calccostcnpcsummon_multiplier * 2 / 3, 1, 300) }
	if ( gdata(GDATA_FLAG_MAIN) >= 340 ) { locvar_calccostcnpcsummon_multiplier = limit(locvar_calccostcnpcsummon_multiplier * 2 / 3, 1, 300) }
	if ( gdata(GDATA_FLAG_MAIN) >= 720 ) { locvar_calccostcnpcsummon_multiplier = limit(locvar_calccostcnpcsummon_multiplier * 2 / 3, 1, 300) }
	return limit(limit(locvar_calccostcnpcsummon_cost, 1, 2000) * limit(locvar_calccostcnpcsummon_multiplier, 1, 300) / 10, 1, 100000)

*com_knowCNPC
	listmaxbk = listmax
	pagesizebk = pagesize
	pagemaxbk = pagemax
	pagebk = page
	cs_bk2 = cs
	listmax = 0
	pagesize = 13
	page = 0
	cc = tc
	snd SOUNDLIST_POP2
	knowCNPC = p

	ww = 380
	wh = 400
	wx = (windoww - ww) / 2 + inf_screenx
	wy = winposy(wh)
	windowanime wx, wy, ww, wh, 40, 7
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_mirror.bmp", 1
	gsel 0
	*com_knowCNPC_loop
	redraw 0
	s = lang("‚±‚±‚л‚М’†", "Image in the Crystal"), lang("Shift,Esc [–Я‚й]  Њ€’и [ЏўЉ«]  ", "Shift,Esc [Back]  Enter [Summon] ")
	display_window (windoww - 380) / 2 + inf_screenx, winposy(wh) - 12, ww, wh
	display_topic lang("ЌЂ–Ъ", "CNPC Summary"), wx + 34, wy + 36
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0

	if (page == 0) {
		window2 wx + 234, wy + 90, 88, 120, 1, 1
		i = SPRITE_SHEET_COLS_CHARA * SPRITE_SHEET_ROWS_CHARA + knowCNPC
		chara_preparepic SPRITE_SHEET_COLS_CHARA * SPRITE_SHEET_ROWS_CHARA + knowCNPC, 0
		pos wx + 276, wy + 149
		gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
		grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
		gmode 2
	}

	buff = ""
	notesel buff
	buff += "" + userdatan(1, knowCNPC) + "(" + userdatan(0, knowCNPC) + ")\n"
	buff += "Level " + userdata(2, knowCNPC) + "\n"
	if ( userdata(3, knowCNPC) == 0 ) { buff += "Male " }
	if ( userdata(3, knowCNPC) == 1 ) { buff += "Female " }
	buff += userdatan(2, knowCNPC) + "\n"
	if ( userdata(5, knowCNPC) <= 1 ) { buff += "Bad " }
	if ( userdata(5, knowCNPC) == 2 ) { buff += "Common " }
	if ( userdata(5, knowCNPC) == 3 ) { buff += "Skilled " }
	if ( userdata(5, knowCNPC) == 4 ) { buff += "Professional " }
	if ( userdata(5, knowCNPC) == 5 ) { buff += "Legendary " }
	if ( userdata(5, knowCNPC) == 6 ) { buff += "Well-Known " }
	buff += userdatan(3, knowCNPC) + "\n"

	buff += "Likes to: " 
	if ( userdata(7, knowCNPC) == 0 ) { buff += "Do Nothing.\n" }
	if ( userdata(7, knowCNPC) == 1 ) { buff += "Walk Around.\n" }
	if ( userdata(7, knowCNPC) == 2 ) { buff += "Walk in Circles.\n" }
	if ( userdata(7, knowCNPC) == 3 ) { buff += "Do Nothing.\n" }
	if ( userdata(7, knowCNPC) == 4 ) { buff += "Stalk People.\n" }
	if ( userdata(7, knowCNPC) == 5 ) { buff += "Stalk Adventurers.\n" }
	if ( userdata(7, knowCNPC) == 6 ) { buff += "Sing.\n" }
	if ( userdata(7, knowCNPC) == 7 ) { buff += "Preach.\n" }
	if ( userdata(7, knowCNPC) == 8 ) { buff += "Dance.\n" }
	if ( userdata(7, knowCNPC) == 9 ) { buff += "Kill Snails.\n" }
	if ( userdata(7, knowCNPC) == 10 ) { buff += "\"It's a secret\".\n" }
	if ( userdata(7, knowCNPC) == 11 ) { buff += "Laze in Town.\n" }
	if ( userdata(7, knowCNPC) == 12 ) { buff += "Beg for Money.\n" }

	buff += "Prefered Distance: " + userdata(9, knowCNPC) + "\n"
	buff += "Move Willingness: " + userdata(8, knowCNPC) + "%\n"
	buff += "<title1>*Actions(" + (100 - unaiactsubfreq(knowCNPC)) + "%)<def>\n"
	repeat 5
		// buff += " (" + userdata(15+cnt, knowCNPC) + ")"
		if ( userdata(15+cnt, knowCNPC) == 0 ) { buff += "Do Nothing\n" }
		if ( userdata(15+cnt, knowCNPC) == (-1) ) { buff += "Melee Attack\n" }
		if ( userdata(15+cnt, knowCNPC) == (-2) ) { buff += "Ranged Attack\n" }
		if ( userdata(15+cnt, knowCNPC) == (-3) ) { buff += "Melee Attack\n" }
		if ( userdata(15+cnt, knowCNPC) == (-4) ) { buff += "Roam Around\n" }
		if ( userdata(15+cnt, knowCNPC) == (-9996) ) { buff += "Throw Salt\n" }
		if ( userdata(15+cnt, knowCNPC) <= (-9997) ) { buff += "Throw Potions\n" }
		if ( userdata(15+cnt, knowCNPC) >= STARTING_SKILL_SPELL ) {
			buff += skillname(userdata(15+cnt, knowCNPC)) + "\n"
		}
	loop
	buff += "<title1>*Subactions(" + (unaiactsubfreq(knowCNPC)) + "%)<def>\n"
	repeat 5
		// buff += "(" + userdata(20+cnt, knowCNPC) + ")"
		if ( userdata(20+cnt, knowCNPC) == 0 ) { buff += "Do Nothing\n" }
		if ( userdata(20+cnt, knowCNPC) == (-1) ) { buff += "Melee Attack\n" }
		if ( userdata(20+cnt, knowCNPC) == (-2) ) { buff += "Ranged Attack\n" }
		if ( userdata(20+cnt, knowCNPC) == (-3) ) { buff += "Melee Attack\n" }
		if ( userdata(20+cnt, knowCNPC) == (-4) ) { buff += "Roam Around\n" }
		if ( userdata(20+cnt, knowCNPC) == (-9996) ) { buff += "Throw Salt\n" }
		if ( userdata(20+cnt, knowCNPC) <= (-9997) ) { buff += "Throw Potions\n" }
		if ( userdata(20+cnt, knowCNPC) >= STARTING_SKILL_SPELL ) {
			buff += skillname(userdata(20+cnt, knowCNPC)) + "\n"
		}
	loop
	if ( userdata(10, knowCNPC) != 0 ) {
		buff += "<title1>*Emergency Action<def>\n"
		// buff += "(" + userdata(10, knowCNPC) + ")"
		if ( userdata(10, knowCNPC) == (-1) ) { buff += "Melee Attack\n" }
		if ( userdata(10, knowCNPC) == (-2) ) { buff += "Ranged Attack\n" }
		if ( userdata(10, knowCNPC) == (-3) ) { buff += "Melee Attack\n" }
		if ( userdata(10, knowCNPC) == (-4) ) { buff += "Roam Around\n" }
		if ( userdata(10, knowCNPC) == (-9996) ) { buff += "Throw Salt\n" }
		if ( userdata(10, knowCNPC) <= (-9997) ) { buff += "Throw Potions\n" }
		if ( userdata(10, knowCNPC) >= STARTING_SKILL_SPELL ) {
			buff += skillname(userdata(10, knowCNPC)) + "\n"
		}
	}
	csvstr2 unres, userdatan(5, knowCNPC)
	repeat
		if ( cnt > 15 | unres(cnt * 2) == "" ) {
			break
		}
		if ( cnt == 0 ) {
			buff += "<title1>*Resistance<def>\n"
		}
		unrespower = limit( int(unres(cnt * 2 + 1))  / 2 + 4, 0, 8 )
		unrestype = int(unres(cnt * 2))
		if ( unrestype < 50 | unrestype > 60 ) {
			continue
		}
		buff += _resist(unrespower) + " " + skilldesc(unrestype) + "\n"
	loop
	showtitle@NE = 1
	repeat 35
		HMMBITCHECK userdata(40 + cnt / 32, knowCNPC), cnt \ 32
		if ( stat ) {
			if ( showtitle@NE == 1 ) {
				buff += "<title1>*Quirks<def>\n"
				showtitle@NE = 0
			}
			if ( cnt == 5 ) { buff += "Can Float.\n" }
			if ( cnt == 6 ) { buff += "Invisible.\n" }
			if ( cnt == 7 ) { buff += "Keen Eyes.\n" }
			if ( cnt == 8 ) { buff += "Immune to Confuse.\n" }
			if ( cnt == 9 ) { buff += "Immune to Blind.\n" }
			if ( cnt == 10 ) { buff += "Immune to Fear.\n" }
			if ( cnt == 11 ) { buff += "Immune to Sleep.\n" }
			if ( cnt == 12 ) { buff += "Immune to Paralyze.\n" }
			if ( cnt == 13 ) { buff += "Immune to Poison.\n" }
			if ( cnt == 14 ) { buff += "Iron Stomach.\n" }
			if ( cnt == 15 ) { buff += "Hate Thieves.\n" }
			if ( cnt == 16 ) { buff += "Stealthy.\n" }
			if ( cnt == 17 ) { buff += "Loose Purse.\n" }
			if ( cnt == 18 ) { buff += "Goes Kamikaze.\n" }
			if ( cnt == 19 ) { buff += "Curses People.\n" }
			if ( cnt == 20 ) { buff += "Master Blaster.\n" }
			if ( cnt == 21 ) { buff += "Is a Defender.\n" }
			if ( cnt == 22 ) { buff += "Like Carrying Others.\n" }
			if ( cnt == 23 ) { buff += "Splits.\n" }
			if ( cnt == 24 ) { buff += "Immune to Curse.\n" }
			if ( cnt == 25 ) { buff += "Hate Carrying Others.\n" }
			if ( cnt == 26 ) { buff += "Blessed by Elements.\n" }
			if ( cnt == 27 ) { buff += "Splits Sometimes.\n" }
			if ( cnt == 28 ) { buff += "Made of Metal.\n" }
			if ( cnt == 29 ) { buff += "Immune to Bleeding.\n" }
			if ( cnt == 30 ) { buff += "Hate Walls.\n" }
			if ( cnt == 31 ) { buff += "Think traps are okay.\n" }
			if ( cnt == 32 ) { buff += "VERY ANGRY\n" }
			if ( cnt == 33 ) { buff += "Was not made of flesh.\n" }
			if ( cnt == 34 ) { buff += "Fastest " + userdatan(3, knowCNPC) + " in the West.\n" }
		}
	loop
	listmax = noteinfo(0)
	pagemax = (listmax / pagesize)
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		noteget s, p
		gmesx = HIGHDPI_X(wx + 40)
		gmesy = HIGHDPI_Y(wy + 66 + cnt * 19 + 2)
		gmesw = HIGHDPI_X(600)
		gmescol = 30, 30, 30
		gmestype = 0
		pos wx + 54, wy + 66 + cnt * 19 + 2
		gmes s
	loop
	
	redraw 1
*com_knowCNPC_pgchg
	redraw 0
	redraw 1
	await cfg_wait1
	key_check
	// page_change *com_knowCNPC_loop
	if ( key == key_next | key == key_pageup | key == key_east | key == key_south ) {
		page++
		if (page > pagemax) { page = 0 }
		goto *com_knowCNPC_loop
	}
	if ( key == key_prev | key == key_pagedown | key == key_west | key == key_north ) {
		page--
		if (page < 0) { page = pagemax }
		goto *com_knowCNPC_loop
	}
	if ( key == key_cancel | key == key_enter ) {
		pagesize = pagesizebk
		pagemax = pagemaxbk
		page = pagebk
		listmax = listmaxbk
		cs = cs_bk2
		p = knowCNPC
		if ( key == key_cancel ) {
			return -1
		}
		if ( key == key_enter ) {
			return 1
		}
	}
	goto *com_knowCNPC_loop
/********** CUSTOM NPC SUMMONING - ENDING **********/

*com_userNpc
	snd SOUNDLIST_CHARA
	gsel 4
	repeat 8
		pos cnt \ 4 * 180, cnt / 4 * 300
		picload exedir + "\\graphic\\g" + (cnt + 1) + ".bmp", 1
	loop
	gsel 0
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	dim user_npc_index, 240
	tg = 0
	if ( allyctrl == 0 ) {
		repeat usernpcmax
			if ( instr(userdatan(6, cnt), 0, "_tmp_") == (-1) ) {
				continue
			}
			setCom lang(userdatan(1, cnt) + "(" + userdatan(0, cnt) + ")", userdatan(0, cnt)), userdatan(6, cnt)
			user_npc_index(tg) = cnt
			tg++
		loop
	}
	txt lang("‚З‚МЋТ‚рЏўЉ«‚µ‚Ѕ‚ў‚ЖЉи‚¤‚©ЃH", "Which one do you wish to summon?")
	windowshadow = 1
*com_userNpc_loop_pgchk
	redraw 0
	page_check
*com_userNpc_loop
	redraw 0
	s = lang("ѓJѓXѓ^ѓЂNPC€к——", "Custom NPC"), lang("Њ€’и [ЏўЉ«]  ", "Enter [Summon] ") + strhint2 + strhint3
	display_window (windoww - 500) / 2 + inf_screenx, winposy(400), 500, 400
	x = ww / 5 * 3
	y = wh - 80
	gmode 4, 180, 300, 50
	pos wx + ww / 3 * 2, wy + wh / 2
	grotate 4, cmbg / 4 \ 4 * 180, cmbg / 4 / 4 \ 2 * 300, 0, x, y
	gmode 2
	display_topic lang("–ј‘O", "Name"), wx + 28, wy + 36
	display_topic lang("Level", "Level"), wx + 348, wy + 36
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini ww - 100, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = user_npc_index(list(0, p))
		s = "" + listn(0, p)
		pos wx + 380, wy + 66 + cnt * 19
		mes "" + userdata(2, i)
		cs_list s, wx + 85, wy + 66 + cnt * 19 - 1, 19
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			cs = cnt
			break
		}
	loop
	if ( p != (-1) ) {
		/********** CUSTOM NPC SUMMONING - BEGINNING **********/
		if ( TweakData(TWEAK_GAMEPLAY_CUSTOM_CNPC_SUMMONING, TWEAK_CATEGORY_GAMEPLAY) != 0 ) {
			pbk = p
			p = user_npc_index(p)
			gosub *com_knowCNPC
			if ( key == key_cancel ) {
				goto *com_userNpc_loop
			}
			p = pbk
		}
		/********** CUSTOM NPC SUMMONING - ENDING **********/
		listmax = p
		snd SOUNDLIST_PRAY1
		txt listn(0, listmax) + lang("‚НЃA‚ ‚И‚Ѕ‚МђўЉE‚ЙЏўЉ«‚і‚к‚ЅЃI", " has been summoned to your world!")
		file = "" + userfile
		gosub *unzip
		bcopy exedir + "user\\" + listn(1, listmax), exedir + "user\\" + listn(0, listmax) + ".npc"
		gosub *userNpc_update
		repeat MAX_CHARA_TOTAL
			if ( cdata(CDATA_ID, cnt) == CREATURE_ID_USER ) {
				getunid cnt
			}
		loop
		gosub *del_userTemp
		gosub *del_userNpc
		return 1
	}
	page_change *com_userNpc_loop_pgchk
	if ( key == key_cancel ) {
		return -1
	}
	goto *com_userNpc_loop

*com_book
	snd SOUNDLIST_BOOK1
	gsel 4
	pos 0, 0
	picload exedir + "graphic\\book.bmp", 1
	gsel 0
	notesel buff
	noteload exedir + "data\\book.txt"
	p = instr(buff, 0, "" + inv(INV_ITEM_BOOK_ID, ci) + "," + lang("JP", "EN"))
	if ( p == (-1) ) {
		return
	}
	buff = strmid(buff, p, instr(buff, p, "%END"))
	notedel 0
	listmax = 0
	page = 0
	pagesize = 40
	cs = 0
	cc = CHARA_PLAYER
	listmax = noteinfo(0)
	keyrange = 0
	key_list(0) = key_enter
	color 0, 0, 0
*com_book_loop
	redraw 0
	page_check
	wx = (windoww - 720) / 2 + inf_screenx
	wy = winposy(468)
	pos wx, wy
	gcopy 4, 0, 0, 736, 448
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		x = wx + 80 + cnt / 20 * 306
		y = wy + 45 + cnt \ 20 * 16
		noteget s, p
		if ( p == 0 ) {
			font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
		}
		if ( p == 1 ) {
			font lang(cfg_font1, cfg_font2), 10 + sizefix - en * 2, 0
		}
		if ( p > 2 ) {
			font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
		}
		pos x, y
		mes s
		if ( p \ 20 == 0 ) {
			font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
			pos x + 90, y + 330
			mes "- " + (p / 20 + 1) + " -"
		}
	loop
*com_book_loop_pgchg
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	page_change *com_book_loop, SOUNDLIST_CARD1
	if ( key == key_cancel | key == key_enter ) {
		gosub *screen_draw
		return
	}
	goto *com_book_loop_pgchg

*com_spellbook
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	cs = commark(1) \ 1000
	page = commark(1) / 1000
	curmenu = 0
	repeat 200
		if ( spell(cnt) > 0 ) {
			if ( spells(cnt) == 0 ) {
				list(0, listmax) = cnt + STARTING_SKILL_SPELL, sdataref(SKILL_DATAREF_USE, STARTING_SKILL_SPELL + cnt)
				listmax++
			}
		}
	loop
	gosub *sort_list
	redraw 0
	gsel BUFFER_INF
	pos 960, 96
	picload exedir + "graphic\\deco_spell.bmp", 1
	gsel BUFFER_SCREEN
	windowshadow = 1

*com_spellbook_loop_pgchk
	redraw 0
	cs_bk = -1
	pagemax = (listmax - 1) / pagesize
	if ( page < 0 ) {
		page = pagemax
	}
	else {
		if ( page > pagemax ) {
			page = 0
		}
	}
	drawmenu 1

*com_spellbook_loop
	redraw 0
	s = lang("–‚–@Џ‘‚МЌмђ¬", "Spellbook Production"), strhint2 + strhint3 + strhint7 + strhint8
	display_window (windoww - 720) / 2 + inf_screenx, winposy(438), 720, 438
	display_topic lang("–‚–@‚М–јЏМ", "Name"), wx + 28, wy + 36
	display_topic lang("ЏБ”пMP(ЅДЇё)Ѓ@LV/ђ¬ЊчЃ@(ђцЌЭ) ", "Cost(Stock) Lv/Chance"), wx + 190, wy + 36
	display_topic lang("Ќыђ”", "Number"), wx + 460, wy + 36
	pos wx + 46, wy - 16
	gcopy BUFFER_INF, 288 + 13 * 48, 48, 48, 48
	pos wx + ww - 78, wy
	gcopy BUFFER_INF, 960, 96, 72, 144
	pos wx + ww - 180, wy
	gcopy BUFFER_INF, 1032, 96, 72, 96
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 620, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)
		pos wx + 40, wy + 74 + cnt * 19
		gmode 2, inf_tiles, inf_tiles
		grotate BUFFER_ITEM, (sdataref(SKILL_DATAREF_USE, i) - 10) * inf_tiles, 672, 0, inf_tiles, inf_tiles
		s = ""
		cs_list skillname(i) + s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		s = "" + calcspellcostmp(i, cc) + "(" + spell(i - 400) + ")"
		pos wx + 296 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
		mes s
		satusuu = spell(i - 400) / 2000
		if ( i == SKILL_SPELL_RESTORE_BODY ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_RESTORE_SPIRIT ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_TELEPORT_OTHER ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_SUMMON_WILD ) {
			satusuu = -1
		}
		if ( i == 426 ) { // TODO
			satusuu = -1
		}
		if ( i == 427 ) { // TODO
			satusuu = -1
		}
		if ( i == SKILL_SPELL_MIST_OF_DARKNESS ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_RESURRECTION ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_METEOR ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_GRAVITY ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_SUMMON_SPIRIT ) {
			satusuu = -1
		}
		if ( i == SKILL_SPELL_MIST_OF_DAZZLING ) {
			satusuu = -1
		}
		if ( satusuu > 0 ) {
			s = "" + satusuu + lang("ЌыЌм‚к‚й ", "books can be produced ")
		}
		if ( satusuu == 0 ) {
			s = lang("ѓXѓgѓbѓN‚Є‘«‚и‚И‚ў ", "Not enough magic stock ")
		}
		if ( satusuu == (-1) ) {
			s = lang("–‚–@Џ‘‚Й•ПЉ·‚Е‚«‚И‚ў ", "Can't produce ")
		}
		s = strmid(s, 0, 40)
		pos wx + 305, wy + 66 + cnt * 19 + 2
		mes "" + sdata(i, cc) + "/" + calcspellfail(i, cc) + "% (" + sgrowth(i, cc) + "%)"
		pos wx + 420, wy + 66 + cnt * 19 + 2
		mes s
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	commark(1) = page * 1000 + cs
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		menucycle = 0
		if ( spell(p - STARTING_SKILL_SPELL) < 2000 ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_RESTORE_BODY ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_RESTORE_SPIRIT ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_TELEPORT_OTHER ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_SUMMON_WILD ) {
			efid = -1
			return
		}
		if ( p == 426 ) { // TODO
			efid = -1
			return
		}
		if ( p == 427 ) { // TODO
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_MIST_OF_DARKNESS ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_RESURRECTION ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_METEOR ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_GRAVITY ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_SUMMON_SPIRIT ) {
			efid = -1
			return
		}
		if ( p == SKILL_SPELL_MIST_OF_DAZZLING ) {
			efid = -1
			return
		}
		efid = p
		snd SOUNDLIST_ENC
		return
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 2 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 2
				}
			}
			key = ""
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					snd SOUNDLIST_SPELL
					goto *com_spell
				}
				if ( curmenu == 1 ) {
					snd SOUNDLIST_SKILL
					goto *com_applySkill
				}
				if ( curmenu == 2 ) {
					snd SOUNDLIST_SKILL
					goto *com_applyWideSkill
				}
			}
		}
	}
	if ( key == key_pageup ) {
		if ( pagemax != 0 ) {
			snd SOUNDLIST_POP1
			page++
			goto *com_spellbook_loop_pgchk
		}
	}
	if ( key == key_pagedown ) {
		if ( pagemax != 0 ) {
			snd SOUNDLIST_POP1
			page--
			goto *com_spellbook_loop_pgchk
		}
	}
	if ( key == key_cancel ) {
		gosub *screen_draw
		efid = -1
		return
	}
	goto *com_spellbook_loop

*com_spellcast
	tc = cc
	gosub *cast
	if ( stat == 0 ) {
		goto *pc_turn
	}
	goto *turn_end

*com_spell
	listmax = 0
	page = 0
	pagesize = 16
	cs = 0
	cc = CHARA_PLAYER
	cs_bk = -1
	cs = commark(1) \ 1000
	page = commark(1) / 1000
	curmenu = 0
	repeat 200
		if ( spell(cnt) > 0 ) {
			if ( spells(cnt) == 0 ) {
				list(0, listmax) = cnt + STARTING_SKILL_SPELL, sdataref(SKILL_DATAREF_USE, STARTING_SKILL_SPELL + cnt)
				listmax++
			}
		}
	loop
	gosub *sort_list
	redraw 0
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_spell.bmp", 1
	gsel 0
	windowshadow = 1
*com_spell_loop_pgchk
	redraw 0
	page_check
	drawmenu 1
*com_spell_loop
	redraw 0
	s = lang("–‚–@‚М‰rЏҐ", "Spell"), strhint2 + strhint3 + strhint7 + strhint8
	display_window (windoww - 720) / 2 + inf_screenx, winposy(438), 720, 438
	display_topic lang("–‚–@‚М–јЏМ", "Name"), wx + 28, wy + 36
	display_topic lang("ЏБ”пMP(ЅДЇё)Ѓ@LV/ђ¬ЊчЃ@(ђцЌЭ) ", "Cost(Stock) Lv/Chance"), wx + 190, wy + 36
	display_topic lang("Њш‰К", "Effect"), wx + 460, wy + 36
	pos wx + 46, wy - 16
	gcopy 3, 288 + 13 * 48, 48, 48, 48
	pos wx + ww - 78, wy
	gcopy 3, 960, 96, 72, 144
	pos wx + ww - 180, wy
	gcopy 3, 1032, 96, 72, 96
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 66 + cnt * 19
			gfini 620, 18
			gfdec2 12, 14, 16
		}
		display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		i = list(0, p)
		pos wx + 40, wy + 74 + cnt * 19
		gmode 2, inf_tiles, inf_tiles
		grotate 1, (sdataref(SKILL_DATAREF_USE, i) - 10) * inf_tiles, 672, 0, inf_tiles, inf_tiles
		if ( cdata(CDATA_ADVANCED_CASTING_ENABLED, CHARA_PLAYER) == 1 ) {
			pos wx + 18, wy + 75 + cnt * 19
			gmode 2, inf_tiles, inf_tiles
			grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
		}
		s = ""
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == list(0, p) ) {
				s = "{" + cnt + "}"
			}
		loop
		cs_list skillname(i) + s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		s = "" + calcspellcostmp(i, cc) + "(" + spell(i - STARTING_SKILL_SPELL) + ")"

		/********** ANNA CUSTOM - BEGINNING **********/

		repeat 15
			if ( gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) == cc * 10000 + i ) {
				s = "*" + s
			}
		loop

		/********** ANNA CUSTOM - ENDING **********/

		pos wx + 296 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
		mes s
		gosub *skill_desc
		s = strmid(s, 0, 40)
		pos wx + 305, wy + 66 + cnt * 19 + 2
		mes "" + sdata(i, cc) + "/" + calcspellfail(i, cc) + "% (" + sgrowth(i, cc) + "%)"
		pos wx + 420, wy + 66 + cnt * 19 + 2
		mes s
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	commark(1) = page * 1000 + cs
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		menucycle = 0
		efid = p
		goto *com_spellcast
	}
	if ( key == "sc" ) {
		snd SOUNDLIST_OK1
		p = list(0, pagesize * page + cs)
		if ( gdata(STARTING_GDATA_SHORTCUT + sc) == p ) {
			gdata(STARTING_GDATA_SHORTCUT + sc) = 0
			goto *com_spell_loop_pgchk
		}
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == p ) {
				gdata(STARTING_GDATA_SHORTCUT + cnt) = 0
			}
		loop
		gdata(STARTING_GDATA_SHORTCUT + sc) = p
		txt_shortcut
		display_msg inf_screeny + inf_tiles
		goto *com_spell_loop_pgchk
	}
	if ( key == key_mode2 ) {
		p = list(0, pagesize * page + cs)
		snd SOUNDLIST_LOCKED1
		if ( p <= 0 ) {
			goto *com_spell
		}
		txtef COLOR_YELLOW
		txt lang("Ѓy”с•\Ћ¦ЃF" + skillname(p) + "Ѓz", "[Hidden: " + skillname(p) + "]")
		spells(p - STARTING_SKILL_SPELL) = 2
		goto *com_spell
	}
	if ( key == key_msglog ) {
		snd SOUNDLIST_CHEST1
		txtef COLOR_GREEN
		txt lang("Ѓy–‚–@ЃE‘S•\Ћ¦Ѓz", "[Showing all spells]")
		repeat MAX_SPELL - STARTING_SKILL_SPELL
			if ( spells(cnt) == 2 ) {
				spells(cnt) = 0
			}
		loop
		goto *com_spell
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 2 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 2
				}
			}
			key = ""
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					snd SOUNDLIST_SPELL
					goto *com_spell
				}
				if ( curmenu == 1 ) {
					snd SOUNDLIST_SKILL
					goto *com_applySkill
				}
				if ( curmenu == 2 ) {
					snd SOUNDLIST_SKILL
					goto *com_applyWideSkill
				}
			}
		}
	}
	page_change *com_spell_loop_pgchk
	if ( key == key_cancel ) {
		gosub *screen_draw
		goto *pc_turn
	}
	goto *com_spell_loop

*skill_desc
	s = ""
	if ( sdataref(SKILL_DATAREF_TYPE, i) / EXT_SDATAREF == 1 ) {
		p = sdataref(SKILL_DATAREF_TYPE, i) \ EXT_SDATAREF
		calcbuff -2, p, calcspellpower(i, cc)
		s = "" + dur + lang("А°Э ", "t ") + buffdesc
		return
	}
	calcskill i, cc, calcspellpower(i, cc), calcspellpower(i, cc)
	if ( cc == CHARA_PLAYER ) {
		if ( trait(TRAIT_GOD_ITZPALT) != 0 ) {
			if ( ele == SKILL_RES_FIRE | ele == SKILL_RES_COLD | ele == SKILL_RES_LIGHTNING ) {
				dice2 = dice2 * 125 / 100
			}
		}
	}
	if ( stat == 1 ) {
		if ( dice1 != 0 ) {
			s += "" + dice1 + "d" + dice2
			if ( bonus != 0 ) {
				if ( bonus > 0 ) {
					s += "+" + bonus
				}
				else {
					s += bonus
				}
			}
		}
		else {
			if ( i == SKILL_SPELL_RESURRECTION ) {
				s += "" + limit(bonus, 1, 100) + "%"
			}
			else {
				s += lang("КЯЬ°", "Power:") + bonus
			}
		}
		s += " "
	}
	s += skilldesc(i)
	return

*trainer_skill
	dbmax = 0
	dblist(0, dbmax) = SKILL_NORMAL_DETECTION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_EVASION
	dbmax++
	if ( gdata(GDATA_AREA) == AREA_YOWYN ) {
		dblist(0, dbmax) = SKILL_NORMAL_HEALING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SENSE_QUALITY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_COOKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_CARPENTRY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TAILORING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_GARDENING
		dbmax++
		dblist(0, dbmax) = SKILL_ACTIVE_RIDING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TWO_HAND
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_WEIGHT_LIFTING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_VERNIS ) {
		dblist(0, dbmax) = SKILL_NORMAL_ALCHEMY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_HEALING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_COOKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MINING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TRAVELING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_FISHING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LOCK_PICKING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_PALMIA ) {
		dblist(0, dbmax) = SKILL_NORMAL_GENE_ENGINEER
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LITERACY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_ANATOMY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_JEWELER
		dbmax++
		dblist(0, dbmax) = SKILL_ACTIVE_RIDING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_NEGOTIATION
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_INVESTING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_CASTING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_ALCHEMY
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_NOYEL ) {
		dblist(0, dbmax) = SKILL_NORMAL_FAITH
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LITERACY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SENSE_QUALITY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_COOKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TRAVELING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MEDITATION
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_WEIGHT_LIFTING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_LUMIEST ) {
		if ( gdata(GDATA_LEVEL) == 1 ) {
			dblist(0, dbmax) = SKILL_NORMAL_CASTING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_HEALING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_LITERACY
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_FISHING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_LIGHT_ARMOR
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_INVESTING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_TWO_HAND
			dbmax++
		}
		if ( gdata(GDATA_LEVEL) == 3 ) {
			dblist(0, dbmax) = SKILL_NORMAL_CASTING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MEMORIZATION
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MEDITATION
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MAGIC_CAPACITY
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_ALCHEMY
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_CONTROL_MAGIC
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_LIGHT_ARMOR
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_GREATER_EVASION
			dbmax++
		}
	}
	if ( gdata(GDATA_AREA) == AREA_DERPHY ) {
		if ( gdata(GDATA_LEVEL) == 1 ) {
			dblist(0, dbmax) = SKILL_NORMAL_LOCK_PICKING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_STEALTH
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MEDIUM_ARMOR
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_LIGHT_ARMOR
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_CARPENTRY
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MINING
			dbmax++
		}
		if ( gdata(GDATA_LEVEL) == 3 ) {
			dblist(0, dbmax) = SKILL_ACTIVE_PICKPOCKET
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_DISARM_TRAP
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_LOCK_PICKING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_STEALTH
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MARKSMAN
			dbmax++
		}
	}
	if ( gdata(GDATA_AREA) == AREA_PORT_KAPUL ) {
		if ( gdata(GDATA_LEVEL) == 1 ) {
			dblist(0, dbmax) = SKILL_NORMAL_NEGOTIATION
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_INVESTING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_FISHING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_GENE_ENGINEER
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_SWIMMING
			dbmax++
		}
		if ( gdata(GDATA_LEVEL) == 3 ) {
			dblist(0, dbmax) = SKILL_NORMAL_WEIGHT_LIFTING
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_DUAL_WIELD
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_TWO_HAND
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_HEAVY_ARMOR
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_TACTICS
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_MARKSMAN
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_SHIELD
			dbmax++
			dblist(0, dbmax) = SKILL_NORMAL_EYE_OF_MIND
			dbmax++
		}
	}
	if ( gdata(GDATA_AREA) == AREA_EIREL ) {
		dblist(0, dbmax) = SKILL_NORMAL_HEALING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SENSE_QUALITY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_COOKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_CARPENTRY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TAILORING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_GARDENING
		dbmax++
		dblist(0, dbmax) = SKILL_ACTIVE_RIDING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TWO_HAND
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_WEIGHT_LIFTING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_MELKAWN ) {
		dblist(0, dbmax) = SKILL_NORMAL_GENE_ENGINEER
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LITERACY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_ANATOMY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_JEWELER
		dbmax++
		dblist(0, dbmax) = SKILL_ACTIVE_RIDING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_NEGOTIATION
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_INVESTING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_CASTING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_ALCHEMY
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_KURUALM ) {
		dblist(0, dbmax) = SKILL_NORMAL_FAITH
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LITERACY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SENSE_QUALITY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_COOKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_TRAVELING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MEDITATION
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SWIMMING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_VALM ) {
		dblist(0, dbmax) = SKILL_NORMAL_LOCK_PICKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_STEALTH
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MEDIUM_ARMOR
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LIGHT_ARMOR
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_CARPENTRY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SWIMMING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_MELUGAS ) {
		dblist(0, dbmax) = SKILL_NORMAL_NEGOTIATION
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_INVESTING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_FISHING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_GENE_ENGINEER
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_SWIMMING
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_ARCBELC ) {
		dblist(0, dbmax) = SKILL_NORMAL_LOCK_PICKING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_STEALTH
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MEDIUM_ARMOR
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_LIGHT_ARMOR
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_CARPENTRY
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
		dbmax++
	}
	if ( gdata(GDATA_AREA) == AREA_LUDUS ) {
		dblist(0, dbmax) = SKILL_NORMAL_NEGOTIATION
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_INVESTING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_FISHING
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
		dbmax++
		dblist(0, dbmax) = SKILL_NORMAL_GENE_ENGINEER
		dbmax++
	}
	repeat dbmax
		p = dblist(0, cnt)
		f = 0
		if ( sorg(p, cc) == 0 ) {
			if ( sdataref(SKILL_DATAREF_USE, p) != 0 ) {
				f = 1
			}
		}
		if ( f ) {
			list(0, listmax) = p, sdataref(SKILL_DATAREF_USE, p) + 21000
			listmax++
		}
	loop
	return

*notable_skill
	dbmax = 0
	dblist(0, dbmax) = SKILL_NORMAL_LITERACY
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_GENE_ENGINEER
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_TACTICS
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_WEIGHT_LIFTING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_HEALING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MEDITATION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_NEGOTIATION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_STEALTH
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_LOCK_PICKING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_DETECTION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_INVESTING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_ANATOMY
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_SENSE_QUALITY
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MINING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MAGIC_CAPACITY
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MEMORIZATION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_DUAL_WIELD
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_TWO_HAND
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_SHIELD
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_HEAVY_ARMOR
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MEDIUM_ARMOR
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_LIGHT_ARMOR
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_CASTING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_EVASION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MAGIC_DEVICE
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_DISARM_TRAP
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_CARPENTRY
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_TAILORING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_ALCHEMY
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_JEWELER
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_GARDENING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_FAITH
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_TRAVELING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_PERFORMER
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_COOKING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_FISHING
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_EYE_OF_MIND
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_GREATER_EVASION
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_CONTROL_MAGIC
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_MARKSMAN
	dbmax++
	dblist(0, dbmax) = SKILL_NORMAL_SWIMMING
	dbmax++
	dblist(0, dbmax) = SKILL_ACTIVE_PICKPOCKET
	dbmax++
	dblist(0, dbmax) = SKILL_ACTIVE_RIDING
	dbmax++
	repeat dbmax
		p = dblist(0, cnt)
		list(0, listmax) = p, sdataref(SKILL_DATAREF_USE, p) + 21000
		listmax++
	loop
	return

*setHistory1
	if ( ohanasi1 == 0 ) {
		s = lang("“аЏЏ", "Секрет ")
	}
	if ( ohanasi1 == 1 ) {
		s = lang("ђ¶‚Ь‚к‚В‚«“VЉUЊЗ“Ж‚ѕ‚Б‚ЅЃB", "У вас не было семьи. ")
	}
	if ( ohanasi1 == 2 ) {
		s = lang("“Б‚Й•sЋ©—R‚И‚­€з‚Б‚ЅЃB", "Вы росли, не испытывая каких-либо неудобств. ")
	}
	if ( ohanasi1 == 3 ) {
		s = lang("ЋАЊ±‚ЕђlЌH“I‚Йђ¶‚ЭЏo‚і‚к‚ЅЃB", "Вы были искусственно созданы в результате эксперимента. ")
	}
	if ( ohanasi1 == 4 ) {
		s = lang("Ћ{ђЭ‚ЕЋАЊ±‘М‚Й‚і‚к‚Д‚ў‚ЅЃB", "Вас использовали для экспериментов над людьми. ")
	}
	if ( ohanasi1 == 5 ) {
		s = lang("‹L‰Ї‘rЋё‚ЕђМ‚М‚±‚Ж‚рЋv‚ўЏo‚№‚И‚ўЃB", "У вас амнезия. ")
	}
	if ( ohanasi1 == 6 ) {
		s = lang("‘Ѓ‚­‚Й—јђe‚ЖЋЂ•К‚µ‚ЅЃB", "Вы рано потеряли родителей. ")
	}
	if ( ohanasi1 == 7 ) {
		s = lang("•Ѕ‰ё‚И“ъЃX‚р‰Я‚І‚µ‚Д‚ў‚ЅЃB", "Вы провели свои дни в спокойствии. ")
	}
	if ( ohanasi1 == 8 ) {
		s = lang("Ћq‹џ‚МЌ ‚©‚з‹s‘Т‚і‚к‚Д‚ў‚ЅЃB", "Вы подвергались насилию с детства. ")
	}
	if ( ohanasi1 == 9 ) {
		s = lang("Ћ©•Є‚МЏoђ¶‚р‰B‚µ‚Д‚ў‚йЃB", "Ваше рождение держалось в секрете. ")
	}
	if ( ohanasi1 == 10 ) {
		s = lang("’‰ЋА‚ИЋg—pђl‚ѕ‚Б‚ЅЃB", "Вы были верным слугой.")
	}
	if ( ohanasi1 == 11 ) {
		s = lang("€ЩЋн‘°‚Й€з‚Д‚з‚к‚ЅЃB", "Вы были воспитаны представителями другой расы. ")
	}
	if ( ohanasi1 == 12 ) {
		s = lang("“z—к‚ѕ‚Б‚Ѕ‰Я‹Ћ‚рЋќ‚ВЃB", "Вы были рабом. ")
	}
	if ( ohanasi1 == 13 ) {
		s = lang("•n‚µ‚ў‚И‚Є‚з‚аз—‚µ‚­€з‚Б‚ЅЃB", "Вы были бедны, но росли хорошо. ")
	}
	if ( ohanasi1 == 14 ) {
		s = lang("•Ѓ’К‚М‰Ж’л‚Е•Ѓ’К‚Й€з‚Б‚ЅЃB", "У вас была нормальная жизнь. ")
	}
	if ( ohanasi1 == 15 ) {
		s = lang("‰¤‘°‚М€к€х‚ѕ‚Б‚ЅЃB", "Вы были членом королевской семьи. ")
	}
	if ( ohanasi1 == 16 ) {
		s = lang("ЉF‚©‚з€¤‚і‚к‚Д€з‚Б‚ЅЃB", "Вас все любили. ")
	}
	if ( ohanasi1 == 17 ) {
		s = lang("’·‚ўЉФЃA•a‚ЕЏ°‚Й‰з‚№‚Д‚ў‚ЅЃB", "Вы долгое время были прикованы к постели болезнью. ")
	}
	if ( ohanasi1 == 18 ) {
		s = lang("‚н‚Ї‚ ‚Б‚Д‰i‚ў–°‚и‚Й‚В‚ў‚Д‚ў‚ЅЃB", "По какой-то причине вы долгое время спали. ")
	}
	if ( ohanasi1 == 19 ) {
		s = lang("ЋА‚Н–ў—€‚МђўЉE‚©‚з‚в‚Б‚Д‚«‚ЅЃB", "Вы на самом деле пришли из будущего. ")
	}
	if ( ohanasi1 == 20 ) {
		s = lang("’·‚ўЉФЃAЋъ‚н‚к‚Мђg‚ѕ‚Б‚ЅЃB", "Вы долгое время были заключенным. ")
	}
	if ( ohanasi1 == 21 ) {
		s = lang("‹Й€«ђl‚ѕ‚Б‚Ѕ‰Я‹Ћ‚рЋќ‚ВЃB", "Вы были преступником. ")
	}
	if ( ohanasi1 == 22 ) {
		s = lang("ђFЃX‚ ‚Б‚ДЋ©•Є‚МЊМ‹Ѕ‚р–Е‚Ъ‚µ‚ЅЃB", "По какой-то причине вы разрушили свой родной город. ")
	}
	if ( ohanasi1 == 23 ) {
		s = lang("ЊМ‹Ѕ‚рђн‘€‚ЕЋё‚Б‚ЅЃB", "Вы потеряли родной город во время войны. ")
	}
	if ( ohanasi1 == 24 ) {
		s = lang("’n•ы‚М—МЋе‚ѕ‚Б‚ЅЃB", "Вы были местным владыкой. ")
	}
	if ( ohanasi1 == 25 ) {
		s = lang("—Н‚М‚ ‚йђ_‘°‚ѕ‚Б‚ЅЃB", "Вы были могущественным богом. ")
	}
	if ( ohanasi1 == 26 ) {
		s = lang("Љх‚ЭЋq‚Ж‚і‚кЋМ‚Д‚з‚к‚ЅЃB", "Вас ненавидели и бросили в детстве. ")
	}
	if ( ohanasi1 == 27 ) {
		s = lang("‘гЃX–`ЊЇЋТ‚М‰ЖЊnЃB", "Вы происходите из семьи искателей приключений. ")
	}
	if ( ohanasi1 == 28 ) {
		s = lang("—RЏЏђі‚µ‚ў‹RЋm‚М‰ЖЊnЃB", "Вы происходите из семьи благородных рыцарей. ")
	}
	if ( ohanasi1 == 29 ) {
		s = lang("Ќ‚–ј‚И–‚–@Ћg‚ў‚М‰ЖЊnЃB", "Вы происходите из семьи выдающихся магов. ")
	}
	if ( ohanasi1 == 30 ) {
		s = lang("‘Ї‚ЙЏE‚н‚к€з‚Д‚з‚к‚ЅЃB", "Вас нашли и воспитали воры. ")
	}
	if ( ohanasi1 == 31 ) {
		s = lang("—Ћ‚ї‚Ф‚к‚Ѕ•ђЋm‚М‰ЖЊnЃB", "Ваша семья была обедневшими воинами. ")
	}
	if ( ohanasi1 == 32 ) {
		s = lang("ђХЊp‚¬‚Ж‚µ‚ДЊµ‚µ‚­€з‚Д‚з‚к‚ЅЃB", "Вы были воспитаны как наследник своей семьи. ")
	}
	return s

*setHistory2
	if ( ohanasi2 == 1 ) {
		s = lang("Ћ©•Є‚рЊ©‚В‚Я’ј‚·‚Ѕ‚Я—·‚ЙЏo‚йЃB", "Вы отправились в приключение, чтобы найти себя. ")
	}
	if ( ohanasi2 == 2 ) {
		s = lang("‚И‚с‚Ж‚И‚­Њy‚ў‹CЋќ‚ї‚Е—·‚ЙЏo‚йЃB", "Вы отправились в беззаботное приключение. ")
	}
	if ( ohanasi2 == 3 ) {
		s = lang("‘еЋ–‚И–с‘©‚р‰К‚Ѕ‚·‚Ѕ‚Я–`ЊЇ‚ЙЏo‚йЃB", "Вы отправились в приключение, чтобы выполнить важное обещание. ")
	}
	if ( ohanasi2 == 4 ) {
		s = lang("ЉВ‹«‚Є‹C‚Й“ь‚з‚ё–`ЊЇЋТ‚Й‚И‚йЃB", "Вы отправились в приключение, чтобы улучшить свое положение. ")
	}
	if ( ohanasi2 == 5 ) {
		s = lang("ЋhЊѓ‚р‹Ѓ‚Я‚Д–`ЊЇ‚ЙЏo‚йЃB", "Вы отправились в приключение ради азарта. ")
	}
	if ( ohanasi2 == 6 ) {
		s = lang("Ќs•ы•s–ѕЋТ‚р’T‚µ‚Д—·‚ЙЏo‚йЃB", "Вы отправились в приключение, чтобы найти пропавшего человека. ")
	}
	if ( ohanasi2 == 7 ) {
		s = lang("ѓЌѓ}ѓ“‚р‹Ѓ‚Я‚Д–`ЊЇ‚ЙЏo‚йЃB", "Вы отправились в приключение, чтобы найти любовь. ")
	}
	if ( ohanasi2 == 8 ) {
		s = lang("ђ¶Љ€‚Є‹к‚µ‚­‚И‚иЏo‰Т‚¬‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, чтобы найти лучшую работу. ")
	}
	if ( ohanasi2 == 9 ) {
		s = lang("‹­‚­‚И‚й‚Ѕ‚ЯЏCЌs‚М—·‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, чтобы стать сильнее. ")
	}
	if ( ohanasi2 == 10 ) {
		s = lang("–Ѕ—Я‚і‚к‚ДЏ”Ќ‘‚рЏ„‚й‚±‚Ж‚Й‚И‚йЃB", "Вы отправились в приключение, чтобы путешествовать по миру. ")
	}
	if ( ohanasi2 == 11 ) {
		s = lang("Ћё—ц‚р–Y‚к‚й‚Ѕ‚Я—·‚ЙЏo‚йЃB", "Вы отправились в приключение, чтобы отвлечься от разбитого сердца. ")
	}
	if ( ohanasi2 == 12 ) {
		s = lang("ђўЉE•Ѕa‚М‚Ѕ‚Я—·‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, чтобы работать на благо мира во всем мире. ")
	}
	if ( ohanasi2 == 13 ) {
		s = lang("ђўЉEђЄ•ћ‚М‚Ѕ‚Я—·‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, чтобы добиться мирового господства. ")
	}
	if ( ohanasi2 == 14 ) {
		s = lang("‰^–Ѕ‚Й“±‚©‚к‚Д–`ЊЇ‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, потому что это была ваша судьба. ")
	}
	if ( ohanasi2 == 15 ) {
		s = lang("–Ѕ‚р‘_‚н‚к‚Д“¦–S‚·‚йЃB", "Вы отправились на поиски приключений, потому что боялись за свою жизнь. ")
	}
	if ( ohanasi2 == 16 ) {
		s = lang("ђ_‚МЊ[Ћ¦‚рЋу‚Ї‚Д—·‚ЙЏo‚йЃB", "Вы ушли в приключение, получив откровение от Бога. ")
	}
	if ( ohanasi2 == 17 ) {
		s = lang("ЌЯ‚р”Ж‚µ‚ДЊМ‹Ѕ‚р’З‚н‚к‚йЃB", "Вы ушли в приключение, став преступником. ")
	}
	if ( ohanasi2 == 18 ) {
		s = lang("–`ЊЇЋТ‚Й“І‚кЋ©•Є‚а–`ЊЇЋТ‚Й‚И‚йЃB", "Вы отправились на поиски приключений, потому что восхищались искателями приключений. ")
	}
	if ( ohanasi2 == 19 ) {
		s = lang("‚ ‚й“ъЃA‚±‚МђўЉE‚ЙЏўЉ«‚і‚к‚йЃB", "Однажды вас позвали в этот мир. ")
	}
	if ( ohanasi2 == 20 ) {
		s = lang("–Ч‚©‚й‚Ж•·‚ў‚Д–`ЊЇЋТ‚Й‚И‚йЃB", "Вы ушли в приключения, чтобы стать богатым. ")
	}
	if ( ohanasi2 == 21 ) {
		s = lang("‰A–d‚ЙЉЄ‚«Ќћ‚Ь‚к’З•ъ‚і‚к‚йЃB", "Вы отправились на поиски приключений из-за участия в заговоре. ")
	}
	if ( ohanasi2 == 22 ) {
		s = lang("‰Я‹Ћ‚©‚з“¦‚°‚й‚ж‚¤‚Й—·‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, чтобы убежать от своего прошлого. ")
	}
	if ( ohanasi2 == 23 ) {
		s = lang("‘еђШ‚И‚а‚М‚рЋз‚й‚Ѕ‚Я–`ЊЇ‚ЙЏo‚йЃB", "Вы отправились на поиски приключений, чтобы защитить что-то ценное. ")
	}
	if ( ohanasi2 == 24 ) {
		s = lang("–јђє‚р‹Ѓ‚Я‚Д–`ЊЇЋТ‚Й‚И‚йЃB", "Вы отправились на поиски приключений в поисках славы. ")
	}
	if ( ohanasi2 == 25 ) {
		s = lang("”Ж‚µ‚ЅЌЯ‚рЏћ‚¤—·‚ЙЏo‚йЃB", "Вы отправились на поиски приключений в поисках искупления. ")
	}
	if ( ohanasi2 == 26 ) {
		s = lang("ђQ‚Д‚ў‚йЉФ‚Й‘D‚ЙђП‚ЭЌћ‚Ь‚к‚йЃB", "Вас погрузили на судно Queen Sedona, пока вы спали. ")
	}
	if ( ohanasi2 == 27 ) {
		s = lang("‚Ь‚ѕЊ©‚К•у‚р’T‚µ‚Д–`ЊЇ‚ЙЏo‚йЃB", "Вы отправились на поиски неизведанных сокровищ. ")
	}
	if ( ohanasi2 == 28 ) {
		s = lang("ЊГ‘г•¶–ѕ‚М“д‚р’З‚ў‹Ѓ‚Я—·‚ЙЏo‚йЃB", "Вы отправились на поиски тайн древней цивилизации. ")
	}
	if ( ohanasi2 == 29 ) {
		s = lang("‚И‚є—·‚µ‚Д‚ў‚й‚М‚©‚аЋv‚ўЏo‚№‚И‚ўЃB", "Вы не можете вспомнить причину своего путешествия. ")
	}
	return s

*setHistory3
	if ( ohanasi3 == 1 ) {
		s = lang("‰·Њъ‚ЕЋњ”Яђ[‚ў‚ЄЃA", "Хотя вы нежны и милосердны, ")
	}
	if ( ohanasi3 == 2 ) {
		s = lang("“VЌЛ“I‚И“Є”]‚рЋќ‚В‚ЄЃA", "Хотя вы гений, ")
	}
	if ( ohanasi3 == 3 ) {
		s = lang("’N‚Й‚Е‚а—FЌD“I‚ѕ‚ЄЃA", "Хоть дружите со всеми, ")
	}
	if ( ohanasi3 == 4 ) {
		s = lang("—з‹Vђі‚µ‚­™{’ –К‚ѕ‚ЄЃA", "Хотя вы всегда вежливы, ")
	}
	if ( ohanasi3 == 5 ) {
		s = lang("—lЃX‚И’mЋЇ‚рЋќ‚Б‚Д‚ў‚й‚ЄЃA", "Хоть и много знаешь, ")
	}
	if ( ohanasi3 == 6 ) {
		s = lang("‰s‚ўЉПЋ@Љб‚рЋќ‚В‚ЄЃA", "Хотя у вас острый глаз, ")
	}
	if ( ohanasi3 == 7 ) {
		s = lang("—вђГ’ѕ’…‚Е”»’f—Н‚а‚ ‚й‚ЄЃA", "Хотя вы спокойны и собранны, ")
	}
	if ( ohanasi3 == 8 ) {
		s = lang("—z‹C‚ЕѓЂЃ[ѓhѓЃЃ[ѓJЃ[‚ѕ‚ЄЃA", "Хотя вы живете вечеринками, ")
	}
	if ( ohanasi3 == 9 ) {
		s = lang("Љо–{“I‚Й•Ѕ–}‚ѕ‚ЄЃA", "Хотя вы обычны, ")
	}
	if ( ohanasi3 == 10 ) {
		s = lang("‹­‚ўЊьЏгђS‚Ж’§ђнђS‚рЋќ‚В‚ЄЃA", "Хотя вы смелы и дерзки, ")
	}
	if ( ohanasi3 == 11 ) {
		s = lang("‚З‚с‚ИЋћ‚а‚ ‚«‚з‚Я‚И‚ў‚ЄЃA", "Хотя вы никогда не сдаетесь, ")
	}
	if ( ohanasi3 == 12 ) {
		s = lang("ђ^–К–Ъ‚ЕЋ©•Є‚ЙЊµ‚µ‚ў‚ЄЃA", "Хотя вы всегда строги к себе, ")
	}
	if ( ohanasi3 == 13 ) {
		s = lang("ЌЄ‚Є‚Ь‚Б‚·‚®‚Е”M‚ўђ«Љi‚ѕ‚ЄЃA", "Хотя вы страстны, ")
	}
	return s

*setHistory4
	if ( ohanasi4 == 1 ) {
		s = lang("”M’†‚·‚й‚ЖЋь‚и‚ЄЊ©‚¦‚И‚­‚И‚йЃB", "вы высасываете энтузиазм из окружающих. ")
	}
	if ( ohanasi4 == 2 ) {
		s = lang("ЌD€У‚Й‘О‚µ‚Д“ЭЉґЃB", "Вы нечувствительны к чужой доброй воле. ")
	}
	if ( ohanasi4 == 3 ) {
		s = lang("‚Р‚З‚ў–П‘z•И‚Є‚ ‚йЃB", "Вы часто попадаете в плен собственных иллюзий. ")
	}
	if ( ohanasi4 == 4 ) {
		s = lang("‘јђl‚рЊ©‰є‚µ‚Д‚ў‚йЃB", "Вы смотрите на других свысока. ")
	}
	if ( ohanasi4 == 5 ) {
		s = lang("”њ‘е‚ИЋШ‹а‚Є‚ ‚йЃB", "у вас огромные долги. ")
	}
	if ( ohanasi4 == 6 ) {
		s = lang("•ћ‚МѓZѓ“ѓX‚Є‚Ё‚©‚µ‚ўЃB", "у вас странное чувство моды. ")
	}
	if ( ohanasi4 == 7 ) {
		s = lang("‘МЏL‚р‹C‚Й‚µ‚Д‚ў‚йЃB", "запах вашего тела вызывает беспокойство. ")
	}
	if ( ohanasi4 == 8 ) {
		s = lang("ђn•Ё‚рЋќ‚В‚Жђ«Љi‚Є•П‚н‚йЃB", "Ваша личность меняется, когда вы берете в руки нож. ")
	}
	if ( ohanasi4 == 9 ) {
		s = lang("‘е‚«‚Иѓgѓ‰ѓEѓ}‚рЋќ‚ВЃB", "Вы пережили серьезную травму. ")
	}
	if ( ohanasi4 == 10 ) {
		s = lang("‘јђl‚рђM—p‚µ‚Д‚ў‚И‚ўЃB", "Вы не доверяете окружающим. ")
	}
	if ( ohanasi4 == 11 ) {
		s = lang("‹°‚л‚µ‚­”Ъ‹ьЃB", "Вы удивительно подневольны. ")
	}
	if ( ohanasi4 == 12 ) {
		s = lang("Љп•a‚рЉі‚Б‚Д‚ў‚йЃB", "Вы страдаете редким заболеванием. ")
	}
	if ( ohanasi4 == 13 ) {
		s = lang("‹»–Ў‚М‚И‚ў‘ЉЋи‚Й—в‚Ѕ‚ўЃB", "вы холодны к тем, кто вас не интересует. ")
	}
	if ( ohanasi4 == 14 ) {
		s = lang("‹а‘KЉґЉo‚Є‚Ё‚©‚µ‚ўЃB", "Вы принимаете неверные финансовые решения. ")
	}
	if ( ohanasi4 == 15 ) {
		s = lang("ђl•t‚«Ќ‡‚ў‚Є‹кЋиЃB", "Вы не умеете общаться. ")
	}
	if ( ohanasi4 == 16 ) {
		s = lang("‚·‚®‚Й’ІЋq‚ЙЏж‚йЃB", "Вы легко увлекаетесь. ")
	}
	if ( ohanasi4 == 17 ) {
		s = lang("–ЎЉo‚Є‚Ё‚©‚µ‚ўЃB", "У Вас странное чувство вкуса. ")
	}
	if ( ohanasi4 == 18 ) {
		s = lang("Ћ„ђ¶Љ€‚Н‚ѕ‚з‚µ‚И‚ўЃB", "Вы недисциплинированны в личной жизни. ")
	}
	if ( ohanasi4 == 19 ) {
		s = lang("ѓhѓW‚И‚Ж‚±‚л‚Є‚ ‚йЃB", "Вы совершаете много ошибок. ")
	}
	if ( ohanasi4 == 20 ) {
		s = lang("ЉМђS‚И‚Ж‚±‚л‚ЕЋё”s‚·‚йЃB", "Вы не справляетесь с основными задачами. ")
	}
	if ( ohanasi4 == 21 ) {
		s = lang("Ћ„ђ¶Љ€‚Н‚ѕ‚з‚µ‚И‚ўЃB", "Вы недисциплинированны в личной жизни. ")
	}
	if ( ohanasi4 == 22 ) {
		s = lang("Ћр•И‚Є€«‚ўЃB", "Вы ужасно ведете себя, когда пьяны. ")
	}
	if ( ohanasi4 == 23 ) {
		s = lang("Ћ©•Є‚М‚±‚Ж‚ЄЊ™‚ўЃB", "Вы ненавидите себя. ")
	}
	if ( ohanasi4 == 24 ) {
		s = lang("Ћ©•Є‚ЙЋ©ђM‚Є–і‚ўЃB", "Вы не уверены в себе. ")
	}
	if ( ohanasi4 == 25 ) {
		s = lang("ЋА‚Н‚Ж‚Д‚В‚а‚И‚ў•П‘ФЃB", "Вы на самом деле гигантский извращенец. ")
	}
	if ( ohanasi4 == 26 ) {
		s = lang("•ыЊь‰№’s‚Е‚·‚®–АЋq‚Й‚И‚йЃB", "У вас нет чувства направления. ")
	}
	if ( ohanasi4 == 27 ) {
		s = lang("‚Ё‹а‚Й–Ъ‚Є‚И‚ўЃB", "Вы влюблены в деньги. ")
	}
	if ( ohanasi4 == 28 ) {
		s = lang("Ћ©€УЋЇ‰ЯЏиЃB", "Вы стесняетесь себя. ")
	}
	if ( ohanasi4 == 29 ) {
		s = lang("ѓMѓѓѓOѓZѓ“ѓX‚ЄЉF–іЃB", "Ваши шутки ужасны. ")
	}
	if ( ohanasi4 == 30 ) {
		s = lang("€У’n‰‚ў‚Ж‚±‚л‚Є‚ ‚йЃB", "Вы жадный. ")
	}
	if ( ohanasi4 == 31 ) {
		s = lang("ЉG‚Є‰у–Е“I‚Й‰єЋиЃB", "Вы не умеете рисовать. ")
	}
	if ( ohanasi4 == 32 ) {
		s = lang("ЉЁ€б‚ў‚ЄЊѓ‚µ‚ўЃB", "Вы склонны неправильно понимать людей. ")
	}
	if ( ohanasi4 == 33 ) {
		s = lang("‚л‚­‚И—Fђl‚Є‚ў‚И‚ўЃB", "У вас нет друзей. ")
	}
	if ( ohanasi4 == 34 ) {
		s = lang("ЉЁ€б‚ў‚ЄЊѓ‚µ‚ўЃB", "Вы склонны не понимать людей. ")
	}
	if ( ohanasi4 == 35 ) {
		s = lang("Ќl‚¦‚Д‚ў‚й‚±‚Ж‚ЄЉз‚ЙЏo‚в‚·‚ўЃB", "Ваши эмоции легко читаются. ")
	}
	if ( ohanasi4 == 36 ) {
		s = lang("Ћь€Н‚©‚з‚ж‚­Њл‰р‚і‚к‚йЃB", "Вы часто неправильно понимаете ситуации. ")
	}
	if ( ohanasi4 == 37 ) {
		s = lang("’Ћ‚Є‹кЋиЃB", "Вы не умеете обращаться с насекомыми. ")
	}
	if ( ohanasi4 == 38 ) {
		s = lang("‘¶ЌЭЉґ‚Є”–‚ўЃB", "Вы не умеете себя подать. ")
	}
	if ( ohanasi4 == 39 ) {
		s = lang("‹Й‚Я‚Дѓvѓ‰ѓCѓh‚ЄЌ‚‚ўЃB", "Вы очень горды. ")
	}
	if ( ohanasi4 == 40 ) {
		s = lang("‚ў‚©‚Є‚н‚µ‚ў‚±‚Ж‚Є‘еЌD‚«ЃB", "Вы любите сомнительные вещи. ")
	}
	if ( ohanasi4 == 41 ) {
		s = lang("•К‚МђlЉi‚р‰B‚µЋќ‚ВЃB", "у вас скрытая личность. ")
	}
	return s

*setHistory5
	if ( ohanasi5 == 1 ) {
		s = lang("Ћп–Ў‚Н‹@ЉB‚ў‚¶‚иЃB", "Вы любите возиться с машинами. ")
	}
	if ( ohanasi5 == 2 ) {
		s = lang("ЉД‹Ц‚ЄЋп–ЎЃB", "Вам нравится быть прикованным. ")
	}
	if ( ohanasi5 == 3 ) {
		s = lang("Ћп–Ў‚НѓXѓgЃ[ѓLѓ“ѓOЃB", "Вам нравится преследовать людей. ")
	}
	if ( ohanasi5 == 4 ) {
		s = lang("‹к’Й‚Йc‚ЮЉз‚рЊ©‚й‚М‚ЄЌD‚«ЃB", "Вам нравится видеть боль на лицах людей. ")
	}
	if ( ohanasi5 == 5 ) {
		s = lang("ѓKЃ[ѓfѓjѓ“ѓO‚ЄЋп–ЎЃB", "Вы любите садоводство. ")
	}
	if ( ohanasi5 == 6 ) {
		s = lang("Ћп–Ў‚Н–~ЌН‚ў‚¶‚иЃB", "Вы любите выращивать бонсай. ")
	}
	if ( ohanasi5 == 7 ) {
		s = lang("‚К‚ў‚®‚й‚Э‚ЄЌD‚«ЃB", "Вы любите чучела животных. ")
	}
	if ( ohanasi5 == 8 ) {
		s = lang("Ћ©ЏМѓTѓfѓBѓXѓgЃB", "Вы - самопровозглашенный садист. ")
	}
	if ( ohanasi5 == 9 ) {
		s = lang("‘nЌмЉ€“®‚Й–Ѕ‚р“q‚Ї‚йЃB", "Вы рискуете жизнью ради творчества. ")
	}
	if ( ohanasi5 == 10 ) {
		s = lang("Ћп–Ў‚Нѓnѓ“ѓeѓBѓ“ѓOЃB", "Вы любите охотиться. ")
	}
	if ( ohanasi5 == 11 ) {
		s = lang("€Щђ«‚М•ћ‚Й‹»–Ў‚Є‚ ‚йЃB", "Вы любите носить одежду противоположного пола. ")
	}
	if ( ohanasi5 == 12 ) {
		s = lang("Џ¬“®•Ё‘еЌD‚«ЃB", "Вы любите мелких животных. ")
	}
	if ( ohanasi5 == 13 ) {
		s = lang("•з‚Б‚Д‚ў‚йЋtЏ ‚Є‚ў‚йЃB", "Вы тоскуете по своему хозяину. ")
	}
	if ( ohanasi5 == 14 ) {
		s = lang("‘Oђў‚М‹L‰Ї‚Є‚ ‚йЃB", "У Вас есть воспоминания о прошлой жизни. ")
	}
	if ( ohanasi5 == 15 ) {
		s = lang("ђg‘М‚р“®‚©‚·‚М‚ЄЌD‚«ЃB", "Вы любите заниматься спортом. ")
	}
	if ( ohanasi5 == 16 ) {
		s = lang("ђg‘М‚Й“д‚М–дЏН‚рЋќ‚ВЃB", "На вашем теле есть таинственный герб. ")
	}
	if ( ohanasi5 == 17 ) {
		s = lang("•з‚Б‚Д‚ў‚йЋtЏ ‚Є‚ў‚йЃB", "Вы тоскуете по своему хозяину. ")
	}
	if ( ohanasi5 == 18 ) {
		s = lang("‚И‚Й‚©‚ЖЉЁ‚Є‰s‚ўЃB", "Вы обладаете острой интуицией. ")
	}
	if ( ohanasi5 == 19 ) {
		s = lang("‘јђl‚р”Ы’и‚·‚й‚±‚Ж‚Є‰хЉґЃB", "Вам нравится отказывать в удовольствии другим. ")
	}
	if ( ohanasi5 == 20 ) {
		s = lang("Ћп–Ў‚Н’‹ђQЃB", "Вы любите дремать. ")
	}
	if ( ohanasi5 == 21 ) {
		s = lang("ђ¶‚«‚й‚±‚Ж‚Ц‚МЋ·’…‚Є‹­‚ўЃB", "У Вас сильная привязанность к жизни. ")
	}
	if ( ohanasi5 == 22 ) {
		s = lang("Ћп–Ў‚Н“ЗЏ‘ЃB", "Вы любите читать. ")
	}
	if ( ohanasi5 == 23 ) {
		s = lang("–\—Н‚рђU‚й‚¤‚±‚Ж‚ЄЌD‚«ЃB", "Вам нравится применять насилие. ")
	}
	if ( ohanasi5 == 24 ) {
		s = lang("’N‚Й‚а’m‚з‚к‚Ѕ‚­‚И‚ў”й–§‚Є‚ ‚йЃB", "У Вас есть секрет, который Вы не можете раскрыть. ")
	}
	if ( ohanasi5 == 25 ) {
		s = lang("‰М‚ЄЏгЋи‚ўЃB", "Вы хорошо поете. ")
	}
	if ( ohanasi5 == 26 ) {
		s = lang("йx‚і‚к‚в‚·‚ўЃB", "Вы доверчивы. ")
	}
	if ( ohanasi5 == 27 ) {
		s = lang("Ћп–Ў‚Н’‹ђQЃB", "Вы любите дремать. ")
	}
	if ( ohanasi5 == 28 ) {
		s = lang("‰R‚р‚В‚­‚М‚Є‰єЋиЃB", "Вы плохо умеете лгать. ")
	}
	if ( ohanasi5 == 29 ) {
		s = lang("Ќ›‚к‚Б‚Ы‚ў‚Ж‚±‚л‚Є‚ ‚йЃB", "Вы легко влюбляетесь. ")
	}
	if ( ohanasi5 == 30 ) {
		s = lang("ЋdЋ–”MђSЃB", "Вы трудолюбивы. ")
	}
	if ( ohanasi5 == 31 ) {
		s = lang("‰К‚Ѕ‚№‚И‚©‚Б‚ЅЋg–Ѕ‚Є‚ ‚йЃB", "У Вас была миссия, которую Вы не выполнили. ")
	}
	if ( ohanasi5 == 32 ) {
		s = lang("’N‚©‚р‚Ё‚ї‚е‚­‚й‚М‚ЄЋп–ЎЃB", "Вам нравится смеяться над другими. ")
	}
	if ( ohanasi5 == 33 ) {
		s = lang("’нЋq‚Є‚ў‚йЃB", "У вас есть последователи. ")
	}
	if ( ohanasi5 == 34 ) {
		s = lang("€УЉO‚ЖЌЄ‚ЙЋќ‚В•ыЃB", "Вы затаили на кого-то сильную обиду. ")
	}
	if ( ohanasi5 == 35 ) {
		s = lang("— ђШ‚и‚р‰Ѕ‚ж‚и‹°‚к‚йЃB", "Вы больше всего на свете боитесь предательства. ")
	}
	if ( ohanasi5 == 36 ) {
		s = lang("ѓKѓ‰ѓNѓ^‚рЏW‚Я‚й‚М‚ЄЌD‚«ЃB", "Вы любите собирать хлам. ")
	}
	return s

*com_charainfo
	dbg_showallskill = 0
	item_find ITEM_ID_GLASSES_OF_YACATECT, 3, 1
	if ( stat != (-1) ) {
		if ( inv(INV_ITEM_NUM, stat) >= 1 ) {
			dbg_showallskill = 1
		}
	}
	pagesize = 16
	listmax = 0
	if ( csctrl != 4 & csctrl != 300 ) {
		cc = CHARA_PLAYER
	}
	csskill = -1
	cs_buff = 0
	curmenu = 0
	if ( com_charainfo_preserve_page == FALSE ) {
		page = 0
		cs = 0
		if ( csctrl == 2 | csctrl == 3 ) {
			page = 1
		}
		if ( csctrl == 300 ) {
			page = 1
		}
	}
	com_charainfo_preserve_page = FALSE
	if ( dbg_showallskill ) {
		if ( csctrl != 2 & csctrl != 3 & csctrl != 300 ) {
			list(0, listmax) = -1, 10000
			listn(0, listmax) = lang("Ѓџ ”\—Н", "Attributes")
			listmax++
			repeat MAX_SKILL_ATTR_BASIC + 1, STARTING_SKILL_ATTR
				if ( sdata(cnt, cc) != 0 ) {
					list(0, listmax) = cnt, sdataref(SKILL_DATAREF_USE, cnt) + 11000
					listmax++
				}
			loop
		}
	}
	list(0, listmax) = -1, 20000
	listn(0, listmax) = lang("Ѓџ ѓXѓLѓ‹‚Ж“БЋк”\—Н", "Skills")
	listmax++
	if ( csctrl == 300 ) {
		gosub *notable_skill
	}
	if ( csctrl == 3 ) {
		gosub *trainer_skill
	}
	else {
		repeat STARTING_SKILL_SPELL - STARTING_SKILL_NORMAL, STARTING_SKILL_NORMAL
			f = 0
			if ( sdata(cnt, cc) != 0 ) {
				f = 1
				if ( csctrl == 2 ) {
					if ( sorg(cnt, cc) == 0 ) {
						f = 0
					}
				}
			}
			if ( f ) {
				list(0, listmax) = cnt, sdataref(SKILL_DATAREF_USE, cnt) + 21000
				listmax++
			}
		loop
	}
	if ( csctrl != 300 ) {
		list(0, listmax) = -1, 30000
		listn(0, listmax) = lang("Ѓџ •ђЉн‚Мђк–е", "Weapon Proficiencies")
		listmax++
		repeat STARTING_SKILL_NORMAL - STARTING_SKILL_WEAPON, STARTING_SKILL_WEAPON
			f = 0
			if ( csctrl != 3 ) {
				if ( sdata(cnt, cc) != 0 ) {
					f = 1
				}
			}
			else {
				if ( sdata(cnt, cc) == 0 ) {
					if ( sdataref(SKILL_DATAREF_USE, cnt) != 0 ) {
						f = 1
					}
				}
			}
			if ( f ) {
				list(0, listmax) = cnt, sdataref(SKILL_DATAREF_USE, cnt) + 31000
				listmax++
			}
		loop
	}
	if ( csctrl != 2 & csctrl != 3 & csctrl != 300 ) {
		list(0, listmax) = -1, 40000
		listn(0, listmax) = lang("Ѓџ ‘Пђ«‚Ж’пЌR—Н", "Resistances")
		listmax++
		repeat STARTING_SKILL_WEAPON - STARTING_SKILL_RESIST, STARTING_SKILL_RESIST
			if ( sdata(cnt, cc) != 0 ) {
				list(0, listmax) = cnt, sdataref(SKILL_DATAREF_USE, cnt) + 41000
				listmax++
			}
		loop
	}
	if ( csctrl != 2 & csctrl != 3 & csctrl != 4 ) {
		list(0, listmax) = -1, 50000
		listn(0, listmax) = lang("Ѓџ ѓXѓyѓ‹", "Spells")
		listmax++
		repeat MAX_SPELL - STARTING_SKILL_SPELL, STARTING_SKILL_SPELL
			if ( sdata(cnt, cc) > 0 ) {
				list(0, listmax) = cnt, sdataref(SKILL_DATAREF_USE, cnt) + 51000
				listmax++
			}
		loop
	}
	gosub *sort_list
	gsel 7
	picload exedir + "graphic\\ie_sheet.bmp"
	gsel 0
	wx = (windoww - 700) / 2 + inf_screenx
	wy = winposy(400) - 10
	ww = 700
	wh = 400
	redraw 0
	s = lang("ѓLѓѓѓ‰ѓNѓ^Ѓ[ѓVЃ[ѓg", "Character Sheet")
	if ( csctrl == 2 ) {
		s = lang("”\—НЊP—ы", "Skill Training")
	}
	if ( csctrl == 3 ) {
		s = lang("”\—Н‚МЏK“ѕ", "Skill Learning")
	}
	if ( csctrl == 300 ) {
		s = lang("‘I‘рѓXѓLѓ‹", "Skill Select")
	}
	drawmenu 0
	if ( mode != MODELIST_CHARA_CREATION ) {
		snd SOUNDLIST_CHARA
	}
	windowanime wx, wy, ww, wh, 10, 4
	gsel 4
	buffer 4, FACE_SIZE_WIDTH, FACE_SIZE_HEIGHT
	if ( cdata(CDATA_PORTRAIT, cc) < 80 ) {
		picload exedir + "graphic\\face1.bmp", 1
	}
	else {
		picload exedir + "graphic\\face2.bmp", 1
	}
	if ( cdata(CDATA_PORTRAIT, cc) < 0 ) {
		s = exedir + "user\\graphic\\face" + abs(cdata(CDATA_PORTRAIT, cc) + 1) + ".bmp"
		exist s
		if ( cdata(CDATA_PORTRAIT, cc) != (-1) ) {
			if ( strsize != (-1) ) {
				pos 0, 0
				picload s, 1
			}
		}
	}
	gsel 0
	if ( returnfromportrait == 0 ) {
		redraw 0
		gmode 6, , , 80
		pos wx + 4, wy + 4
		gcopy 7, 0, 0, 700, 400
		gmode 2
	}
	if ( csctrl == 2 ) {
		txtnew
		txt lang("‚З‚М”\—Н‚рЊP—ы‚·‚йЃH", "Train which skill?")
	}
	returnfromportrait = 0
*com_charainfo_loop
	if ( csctrl != 1 ) {
		display_msg inf_tiles + inf_screeny
	}
	pagemax = (listmax - 1) / pagesize + 1
	if ( csctrl == 300 ) {
		if ( page == 0 ) {
			page = pagemax
		}
		if ( page > pagemax ) {
			page = 1
		}
	}
	else {
		if ( page < 0 ) {
			page = pagemax
		}
		else {
			if ( page > pagemax ) {
				page = 0
			}
		}
	}
	if ( csctrl == 1 ) {
		pagemax = 0
	}
	cs_bk = -1
	redraw 0
	if ( csctrl == 0 ) {
		if ( page == 0 ) {
			s = lang("¶°їЩ [Џj•џ‚ЖЋф‚ў‚МЏо•с]  ", "Cursor [Blessings & Curses]  ") + strhint6 + strhint2 + strhint3
		}
		else {
			s = lang("Њ€’и [ѓ{Ѓ[ѓiѓX‚М•Є”z]  ", "Enter [Spend Bonus]  ") + strhint2 + strhint3
		}
	}
	if ( csctrl == 1 ) {
		s = lang("Њ€’и·° [ѓЉѓЌЃ[ѓ‹]  " + strhint6 + "Shift,Esc [ЌЕЏIЉm”F]", "Enter Key [Reroll]  " + strhint6 + "Shift,Esc [Confirm]")
	}
	if ( csctrl == 2 ) {
		if ( page == 0 ) {
			s = strhint6 + strhint2 + strhint3
		}
		else {
			s = lang("Њ€’и [ѓXѓLѓ‹‚рЊP—ы]  ", "Enter [Train Skill]  ") + strhint2 + strhint3
		}
	}
	if ( csctrl == 3 ) {
		if ( page == 0 ) {
			s = strhint6 + strhint2 + strhint3
		}
		else {
			s = lang("Њ€’и [ѓXѓLѓ‹‚рЏK“ѕ]  ", "Enter [Learn Skill]  ") + strhint2 + strhint3
		}
	}
	if ( csctrl == 4 ) {
		if ( page == 0 ) {
			s = lang("¶°їЩ [Џj•џ‚ЖЋф‚ў‚МЏо•с]  ", "Cursor [Blessings & Curses]  ") + strhint6 + strhint2 + strhint3
		}
		else {
			s = strhint2 + strhint3
		}
	}
	if ( csctrl != 1 ) {
		if ( page != 0 ) {
			s += "" + key_mode2 + " [" + lang("ѓXѓLѓ‹ѓgѓ‰ѓbѓN", "Track Skill") + "]"
		}
	}
	if ( csctrl == 300 ) {
		s = ""
	}
	if ( csctrl != 300 ) {
		showtitle s, s, 236, 1
	}
*com_charainfo_loop_WHILE1
	redraw 0
	if ( cc == CHARA_PLAYER ) {
		s = ""
		if ( csctrl == 0 | csctrl == 4 ) {
			if ( page != 0 ) {
				s = lang("Ћc‚и " + cdata(CDATA_SKILLPOINT, cc) + " ‚Мѓ{Ѓ[ѓiѓX‚рѓXѓLѓ‹‚ЙЃAЋc‚и " + gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) + " ‚Мѓ{Ѓ[ѓiѓX‚рѓXѓyѓ‹‚Й•Є”z‚Е‚«‚й", "You can spend " + cdata(CDATA_SKILLPOINT, cc) + " bonus to skills / " + gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) + " bonus to spells.")
			}
		}
	}
	if ( cc != CHARA_PLAYER ) {
		s = ""
		if ( csctrl == 0 | csctrl == 4 ) {
			if ( page != 0 ) {
				s = lang("Ћc‚и " + cdata(CDATA_SKILLPOINT, cc) + " ‚Мѓ{Ѓ[ѓiѓX‚рѓXѓLѓ‹‚Й•Є”z‚Е‚«‚й", "You can spend " + cdata(CDATA_SKILLPOINT, cc) + " bonus points.")
			}
 		}
 	}
	display_window2 (windoww - 700) / 2 + inf_screenx, winposy(400) - 10, 700, 400, 7
	if ( page == 0 ) {
		keyrange = 0
		key_list = key_enter
		display_topic lang("”\—Н(Њі‚М’l)  - ђцЌЭ”\—Н", "Attributes(Org) - Potential"), wx + 28, wy + 122
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ESSENTIAL ) {
			display_topic lang("Essentialѓ‚Ѓ[ѓh", "Essential Mode"), wx + 240, wy + 122
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
			display_topic lang("Abnormalѓ‚Ѓ[ѓh", "Abnormal Mode"), wx + 240, wy + 122
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_OVERDOSE ) {
			display_topic lang("Overdoseѓ‚Ѓ[ѓh", "Overdose Mode"), wx + 240, wy + 122
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_LOSS ) {
			display_topic lang("Lossѓ‚Ѓ[ѓh", "Loss Mode"), wx + 240, wy + 122
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_NATURAL ) {
			display_topic lang("Naturalѓ‚Ѓ[ѓh", "Natural Mode"), wx + 240, wy + 122
		}
		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
			display_topic lang("Purgeѓ‚Ѓ[ѓh", "Purge Mode"), wx + 240, wy + 122
		}
		display_topic lang("ЉeЋнЏCђі", "Combat Rolls"), wx + 400, wy + 253
		display_topic lang("‚»‚М‘ј", "Extra Info"), wx + 28, wy + 265
		display_topic lang("Џj•џ‚ЖЋф‚ў", "Blessing and Hex"), wx + 400, wy + 122
		display_topic lang("ѓvѓЌѓtѓBЃ[ѓ‹", "Profile"), wx + 216, wy + 265
		if ( cc == CHARA_PLAYER & gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
			s = lang("Ѓ~" + gdata(GDATA_FLAG_REMAINING_LIVES) + " ", "X" + gdata(GDATA_FLAG_REMAINING_LIVES) + " ")
			pos wx + 646, wy + 120
			mes s(cnt)
		}
		if ( cdata(CDATA_PORTRAIT, cc) >= 0 ) {
			if ( cdata(CDATA_PORTRAIT, cc) < 80 ) {
				p = cdata(CDATA_SEX, cc) * 80 + cdata(CDATA_PORTRAIT, cc)
			}
			else {
				p = cdata(CDATA_SEX, cc) * 80 + cdata(CDATA_PORTRAIT, cc) - 80
			}
			pos wx + 560, wy + 27
			gzoom 80, 112, 4, p \ 16 * 48, p / 16 * 72, 48, 72
		}
		else {
			s = exedir + "user\\graphic\\face" + abs(cdata(CDATA_PORTRAIT, cc) + 1) + ".bmp"
			exist s
			if ( cdata(CDATA_PORTRAIT, cc) != (-1) ) {
				if ( strsize != (-1) ) {
					pos wx + 560, wy + 27
					gzoom 80, 112, 4, 0, 0, 80, 112
				}
			}
		}
		window2 wx + 557, wy + 23, 87, 120, 1, 10
		if ( cbit(CHARA_BIT_PCC, cc) == 1 ) {
			pos wx + 596 + 22, wy + 86 + 24
			gmode 2, 32, 48
			if ( cfg_pcc_show == 0 ) {
				grotate 10 + cc, 32, 0, 0, 32, 48
			}
			if ( cfg_pcc_show == 1 ) {
				grotate 10 + cc, 32, 0, 0, 24, 40
			}
		}
		else {
			picols = cdata(CDATA_CHARA_PIC, cc)
			if ( cdata(CDATA_PIC, cc) >= xy2pic(1, 21) & cdata(CDATA_PIC, cc) <= xy2pic(31, 21) ) {
				picols = 0
			}
			i = cdata(CDATA_PIC, cc) \ 1000 + picols * 1000
			chara_preparepic cdata(CDATA_PIC, cc) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT, (cdata(CDATA_PIC, cc) - picols * COLOR_TINT_MULT) / COLOR_TINT_MULT
			pos wx + 596 + 22, wy + 86 + 24
			gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
			grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i) / (1 + (chipc(CHIPC_HEIGHT, i) > inf_tiles)), inf_tiles
		}
		font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
		color 20, 10, 0
		if ( cdata(CDATA_ROLE, cc) == ROLE_ADVENTURER | cc < MAX_CHARA_FOLLOWER ) {
			s = lang("ѓЊѓxѓ‹", "Level"), lang("•K—v’l", "Next Lv"), lang("ђM‹В", "God"), lang("ЏЉ‘®", "Guild"), lang("ђ¬’·—Н", "Growth"), ""
		}
		else {
			s = lang("ѓЊѓxѓ‹", "Level"), lang("•K—v’l", "Next Lv"), lang("ђM‹В", "God"), "", "", ""
		}
		repeat 5
			pos wx + 355, wy + 46 + cnt * 15
			mes s(cnt)
		loop
		s = lang("–ј‘O", "Name"), lang("€Щ–ј", "Aka"), lang("Ћн‘°", "Race"), lang("ђ«•К", "Sex"), lang("ђE‹Ж", "Class"), lang("”N—о", "Age"), lang("ђg’·", "Height"), lang("‘МЏd", "Weight"), lang("INIT", "INI"), lang("‚`‚o", "AP")
		repeat 10
			pos wx + 30 + cnt / 5 * 190, wy + 47 + cnt \ 5 * 15
			mes s(cnt)
		loop
		repeat MAX_SKILL_ATTR_BASIC
			pos wx + 37, wy + 157 + cnt * 15
			gmode 2, inf_tiles, inf_tiles
			grotate 1, cnt * inf_tiles, 672, 0, inf_tiles, inf_tiles
			pos wx + 54, wy + 151 + cnt * 15
			mes _stats2(cnt)
		loop
		if ( cc < MAX_CHARA_FOLLOWER ) {
			s = lang("HP/MP", "HP/MP"), lang("ђ¶–Ѕ—Н", "Life"), lang("ѓ}ѓi", "Mana"), lang("‹¶‹C“x", "InSAN"), lang("‘¬“x", "Speed"), lang("–јђє", "Fame"), lang("ѓJѓ‹ѓ}", "Karma"), lang("ђн—Н•]‰ї", "Rating"), lang("‘ЕЊ‚ЏCђі", "Melee"), lang("ЋЛЊ‚ЏCђі", "Shoot"), "", "", "", "", "", ""
		}
		else {
			s = lang("HP/MP", "HP/MP"), lang("ђ¶–Ѕ—Н", "Life"), lang("ѓ}ѓi", "Mana"), lang("‹¶‹C“x", "Sanity"), lang("‘¬“x", "Speed"), lang("–јђє", "Fame"), "", "", "", "", "", "", ""
		}
		repeat 8
			pos wx + 255, wy + 151 + cnt * 15
			mes s(cnt)
		loop
		s = lang("‰ЧЋФЏd—К", "Cargo Wt"), lang("‰ЧЋФЊАЉE", "Cargo Lmt"), lang("‘•”хЏd—К", "Equip Wt"), lang("ѓ^Ѓ[ѓ“", "Turns"), lang("‘ЌЋћЉФ", "Time"), "", ""
		repeat 5
			pos wx + 29, wy + 290 + cnt * 15
			mes s(cnt)
		loop
		font lang(cfg_font1, cfg_font2), 12 - en * 2, 0
		color 0, 0, 0
		ohanasi1 = cdata(CDATA_BACKGROUND_PART_A1, cc)
		ohanasi2 = cdata(CDATA_BACKGROUND_PART_A2, cc)
		ohanasi3 = cdata(CDATA_BACKGROUND_PART_B1, cc)
		ohanasi4 = cdata(CDATA_BACKGROUND_PART_B2, cc)
		ohanasi5 = cdata(CDATA_BACKGROUND_PART_B3, cc)
		if ( ohanasi1 >= 0 ) {
			gosub *setHistory1
			pos wx + 220, wy + 290
			mes s
		}
		if ( ohanasi2 != 0 ) {
			gosub *setHistory2
			pos wx + 220, wy + 290 + 1 * 15
			mes s
		}
		if ( ohanasi3 != 0 ) {
			gosub *setHistory3
			pos wx + 220, wy + 290 + 2 * 15
			mes s
		}
		if ( ohanasi4 != 0 ) {
			gosub *setHistory4
			pos wx + 220, wy + 290 + 3 * 15
			mes s
		}
		if ( ohanasi5 != 0 ) {
			gosub *setHistory5
			pos wx + 220, wy + 290 + 4 * 15
			mes s
		}
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		color 0, 0, 0
		if ( cdata(CDATA_ROLE, cc) != ROLE_ADVENTURER ) {
			growrate = gdata(GDATA_FLAG_MAIN) + 100
			/********** CUSTOM - BEGINNING **********/
			growrate = ( gdata(GDATA_FLAG_MAIN) + 100 )
			if ( TweakData(TWEAK_GAMEPLAY_REVERT_POST_217_EXP_CHANGES, TWEAK_CATEGORY_GAMEPLAY) != FALSE ) {
				growrate = 400
			}
			/********** CUSTOM - ENDING **********/
			if ( cc < MAX_CHARA_FOLLOWER ) {
				s = "" + cdata(CDATA_LEVEL, cc), "" + cdata(CDATA_EXP_TO_NEXT_LVL, cc), godname(cdata(CDATA_GOD, cc)), guildname(), "" + growrate + "" + lang("%", " %")
			}
			if ( cc >= MAX_CHARA_FOLLOWER ) {
				s = "" + cdata(CDATA_LEVEL, cc), "" + cdata(CDATA_EXP_TO_NEXT_LVL, cc), godname(cdata(CDATA_GOD, cc)), "", ""
			}
		}
		if ( cdata(CDATA_ROLE, cc) == ROLE_ADVENTURER ) {
			if ( cdata(CDATA_GOD, cc) == GOD_EYTH ) {
				cdata(CDATA_GOD, cc) = rnd(8) + 1
			}
			guildadv = lang("‚И‚µ", "None")
			if ( cdatan(CDATAN_CLASS, cc) == "wizard" ) {
				guildadv = lang("–‚ЏpЋmѓMѓ‹ѓh", "Mages Guild")
			}
			if ( cdatan(CDATAN_CLASS, cc) == "warrior" ) {
				guildadv = lang("ђнЋmѓMѓ‹ѓh", "Fighters Guild")
			}
			if ( cdatan(CDATAN_CLASS, cc) == "archer" ) {
				guildadv = lang("“ђ‘ЇѓMѓ‹ѓh", "Thieves Guild")
			}
			growrate = cdata(CDATA_LEVEL, cc) / 3 + gdata(GDATA_FLAG_MAIN) / 3 + 100
			s = "" + cdata(CDATA_LEVEL, cc), "" + cdata(CDATA_EXP_TO_NEXT_LVL, cc), godname(cdata(CDATA_GOD, cc)), guildadv, "" + growrate + "" + lang("%", " %"), ""
		}
		repeat 5
			pos wx + 410 + en * 5, wy + 45 + cnt * 15
			mes s(cnt)
		loop
		s = cdatan(CDATAN_NAME, cc), cdatan(CDATAN_AKA, cc)
		dbidn = cdatan(CDATAN_RACE, cc)
		dbmode = DBMODE_REF
		gosub *db_race
		s(2) = cnven(lang("" + racename, cdatan(CDATAN_RACE, cc)))
		if ( cdatan(CDATAN_CUSTOM_RACE, cc) != "" ) {
			s(2) = cnven(lang("" + cdatan(CDATAN_CUSTOM_RACE, cc), cdatan(CDATAN_CUSTOM_RACE, cc)))
		}
		dbidn = cdatan(CDATAN_CLASS, cc)
		dbmode = DBMODE_REF
		gosub *db_class
		s(4) = cnven(lang("" + classname, cdatan(CDATAN_CLASS, cc)))
		if ( cdatan(CDATAN_FAKE_CLASS, cc) != "" ) {
			s(4) = cnven(lang("" + cdatan(CDATAN_FAKE_CLASS, cc), cdatan(CDATAN_FAKE_CLASS, cc)))
		}
		if ( cdata(CDATA_SEX, cc) == 0 ) {
			s(3) = cnven(strmale)
		}
		else {
			s(3) = cnven(strfemale)
		}
		inipower = cdata(CDATA_INIT_LIFEMANA, cc) + cdata(CDATA_INIT_ATTR, cc)
        s(3) = cnven(gendername(cc))
		s(5) = "" + calcage(cc) + " " + lang("ЌО", ""), "" + cdata(CDATA_HEIGHT, cc) + " cm", "" + cdata(CDATA_WEIGHT, cc) + " kg", "" + inipower + "/" + cdata(CDATA_INIT_SPEED, cc), "" + cdata(CDATA_AP_CURRENT, cc) + "(" + cdata(CDATA_AP_TOTAL, cc) + ")", ""
		repeat 10
			pos wx + 68 + cnt / 5 * 190 + en * ((cnt > 4) * 12), wy + 46 + cnt \ 5 * 15
			mes s(cnt)
		loop
		repeat MAX_SKILL_ATTR_BASIC
			cnt2 = cnt
			s = "(" + sdata(STARTING_SKILL_ATTR + cnt + STARTING_SKILL_SPACT, cc) / 1000000 + ")"
			if ( encfind(cc, ENCHANT_SUSTAIN * EXT_ENCHANTMENT + STARTING_SKILL_ATTR + cnt) != (-1) ) {
				s += "*"
			}
			pos wx + 92, wy + 151 + cnt * 15
			mes "" + sdata(STARTING_SKILL_ATTR + cnt, cc)
			pos wx + 124, wy + 151 + cnt * 15
			mes s
			p = sdata(STARTING_SKILL_ATTR + cnt + STARTING_SKILL_SPACT, cc) \ 1000
			pos wx + 176, wy + 152 + cnt * 15
			if ( p >= 400 ) {
				mes "Supreme"
				continue
			}
			if ( p >= 300 ) {
				mes "Amazing"
				continue
			}
			if ( p >= 200 ) {
				mes "Superb"
				continue
			}
			if ( p >= 150 ) {
				mes "Great"
				continue
			}
			if ( p >= 100 ) {
				mes "Good"
				continue
			}
			if ( p >= 50 ) {
				mes "Bad"
				continue
			}
			mes "Hopeless"
		loop
		if ( cdata(CDATA_SANITY, cc) > 100 ) {
			cdata(CDATA_SANITY, cc) = 100
		}
		if ( cc < MAX_CHARA_FOLLOWER ) {
			s = "" + cdata(CDATA_HP, cc) + "/" + cdata(CDATA_MP, cc), "" + sdata(SKILL_ATTR_LIFE, cc) + "(" + sorg(SKILL_ATTR_LIFE, cc) + ")", "" + sdata(SKILL_ATTR_MANA, cc) + "(" + sorg(SKILL_ATTR_MANA, cc) + ")", "" + cdata(CDATA_SANITY, cc) + "" + lang("%", " %"), "" + cdata(CDATA_SPEED, cc) + "(" + sorg(SKILL_ATTR_SPD, cc) + ")", "" + cdata(CDATA_FAME, cc), "" + cdata(CDATA_KARMA, CHARA_PLAYER), "" + cdata(CDATA_SHOP_INVEST, cc) + "" + lang("ЉK‘Љ“–", " level"), ""
		}
		else {
			if ( cdata(CDATA_ALLIED, cc) == 0 ) {
				if ( cdata(CDATA_FAME, cc) == 0 ) {
					cdata(CDATA_FAME, cc) = cdata(CDATA_LEVEL, cc) * 10 * cdata(CDATA_QUALITY, cc) * cdata(CDATA_QUALITY, cc) * cdata(CDATA_QUALITY, cc)
				}
			}
			s = "" + cdata(CDATA_HP, cc) + "/" + cdata(CDATA_MP, cc), "" + sdata(SKILL_ATTR_LIFE, cc) + "(" + sorg(SKILL_ATTR_LIFE, cc) + ")", "" + sdata(SKILL_ATTR_MANA, cc) + "(" + sorg(SKILL_ATTR_MANA, cc) + ")", "" + cdata(CDATA_SANITY, cc), "" + cdata(CDATA_SPEED, cc) + "(" + sorg(SKILL_ATTR_SPD, cc) + ")", "" + cdata(CDATA_FAME, cc), "", "", ""
		}
		repeat MAX_SKILL_ATTR_BASIC
			pos wx + 310, wy + 151 + cnt * 15
			mes s(cnt)
		loop
		val = 0
		gosub *com_calcAttack
		tc = cc
		font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
		color 20, 10, 0
		pos wx + 422, wy + 281 + p(2) * 16
		mes lang("ЊyЊё", "Prot")
		pos wx + 590 - en * 16, wy + 281 + p(2) * 16
		mes lang("‰с”р", "Evade")
		pos wx + 564 - en * 10, wy + 263
		mes lang("–‚–@€Р—Н", "SpellPow")
		hoseis = limit(cdata(CDATA_ENHANCE_SPELL, cc) * 2 / 3, 0, 1000) / 10 + limit(sdata(SKILL_ATTR_MAG, cc) / 10, 0, 150) + 100
		if ( cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 & cdata(CDATA_EQUIP_WEIGHT, cc) >= 15000 & findbuff(cc, BUFF_MAGIC_EQUIP) != (-1) ) {
			hoseis = hoseis * 6 / 5
		}
		attackskill = SKILL_WEAPON_MARTIAL_ARTS
		evade = calcattackhit(2)
		prot = calcattackdmg(2)
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		color 0, 0, 0
		pos wx + 625 - en * 8, wy + 263
		mes "" + hoseis + "%"
		pos wx + 460 + en * 8, wy + 279 + p(2) * 16
		mes "" + (100 - 10000 / (prot + 100)) + "% + " + protdice1 + "d" + protdice2
		pos wx + 625 - en * 8, wy + 279 + p(2) * 16
		mes "" + evade + "%"
		p(2)++
		s = "" + cnvweight(gdata(GDATA_CARGO_WEIGHT)), cnvweight(gdata(GDATA_CARGO_LIMIT)), cnvweight(cdata(CDATA_EQUIP_WEIGHT, cc)) + " " + cnveqweight(cc), "" + gdata(GDATA_TURN) + "" + lang("ѓ^Ѓ[ѓ“", " Turns"), "" + cnvplaytime(gdata(GDATA_PLAY_TIME) + timeGetTime() / 1000 - time_begin), "", ""
		repeat 5

			/********** ORIGINAL - BEGINNING **********

			pos wx + 86, wy + 289 + cnt * 15
			mes s(cnt)

			 ********** ORIGINAL - ENDING **********/

			/********** ANNA CUSTOM - BEGINNING **********/ // better alignment for the extra info text on char screen

			pos wx + 102, wy + 289 + cnt * 15
			mes s(cnt)

			/********** ANNA CUSTOM - ENDING **********/

		loop
		cs_buffmax = 0
		repeat MAX_BLESSINGS + MAX_HEXES - 1
			x = wx + 430 + cnt / 3 * 40
			y = wy + 151 + cnt \ 3 * 32
			if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, cc) == 0 ) {
				gmode 4, , , 120
				pos x, y
				gcopy 3, 320, 160, 32, 32
				gmode 2
				continue
			}
			cs_buffmax++
			if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, cc) < 49 ) {
				pos x, y
				gcopy 1, cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, cc) * 32, 1536, 32, 32
			}
			if ( cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, cc) >= 49 ) {
				pos x, y
				gcopy 1, (cdata(STARTING_CDATA_BUFF + cnt * ARRAY_CDATA_BUFF, cc) - 49) * 32, 1568, 32, 32
			}
			if ( cs_buff == cnt ) {
				pos x, y
				gfini 32, 32
				gfinc 20, 20, 50
			}
		loop
		if ( cs_buffmax != 0 ) {
			calcbuff -2, cdata(STARTING_CDATA_BUFF + cs_buff * ARRAY_CDATA_BUFF, cc), cdata(STARTING_CDATA_BUFF + cs_buff * ARRAY_CDATA_BUFF + 1, cc)
			s = "" + buffname(cdata(STARTING_CDATA_BUFF + cs_buff * ARRAY_CDATA_BUFF, cc)) + ": " + cdata(STARTING_CDATA_BUFF + cs_buff * ARRAY_CDATA_BUFF + 2, cc) + lang("(" + dur + ")А°Э‚МЉФЃA", "(" + dur + ") ") + buffdesc

			/********** ANNA CUSTOM - BEGINNING **********/ // adds line breaks for long buff descriptions

			if ( en ) {
				if ( strlen(s) > 70 ) {
					s = strmid(s, 0, 70) + "\n" + strmid(s, 70, strlen(s))
				}
			}

			/********** ANNA CUSTOM - ENDING **********/

		}
		else {
			s = lang("ЌЎ‚НЋќ‘±Њш‰К‚рЋу‚Ї‚Д‚ў‚И‚ў", "This character isn't currently blessed or hexed.")
		}

		/********** ORIGINAL - BEGINNING **********

		font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
		pos wx + 60, wy + 370
		mes s
		font lang(cfg_font1, cfg_font2), 11 + sizefix * 2 - en * 2, 1
		color 20, 10, 0
		pos wx + 30, wy + 372 - en * 3
		mes lang("ђа–ѕ:", "Hint:")

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/

		font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
		pos wx + 63, wy + 369 - en * 3
		mes s
		font lang(cfg_font1, cfg_font2), 11 + sizefix * 2 - en * 2, 1
		color 20, 10, 0
		pos wx + 30, wy + 369 - en * 3
		mes lang("ђа–ѕ:", "Desc:")

		/********** ANNA CUSTOM - ENDING **********/

	}
	else {
		display_topic lang("”\—Н‚М–јЏМ", "Name"), wx + 28, wy + 36
		if ( csctrl != 300 ) {
			display_topic lang("Lv(ђцЌЭ)", "Lv(Potential)"), wx + 200, wy + 36
		}
		display_topic lang("Њш‰К", "Detail"), wx + 350, wy + 36
		keyrange = 0
		p(1) = 0
		repeat pagesize
			p = pagesize * (page - 1) + cnt
			if ( p >= listmax ) {
				break
			}
			key_list(cnt) = key_select(cnt)
			keyrange++
			if ( list(0, p) < 0 ) {
				p(1) = 1
				continue
			}
			p(1)++
			if ( list(0, p) < 100 ) {
				x = 52
				dx = 18
			}
			else {
				x = 70
				dx = 0
			}
			if ( p(1) \ 2 == 0 ) {
				pos wx + x, wy + 66 + cnt * 19
				gfini 595 + dx, 18
				gfdec2 12, 14, 16
			}
			if ( list(0, p) < 100 ) {
				continue
			}
			display_key wx + 58, wy + 64 + cnt * 19, cnt
		loop
	}
	if ( page > 0 ) {
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		cs_listbk
		repeat pagesize
			p = pagesize * (page - 1) + cnt
			if ( p >= listmax ) {
				break
			}
			if ( list(0, p) >= 0 ) {
				i = list(0, p)
				if ( i < STARTING_SKILL_WEAPON ) {
					x = 54
					p(1) = 10
				}
				else {
					x = 84
					p(1) = sdataref(SKILL_DATAREF_USE, i) - 10
				}
				pos wx + 38, wy + 75 + cnt * 19
				gmode 2, inf_tiles, inf_tiles
				grotate 1, p(1) * inf_tiles, 672, 0, inf_tiles, inf_tiles
				if ( cm == 0 & TweakData(TWEAK_GAMEPLAY_DISABLE_STUDY_DAYS, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
					if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == STUDY_BONUS_TRAINING ) {
						if ( i == SKILL_NORMAL_WEIGHT_LIFTING | i == SKILL_NORMAL_HEALING | i == SKILL_NORMAL_MEDITATION | i == SKILL_NORMAL_MAGIC_CAPACITY | i == SKILL_NORMAL_HEAVY_ARMOR | i == SKILL_NORMAL_MEDIUM_ARMOR | i == SKILL_NORMAL_LIGHT_ARMOR | i == SKILL_NORMAL_FAITH ) {
							pos wx + 18, wy + 75 + cnt * 19
							gmode 2, inf_tiles, inf_tiles
							grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
						}
					}
					if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == STUDY_BONUS_COMBAT ) {
						if ( i == SKILL_NORMAL_TACTICS | i == SKILL_NORMAL_DUAL_WIELD | i == SKILL_NORMAL_TWO_HAND | i == SKILL_NORMAL_SHIELD | i == SKILL_NORMAL_EVASION | i == SKILL_NORMAL_EYE_OF_MIND | i == SKILL_NORMAL_GREATER_EVASION | i == SKILL_NORMAL_MARKSMAN | (i >= STARTING_SKILL_WEAPON & i < MAX_SKILL_WEAPON ) ) {
							pos wx + 18, wy + 75 + cnt * 19
							gmode 2, inf_tiles, inf_tiles
							grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
						}
					}
					if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == STUDY_BONUS_JOB ) {
						if ( i == SKILL_NORMAL_NEGOTIATION | i == SKILL_NORMAL_INVESTING | i == SKILL_NORMAL_CARPENTRY | i == SKILL_NORMAL_TAILORING | i == SKILL_NORMAL_ALCHEMY | i == SKILL_NORMAL_JEWELER | i == SKILL_NORMAL_GARDENING | i == SKILL_NORMAL_PERFORMER | i == SKILL_NORMAL_COOKING | i == SKILL_NORMAL_FISHING | i == SKILL_ACTIVE_PICKPOCKET ) {
							pos wx + 18, wy + 75 + cnt * 19
							gmode 2, inf_tiles, inf_tiles
							grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
						}
					}
					if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == STUDY_BONUS_EXPLORATION ) {
						if ( i == SKILL_NORMAL_STEALTH | i == SKILL_NORMAL_LOCK_PICKING | i == SKILL_NORMAL_DETECTION | i == SKILL_NORMAL_MINING | i == SKILL_NORMAL_DISARM_TRAP | i == SKILL_NORMAL_TRAVELING | i == SKILL_NORMAL_SWIMMING | i == SKILL_ACTIVE_RIDING ) {
							pos wx + 18, wy + 75 + cnt * 19
							gmode 2, inf_tiles, inf_tiles
							grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
						}
					}
					if ( gdata(GDATA_FLAG_STUDY_BONUS_KIND) == STUDY_BONUS_STUDY ) {
						if ( i == SKILL_NORMAL_LITERACY | i == SKILL_NORMAL_GENE_ENGINEER | i == SKILL_NORMAL_ANATOMY | i == SKILL_NORMAL_SENSE_QUALITY | i == SKILL_NORMAL_MEMORIZATION | i == SKILL_NORMAL_CASTING | i == SKILL_NORMAL_MAGIC_DEVICE | i == SKILL_NORMAL_CONTROL_MAGIC ) {
							pos wx + 18, wy + 75 + cnt * 19
							gmode 2, inf_tiles, inf_tiles
							grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
						}
					}
					if ( i >= STARTING_SKILL_SPELL & i < MAX_SPELL ) {
						if ( cdata(CDATA_ADVANCED_CASTING_ENABLED, CHARA_PLAYER) == 1 ) {
							pos wx + 18, wy + 75 + cnt * 19
							gmode 2, inf_tiles, inf_tiles
							grotate BUFFER_ITEM, 576, 1680, 0, inf_tiles, inf_tiles
						}
					}
				}
				s = skillname(i)
				if ( i >= STARTING_SKILL_RESIST & i < STARTING_SKILL_WEAPON ) {
					s = lang("", "Resist ") + cnven(s) + lang("‘Пђ«", "")
				}
				repeat 15
					if ( gdata(STARTING_GDATA_DISPLAY_SKILL + cnt) == cc * 10000 + i ) {
						s = "*" + s
					}
				loop
				cs_list s, wx + x, wy + 66 + cnt * 19 - 1, 19
				if ( list(0, p) >= STARTING_SKILL_RESIST & list(0, p) < STARTING_SKILL_WEAPON ) {
					p(1) = limit(sdata(list(0, p), cc) / (50 * 2), 0, 8)
					s = _resist(p(1))
					keigen = sdata(list(0, p), cc) / 50
					if ( keigen < 3 ) {
						keigen2 = 150 * 100 / limit(keigen * 50 + 50, 40, 150)
					}
					else {
						keigen2 = 100 * 100 / (keigen * 50 + 50)
					}
					keigen2 = keigen2 * 100 / (sdata(SKILL_RES_MAGIC, cc) / 2 + 50)
				}
				else {
					if ( csctrl == 300 ) {
						s = ""
					}
					else {
						s = str(sdata(list(0, p) + STARTING_SKILL_SPACT, cc))
						s = strmid(s, -1, 6)
						s = "" + sorg(i, cc) + "." + strmid(s, 0, 3)
						if ( sorg(i, cc) != sdata(i, cc) ) {
							p(1) = sdata(i, cc) - sorg(i, cc)
							if ( dbg_showallskill ) {
								if ( p(1) > 0 ) {
									s += "+" + p(1)
								}
								else {
									s += p(1)
								}
							}
						}
						s += "(" + sgrowth(i, cc) + "%)"
					}
				}
				if ( list(0, p) >= STARTING_SKILL_SPELL & list(0, p) < MAX_SPELL ) {
					pos wx + 280 - strlen(s) * 4, wy + 66 + cnt * 19 + 2
					mes s
					gosub *skill_desc
					s = strmid(s, 0, 46)
					pos wx + 350, wy + 66 + cnt * 19 + 2
					mes s
				}
				else {
					pos wx + 280 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
					mes s
					if ( list(0, p) >= 50 & list(0, p) < 100 ) {
						if ( keigen2 > 0 ) {
							pos wx + 330, wy + 66 + cnt * 19 + 2
							mes lang("(ЌЕЏI”нѓ_ѓЃЃ[ѓW" + keigen2 + "%)", "") + skilldesc(i) + lang("", " (" + keigen2 + "% Damage Taken)")
						}
						if ( keigen2 == 0 ) {
							pos wx + 330, wy + 66 + cnt * 19 + 2
							mes lang("(ЌЕЏI”нѓ_ѓЃЃ[ѓW1%–ў–ћ)", "") + skilldesc(i) + lang("", " (Less than 1% Damage Taken)")
						}
					}
					else {
						pos wx + 330, wy + 66 + cnt * 19 + 2
						mes skilldesc(i)
					}
				}
				if ( csctrl == 2 | csctrl == 3 ) {
					if ( csctrl == 2 ) {
						s = "" + calctraincost(i, cc) + "p "
					}
					else {
						s = "" + calclearncost(i, cc) + "p "
					}
					pos wx + 322 - strlen(s) * 7, wy + 66 + cnt * 19 + 2
					mes s
				}
				else {
					if ( sorg(i, cc) != sdata(i, cc) ) {
						i = sdata(i, cc) - sorg(i, cc)
						if ( list(0, p) >= 50 ) {
							i = i / 50
						}
						else {
							i = i / 5
						}
						s = ""
						putenclv i
						pos wx + 282, wy + 66 + cnt * 19 + 2
						mes s
					}
					else {
						if ( csctrl == 300 & (sdata(i, cc) != 0 | sorg(i, cc) != 0) ) {
							s = ""
							s += lang("*", "#")
							pos wx + 282, wy + 66 + cnt * 19 + 2
							mes s
						}
					}
				}
			}
			else {
				font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
				cs_list listn(0, p), wx + 88, wy + 66 + cnt * 19, 19
				font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
			}
		loop
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( page == 0 ) {
		if ( key == "p" ) {
			if ( cc < MAX_CHARA_FOLLOWER ) {
				gosub *com_portrait
				if ( mode != MODELIST_CHARA_CREATION ) {
					nowindowanime = 1
				}
				returnfromportrait = 1
				goto *com_charainfo
			}
		}
		if ( key == key_north ) {
			cs_buff--
			if ( cs_buff < 0 ) {
				cs_buff = cs_buffmax - 1
			}
			goto *com_charainfo_loop
		}
		if ( key == key_south ) {
			cs_buff++
			if ( cs_buff >= cs_buffmax ) {
				cs_buff = 0
			}
			goto *com_charainfo_loop
		}
	}
	else {
		if ( csctrl != 1 ) {
			if ( key == key_mode2 ) {
				repeat keyrange
					i = list(0, pagesize * (page - 1) + cs)
					break
				loop
				if ( i != (-1) ) {
					p = STARTING_GDATA_DISPLAY_SKILL
					repeat 15, STARTING_GDATA_DISPLAY_SKILL
						if ( gdata(cnt) \ 10000 == 0 ) {
							p = cnt
						}
						if ( gdata(cnt) == cc * 10000 + i ) {
							p = cnt
							i = 0
							break
						}
					loop
					gdata(p) = cc * 10000 + i
					snd SOUNDLIST_OK1
				}
			}
		}
	}
	if ( csctrl == 1 ) {
		if ( key == key_enter ) {
			snd SOUNDLIST_DICE
			return 0
		}
		if ( key == key_cancel ) {
			return 1
		}
		goto *com_charainfo_loop_WHILE1_CONTINUE
	}
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * (page - 1) + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		if ( csctrl == 300 ) {
			csskill = p
			snd SOUNDLIST_SPEND1
			return
		}
	}
	if ( p != (-1) ) {
		if ( csctrl != 4 ) {
			csskill = p
			if ( csctrl == 2 | csctrl == 3 ) {
				screenupdate = -1
				gosub *screen_draw
				tc = tcbk
				return
			}
			if ( p < STARTING_SKILL_SPELL ) {
				if ( cdata(CDATA_SKILLPOINT, CHARA_PLAYER) < 1 | p < 0 | p < STARTING_SKILL_WEAPON ) {
					goto *com_charainfo_loop
				}
				if ( sorg(csskill, CHARA_PLAYER) == 0 ) {
					snd SOUNDLIST_FAIL1
					goto *com_charainfo_loop
				}
				cdata(CDATA_SKILLPOINT, CHARA_PLAYER)--
				if ( dbg_skillpointfix ) {
					cdata(CDATA_SKILLPOINT, CHARA_PLAYER)++
				}
			}
			else {
				if ( gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS) < 1 | p < 0 | p < 100 ) {
					goto *com_charainfo_loop
				}
				if ( sorg(csskill, CHARA_PLAYER) == 0 ) {
					snd SOUNDLIST_FAIL1
					goto *com_charainfo_loop
				}
				if ( csskill == SKILL_SPELL_WISH ) {
					txt lang("‚»‚М–‚–@‚Й‚НЋg‚¦‚И‚ўЃB", "Bonuses can't be used for that spell.")
					snd SOUNDLIST_FAIL1
					goto *com_charainfo_loop
				}
				gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS)--
				if ( dbg_skillpointfix ) {
					gdata(GDATA_FLAG_SCROLL_OF_WITCHCRAFT_TOTAL_SPELL_BONUS)++
				}
            }
			snd SOUNDLIST_SPEND1
			gdata(GDATA_SENSE_OBJECT) = 1
			skillexp csskill, cc, 400, 2, 1000
			modgrowth cc, csskill, 20
			gdata(GDATA_SENSE_OBJECT) = 0
			redraw 0
			gosub *screen_drawStatus
			goto *com_charainfo_loop
		}
	}
	if ( p != (-1) ) {
		if ( csctrl == 4 ) {
			csskill = p
			if ( csctrl == 2 | csctrl == 3 ) {
				screenupdate = -1
				gosub *screen_draw
				tc = tcbk
				return
			}
			if ( cdata(CDATA_SKILLPOINT, cc) < 1 | p < 0 | p < 100 ) {
				goto *com_charainfo_loop
			}
			if ( sorg(csskill, cc) == 0 ) {
				snd SOUNDLIST_FAIL1
				goto *com_charainfo_loop
			}
			cdata(CDATA_SKILLPOINT, cc)--
			snd SOUNDLIST_SPEND1
			skillexp csskill, cc, 400, 2, 1000
			modgrowth cc, csskill, limit(15 - sgrowth(csskill, cc) / 15, 2, 15)
			redraw 0
			gosub *screen_drawStatus
			goto *com_charainfo_loop
		}
	}
	if ( key == key_pageup ) {
		page++
		snd SOUNDLIST_POP1
		goto *com_charainfo_loop
	}
	if ( key == key_pagedown ) {
		page--
		snd SOUNDLIST_POP1
		goto *com_charainfo_loop
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 3 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 3
				}
			}
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					csctrl = 0
					goto *com_charainfo
				}
				if ( curmenu == 1 ) {
					goto *com_wear
				}
				if ( curmenu == 2 ) {
					goto *com_trait
				}
				if ( curmenu == 3 ) {
					goto *com_material
				}
			}
		}
	}
	if ( key == key_cancel ) {
		menucycle = 0
		if ( csctrl == 300 ) {
			csskill = -1
			return
		}
		if ( csctrl == 0 ) {
			gosub *screen_draw
			goto *pc_turn
		}
		else {
			screenupdate = -1
			gosub *screen_draw
			tc = tcbk
			return
		}
	}
*com_charainfo_loop_WHILE1_CONTINUE
	goto *com_charainfo_loop_WHILE1

*portrait_item
	rtval = -2
	if ( page == 0 ) {
		if ( val == 0 ) {
			rtval = -2
		}
		if ( val == 1 ) {
			rtval = 100, 0, cdata(CDATA_PORTRAIT, cc)
		}
		if ( val == 2 ) {
			rtval = 1, 0, pcc(PCC_HAIR, cc) \ COLOR_TINT_MULT
			rtvaln = "hair"
		}
		if ( val == 3 ) {
			rtval = 10, 0, pcc(PCC_SUB_HAIR, cc) \ COLOR_TINT_MULT
			rtvaln = "subhair"
		}
		if ( val == 4 ) {
			rtval = 1, 1, pcc(PCC_HAIR, cc) / COLOR_TINT_MULT
		}
		if ( val == 5 ) {
			rtval = 15, 0, pcc(PCC_BODY, cc) \ COLOR_TINT_MULT
			rtvaln = "body"
		}
		if ( val == 6 ) {
			rtval = 9, 0, pcc(PCC_CLOTH, cc) \ COLOR_TINT_MULT
			rtvaln = "cloth"
		}
		if ( val == 7 ) {
			rtval = 7, 0, pcc(PCC_PANTS, cc) \ COLOR_TINT_MULT
			rtvaln = "pants"
		}
		if ( val == 8 ) {
			rtval = -1
			rtvaln = ""
		}
		if ( val == 9 ) {
			if ( cc != CHARA_PLAYER ) {
				rtval = 101, 0, cbit(CHARA_BIT_PCC, cc)
			}
			else {
				rtval = 16, 0, pcc(PCC_RIDE, cc) \ COLOR_TINT_MULT
				rtvaln = "ride"
			}
		}
	}
	else {
		if ( val == 0 ) {
			rtval = 15, 1, pcc(PCC_BODY, cc) / COLOR_TINT_MULT
		}
		if ( val == 1 ) {
			rtval = 9, 1, pcc(PCC_CLOTH, cc) / COLOR_TINT_MULT
		}
		if ( val == 2 ) {
			rtval = 7, 1, pcc(PCC_PANTS, cc) / COLOR_TINT_MULT
		}
		if ( val == 3 ) {
			rtval = 11, 0, pcc(PCC_ETC1, cc) \ COLOR_TINT_MULT
			rtvaln = "etc"
		}
		if ( val == 4 ) {
			rtval = 12, 0, pcc(PCC_ETC2, cc) \ COLOR_TINT_MULT
			rtvaln = "etc"
		}
		if ( val == 5 ) {
			rtval = 13, 0, pcc(PCC_ETC3, cc) \ COLOR_TINT_MULT
			rtvaln = "etc"
		}
		if ( val == 6 ) {
			rtval = 14, 0, pcc(PCC_EYE, cc) \ COLOR_TINT_MULT
			rtvaln = "eye"
		}
		if ( val == 7 ) {
			rtval = -1
			rtvaln = ""
		}
	}
	return

*get_pic_selection
	rtval = -2
	if ( page == 0 ) {
		if ( val == 0 ) {
			rtval = -2
		}
		if ( val == 1 ) {
			rtval = -3
		}
		if ( val == 2 ) {
			rtval = 100, 0, cdata(CDATA_PIC, cc) - 692
		}
	}
	return

*com_item_mark
	bkitemx = cdata(CDATA_MARK_ITEM_X, tc)
	bkitemy = cdata(CDATA_MARK_ITEM_Y, tc)
	n = 0
	txtnew
	txtef COLOR_GREEN
	txt lang("€Ъ“®ѓLЃ[‚Еѓ}Ѓ[ѓN€Ъ“®ЃABack spaceѓLЃ[‚Е‘OЊгђШ‘ЦЃAEnterѓLЃ[‚ЕЊ€’иЃAѓLѓѓѓ“ѓZѓ‹ѓLЃ[‚ЕЏI—№ЃB", "Movement keys to move the item mark, back space key to move behind, hit the enter key to decide the position, hit the cancel key to exit.")
	windowshadow = 1
	await 1000
	p = 0
*com_item_mark_loop
	gosub *screen_draw
	getkey p, 13
	if ( p ) {
		snd SOUNDLIST_PORT
		gosub *screen_draw
		n = 0
		txtnew
		txt lang("€Ъ“®‚рЏI‚¦‚ЅЃB", "You finished the movement.")
		await 1000
		return
	}
	if ( key == key_cancel ) {
		snd SOUNDLIST_EQUIP1
		cdata(CDATA_MARK_ITEM_X, tc) = bkitemx
		cdata(CDATA_MARK_ITEM_Y, tc) = bkitemy
		gosub *screen_draw
		n = 0
		txtnew
		txt lang("€Ъ“®‚р‚в‚Я‚ЅЃB", "You quit movement.")
		return
	}
	getkey p, 8
	if ( p ) {
		if ( cbit(CHARA_BIT_MARK_ITEM, tc) ) {
			snd SOUNDLIST_DROP1
			cbitmod CHARA_BIT_MARK_ITEM, tc, 0
			await 500
		}
		else {
			snd SOUNDLIST_ENC
			cbitmod CHARA_BIT_MARK_ITEM, tc, 1
			await 500
		}
	}
	if ( key == key_north ) {
		if ( cdata(CDATA_MARK_ITEM_Y, tc) > (-62) ) {
			cdata(CDATA_MARK_ITEM_Y, tc)--
		}
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_south ) {
		if ( cdata(CDATA_MARK_ITEM_Y, tc) <= 0 ) {
			cdata(CDATA_MARK_ITEM_Y, tc)++
		}
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_pageup ) {
		if ( cdata(CDATA_MARK_ITEM_X, tc) < 22 ) {
			cdata(CDATA_MARK_ITEM_X, tc)++
		}
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_pagedown ) {
		if ( cdata(CDATA_MARK_ITEM_X, tc) > 0 ) {
			cdata(CDATA_MARK_ITEM_X, tc)--
		}
		snd SOUNDLIST_CURSOR1
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	goto *com_item_mark_loop

*com_item_mark_adjust
	bkiteml = cdata(CDATA_MARK_ITEM_ADJUST_L, tc)
	bkitemw = cdata(CDATA_MARK_ITEM_ADJUST_W, tc)
 	bkitemr = cdata(CDATA_MARK_ITEM_ADJUST_R, tc)
	n = 0
	txtnew
	txtef COLOR_YELLOW2
	txt lang("Џг‰єѓLЃ[‚ЕЏcѓTѓCѓY’Іђ®ЃAЌ¶‰EѓLЃ[‚Е‰ЎѓTѓCѓY’Іђ®ЃAzxѓLЃ[‚ЕЉp“x’Іђ®ЃAEnterѓLЃ[‚ЕЊ€’иЃAѓLѓѓѓ“ѓZѓ‹ѓLЃ[‚ЕЏI—№ЃB", "Up and down keys to adjust item mark length, left and right keys to adjust item mark width, z and x keys to adjust item mark angle, hit the enter key to decide the position, hit the cancel key to exit.")
	windowshadow = 1
	await 1000
	p = 0
*com_item_mark_adjust_loop
	gosub *screen_draw
	getkey p, 13
	if ( p ) {
		snd SOUNDLIST_PORT
		gosub *screen_draw
		n = 0
		txtnew
		txt lang("’Іђ®‚рЏI‚¦‚ЅЃB", "You finished the adjustment.")
		await 1000
		return
	}
	if ( key == key_cancel ) {
		snd SOUNDLIST_EQUIP1
		cdata(CDATA_MARK_ITEM_ADJUST_L, tc) = bkiteml
		cdata(CDATA_MARK_ITEM_ADJUST_W, tc) = bkitemw
 		cdata(CDATA_MARK_ITEM_ADJUST_R, tc) = bkitemr
		gosub *screen_draw
		n = 0
		txtnew
		txt lang("’Іђ®‚р‚в‚Я‚ЅЃB", "You quit adjustment.")
		return
	}
	if ( key == key_north ) {
		if ( cdata(CDATA_MARK_ITEM_ADJUST_L, tc) < 36 ) {
			cdata(CDATA_MARK_ITEM_ADJUST_L, tc)++
		}
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_south ) {
		if ( cdata(CDATA_MARK_ITEM_ADJUST_L, tc) >= (-9) ) {
			cdata(CDATA_MARK_ITEM_ADJUST_L, tc)--
		}
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_pageup ) {
		if ( cdata(CDATA_MARK_ITEM_ADJUST_W, tc) < 36 ) {
			cdata(CDATA_MARK_ITEM_ADJUST_W, tc)++
		}
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_pagedown ) {
		if ( cdata(CDATA_MARK_ITEM_ADJUST_W, tc) >= (-9) ) {
			cdata(CDATA_MARK_ITEM_ADJUST_W, tc)--
		}
		snd SOUNDLIST_CURSOR1
	}
	getkey p, 90
	if ( p ) {
		if ( cdata(CDATA_MARK_ITEM_ADJUST_R, tc) < 11 ) {
			cdata(CDATA_MARK_ITEM_ADJUST_R, tc)++
		}
		snd SOUNDLIST_CURSOR1
	}
	getkey p, 88
	if ( p ) {
		if ( cdata(CDATA_MARK_ITEM_ADJUST_R, tc) > (-11) ) {
			cdata(CDATA_MARK_ITEM_ADJUST_R, tc)--
		}
		snd SOUNDLIST_CURSOR1
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	goto *com_item_mark_adjust_loop

*com_tag_team
	gosub *screen_draw
	tatiebk = cdata(CDATA_FACE, tc)
	n = 0
	txtnew
	txtef COLOR_YELLOW2
	txt lang("Ќ¶‰EѓLЃ[‚Е‘I‘рЃAEnterѓLЃ[‚ЕЊ€’иЃAѓLѓѓѓ“ѓZѓ‹ѓLЃ[‚ЕѓLѓѓѓ“ѓZѓ‹ЃB", "Left and right keys to change graphic, hit the enter key to decide, hit the cancel key to exit.")
	windowshadow = 1
	await 1000
	p = 0

*com_tag_team_WHILE1
	if ( cdata(CDATA_FACE, tc) > 0 ) {
		stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tc) + "_B.bmp"
		if ( cdata(CDATA_EMO_ICON, tc) \ 100 == 6 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tc) + "_F.bmp"
		}
		if ( cdata(CDATA_EMO_ICON, tc) \ 100 == 17 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tc) + "_H.bmp"
		}
		if ( cdata(CDATA_HP, tc) < cdata(CDATA_MAX_HP, tc) / 2 | cdata(CDATA_EMO_ICON, tc) \ 100 == 26 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tc) + "_E.bmp"
		}
		if ( cdata(CDATA_EMO_ICON, tc) \ 100 == 18 | cdata(CDATA_CONDITION_ANGRY, tc) > 0 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tc) + "_A.bmp"
		}
		if ( cdata(CDATA_EMO_ICON, tc) \ 100 == 21 ) {
			stati = exedir + "\\user\\graphic2\\face" + cdata(CDATA_FACE, tc) + "_Q.bmp"
		}
		exist stati
		if ( strsize == (-1) ) {
			cdata(CDATA_FACE, tc) = tatiebk2
		}
		if ( strsize != (-1) ) {
			gsel BUFFER_BUF
			pos 0, 0
			picload stati, 1
			gsel BUFFER_SCREEN
			if ( cdata(CDATA_IN_TAGTEAM, tc) == 0 | cdata(CDATA_IN_TAGTEAM, tc) == 1 ) {
				pos windoww - 300, windowh - 588
				gcopy BUFFER_BUF, 0, 0, 300, 500
			}
			else {
				pos 0, windowh - 588
				gcopy BUFFER_BUF, 0, 0, 300, 500
			}
		}
	}
	if ( cdata(CDATA_FACE, tc) > 0 ) {
		if ( cdata(CDATA_IN_TAGTEAM, tc) == 0 | cdata(CDATA_IN_TAGTEAM, tc) == 1 ) {
			pos windoww - 300 + 50, windowh - 588 - 10
		}
		else {
			pos 50, windowh - 588 - 10
		}
		if ( jp ) {
			color 0, 0, 0
			bmes "Њ»ЌЭ‚М—§‚їЋpЃFface" + cdata(CDATA_FACE, tc) + "Ѓ@", 235, 235, 35
		}
		if ( en ) {
			color 0, 0, 0
			bmes "face" + cdata(CDATA_FACE, tc) + " now.", 235, 235, 35
		}
	}
	getkey p, 13
	if ( p ) {
		snd SOUNDLIST_PORT
		goto *com_tag_team_WEND1
	}
	if ( key == key_cancel ) {
		snd SOUNDLIST_EQUIP1
		cdata(CDATA_FACE, tc) = tatiebk
		goto *com_tag_team_WEND1
	}
	if ( key == key_pageup ) {
		tatiebk2 = cdata(CDATA_FACE, tc)
		if ( cdata(CDATA_FACE, tc) < 40 ) {
			cdata(CDATA_FACE, tc)++
		}
		gosub *screen_draw
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_pagedown ) {
		tatiebk2 = cdata(CDATA_FACE, tc)
		if ( cdata(CDATA_FACE, tc) > 0 ) {
			cdata(CDATA_FACE, tc)--
		}
		gosub *screen_draw
		snd SOUNDLIST_CURSOR1
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	goto *com_tag_team_WHILE1

*com_tag_team_WEND1
	gosub *screen_draw
	return

*com_shape_change
	if ( cdata(CDATA_PIC, cc) < xy2pic(0, 21) | cdata(CDATA_PIC, cc) > xy2pic(31, 21) ) {
		cdata(CDATA_PIC_ORG, cc) = cdata(CDATA_PIC, cc)
		cdata(CDATA_PIC, cc) = xy2pic(1, 21)
	}
	create_pcpic cc, 0
	page = 0
	pagesize = 19
	cs = 0
	cs_bk = -1
	ww = 380
	wh = 340
	wx = (windoww - ww) / 2 + inf_screenx
	wy = winposy(wh)
	snd SOUNDLIST_PORT
	windowanime wx, wy, ww, wh, 40, 7
	gsel 4
	repeat 40
		s = exedir + "user\\graphic\\Pic_" + (cnt + 1) + ".bmp"
		exist s
		if ( strsize != (-1) ) {
			pos cnt * 80, 0
			picload s, 1
		}
	loop
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_mirror.bmp", 1
	gsel 0
	windowshadow = 1
	old_picture_to_restore = 0
	if ( cdata(CDATA_PIC, tc) < xy2pic(0, 21) | cdata(CDATA_PIC, tc) > xy2pic(31, 21) ) {
		old_picture_to_restore = 1
		cdata(CDATA_PIC_ORG, tc) = cdata(CDATA_PIC, tc)
		cdata(CDATA_PIC, tc) = xy2pic(1, 21)
	}
	listmax = 0
	if ( page == 0 ) {
		if ( gdata(GDATA_SENSE_OBJECT) == 0 ) {
            s = lang("Њ€’и    ", "Done    "), lang("ЊіЃX‚МЋp‚Й‚·‚й", "Original"), lang("“K—p ЃFPic_", "apply:Pic_")
        }
        else {
            s = lang("Њ€’и    ", "Done    "), "", lang("“K—p ЃFPic_", "apply:Pic_")
        }
		p = 3
	}
	repeat p
		list(0, cnt) = cnt
		listn(0, cnt) = s(cnt)
		listmax++
	loop
	keyrange = 0
	repeat p
		p = cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_enter
		keyrange++
	loop
*com_shape_change_WHILE1
	redraw 0
	pagesize = 0
	s = lang("ЊВ•К‰ж‘њ‚М•ПЌX", "Appearance"), lang("Ќ¶‰EѓLЃ[ [•ПЌX]  ·¬ЭѕЩ [•В‚¶‚й]", "Right,left [Change]  Shift,Esc [Close]")
	display_window (windoww - 380) / 2 + inf_screenx, winposy(340) - 12, 380, 300
	pagesize = listmax
	display_topic lang("ЌЂ–Ъ", "Category"), wx + 34, wy + 36
	pos wx + ww - 40, wy
	gcopy 3, 960, 96, 48, 120
	i++
	if ( i \ 100 < 45 ) {
		f = i \ 16
	}
	else {
		f++
	}
	window2 wx + 234, wy + 71, 88, 120, 1, 1
	picols = cdata(CDATA_CHARA_PIC, cc)
	if ( cdata(CDATA_PIC, cc) >= xy2pic(1, 21) & cdata(CDATA_PIC, cc) <= xy2pic(31, 21) ) {
		picols = 0
	}
	i = cdata(CDATA_PIC, cc) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT
	chara_preparepic cdata(CDATA_PIC, cc) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT, (cdata(CDATA_PIC, cc) - picols * COLOR_TINT_MULT) / COLOR_TINT_MULT
	pos wx + 276, wy + 130
	gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
	grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = cnt
		if ( p >= listmax ) {
			break
		}
		val = cnt, 0
		gosub *get_pic_selection
		s = listn(0, p)
		if ( rtval >= 0 ) {
			if ( rtval(2) >= 0 ) {
				s += " " + rtval(2)
			}
			else {
				if ( rtval(2) == (-1) ) {
					s += " N/A"
				}
				else {
					s += " u" + (abs(rtval(2)) - 1)
				}
			}
		}
		cs_list s, wx + 60, wy + 66 + cnt * 21 - 1, 19, 0
		if ( rtval == 100 ) {
			pos wx + 30, wy + 66 + cnt * 21 - 5
			gcopy 3, 312, 336, 24, 24
			pos wx + 175, wy + 66 + cnt * 21 - 5
			gcopy 3, 336, 336, 24, 24
		}
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	val = cs, 0
	gosub *get_pic_selection
	p = 0
	if ( rtval == (-2) | rtval == (-3) ) {
		if ( rtval == (-2) ) {
			if ( key == key_enter ) {
				cbitmod CHARA_BIT_PCC, cc, 0
				create_pcpic cc, 1
				gdata(GDATA_SENSE_OBJECT) = 0
				return 1
			}
		}
		if ( rtval == (-3) ) {
			if ( key == key_enter ) {
				if ( gdata(GDATA_SENSE_OBJECT) == 0 ) {
					cdata(CDATA_PIC, cc) = cdata(CDATA_PIC_ORG, cc)
					create_pcpic cc, 1
					gdata(GDATA_SENSE_OBJECT) = 0
					return 1
				}
				if ( gdata(GDATA_SENSE_OBJECT) == 1 ) {
					snd SOUNDLIST_FAIL1
				}
			}
		}
		if ( key == key_pageup | key == key_pagedown ) {
			key = ""
		}
	}
	else {
		if ( key == key_enter ) {
			key = key_pageup
		}
	}
	if ( key == key_pageup ) {
		snd SOUNDLIST_CURSOR1
		if ( rtval == 100 ) {
			if ( cdata(CDATA_PIC, cc) < xy2pic(31, 21) ) {
				cdata(CDATA_PIC, cc)++
			}
			goto *com_shape_change_WHILE1_CONTINUE
		}
	}
	if ( key == key_pagedown ) {
		snd SOUNDLIST_CURSOR1
		if ( rtval == 100 ) {
			if ( cdata(CDATA_PIC, cc) > xy2pic(1, 21) ) {
				cdata(CDATA_PIC, cc)--
			}
			goto *com_shape_change_WHILE1_CONTINUE
		}
	}
	create_pcpic cc, 0
	if ( key == key_cancel ) {

		/********** ANNA CUSTOM - BEGINNING **********/ // Fix for cancelling on shape change still changing the sprite pic

		if ( old_picture_to_restore == 1 ) {
			cdata(CDATA_PIC, cc) = cdata(CDATA_PIC_ORG, cc)
			cdata(CDATA_CHARA_PIC, cc) = cdata(CDATA_CHARA_PIC_ORG, cc)
		}

		/********** ANNA CUSTOM - ENDING **********/

		create_pcpic cc, 1
		gdata(GDATA_SENSE_OBJECT) = 0
		return 0
	}
	if ( mode == MODELIST_CHARA_CREATION ) {
		getkey p, 112
		if ( p ) {
			gdata(GDATA_SENSE_OBJECT) = 0
			return -1
		}
	}
*com_shape_change_WHILE1_CONTINUE
	goto *com_shape_change_WHILE1

*com_portrait
	create_pcpic cc, 0
	page = 0
	pagesize = 19
	cs = 0
	cs_bk = -1
	ww = 380
	wh = 340
	wx = (windoww - ww) / 2 + inf_screenx
	wy = winposy(wh)
	snd SOUNDLIST_PORT
	windowanime wx, wy, ww, wh, 40, 7
	gsel 4
	buffer 4, FACE_SIZE_WIDTH, FACE_SIZE_HEIGHT
	pos 0, 0
	if ( cdata(CDATA_PORTRAIT, cc) < 80 ) {
		picload exedir + "graphic\\face1.bmp", 1
	}
	else {
		picload exedir + "graphic\\face2.bmp", 1
	}
	buffer 7, 3200, 112
	color 0, 0, 0
	boxf
	repeat 40
		s = exedir + "user\\graphic\\face" + (cnt + 1) + ".bmp"
		exist s
		if ( strsize != (-1) ) {
			pos cnt * 80, 0
			picload s, 1
		}
	loop
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_mirror.bmp", 1
	gsel 0
	windowshadow = 1
*com_portrait_loop
	listmax = 0
	if ( page == 0 ) {
		s = lang("Њ€’и    ", "Done    "), lang("ЏС‘њЃ@Ѓ@", "Portrait"), lang("”ЇЃ@Ѓ@Ѓ@", "Hair    "), lang("•›”ЇЃ@Ѓ@", "Sub Hair"), lang("”Ї‚МђFЃ@", "Hair CL "), lang("‘МЃ@Ѓ@Ѓ@", "Body    "), lang("•ћЃ@Ѓ@Ѓ@", "Cloth   "), lang("КЯЭВЃ@Ѓ@", "Pants   "), lang("ЏЪЌЧђЭ’и", "Set Detail")
		if ( cc != CHARA_PLAYER ) {
			s(9) = lang("¶ЅАС·¬Ч ", "Custom  ")
		}
		else {
			s(9) = lang("Џж”nЋћЃ@", "Riding  ")
		}
		p = 9 + (cc != CHARA_PLAYER) + (cc == CHARA_PLAYER) * (gdata(GDATA_RIDER) != 0)
	}
	else {
		s = lang("‘М‚МђFЃ@", "Body CL "), lang("•ћ‚МђFЃ@", "Cloth CL"), lang("КЯЭВ‚МђF", "Pants CL"), lang("±ёѕ»Ш1Ѓ@", "Etc1    "), lang("±ёѕ»Ш2Ѓ@", "Etc2    "), lang("±ёѕ»Ш3Ѓ@", "Etc3    "), lang("–ЪЃ@Ѓ@Ѓ@", "Eyes    "), lang("Љо–{ђЭ’и", "Set Basic")
		p = 8
	}
	repeat p
		list(0, cnt) = cnt
		listn(0, cnt) = s(cnt)
		listmax++
	loop
	keyrange = 0
	repeat p
		p = cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_enter
		keyrange++
	loop
*com_portrait_loop_WHILE1
	redraw 0
	pagesize = 0
	s = lang("ЏС‘њ‚М•ПЌX", "Appearance"), lang("Ќ¶‰EѓLЃ[ [•ПЌX]  ·¬ЭѕЩ [•В‚¶‚й]", "Right,left [Change]  Shift,Esc [Close]")
	display_window (windoww - 380) / 2 + inf_screenx, winposy(340) - 12, 380, 340
	pagesize = listmax
	display_topic lang("ЌЂ–Ъ", "Category"), wx + 34, wy + 36
	pos wx + ww - 40, wy
	gcopy 3, 960, 96, 48, 120
	i++
	if ( i \ 100 < 45 ) {
		f = i \ 16
	}
	else {
		f++
	}
	window2 wx + 234, wy + 71, 88, 120, 1, 1
	if ( cs == 1 & page == 0 ) {
		if ( cdata(CDATA_PORTRAIT, cc) >= 0 ) {
			if ( cdata(CDATA_PORTRAIT, cc) < 80 ) {
				p = cdata(CDATA_SEX, cc) * 80 + cdata(CDATA_PORTRAIT, cc)
			}
			else {
				p = cdata(CDATA_SEX, cc) * 80 + cdata(CDATA_PORTRAIT, cc) - 80
			}
			pos wx + 238, wy + 75
			gzoom 80, 112, 4, p \ 16 * 48, p / 16 * 72, 48, 72
		}
		else {
			if ( cdata(CDATA_PORTRAIT, cc) != (-1) ) {
				pos wx + 238, wy + 75
				gzoom 80, 112, 7, abs(cdata(CDATA_PORTRAIT, cc) + 2) * 80, 0, 80, 112
			}
		}
	}
	else {
		if ( cbit(CHARA_BIT_PCC, cc) == 1 ) {
			if ( cfg_pcc_show == 0 ) {
				pos wx + 276, wy + 126
				gmode 2, 32, 48
			}
			if ( cfg_pcc_show == 1 ) {
				pos wx + 276, wy + 130
				gmode 2, 32, 48
			}
			if ( cfg_pcc_show == 0 ) {
				grotate 10 + cc, f / 4 \ 4 * 32, f / 16 \ 4 * 48, 0, 48, 80
			}
			if ( cfg_pcc_show == 1 ) {
				grotate 10 + cc, f / 4 \ 4 * 32, f / 16 \ 4 * 48, 0, 32, 48
			}
		}
		else {
			picols = cdata(CDATA_CHARA_PIC, cc)
			if ( cdata(CDATA_PIC, cc) >= xy2pic(1, 21) & cdata(CDATA_PIC, cc) <= xy2pic(31, 21) ) {
				picols = 0
			}
			i = cdata(CDATA_PIC, cc) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT
			chara_preparepic cdata(CDATA_PIC, cc) \ COLOR_TINT_MULT + picols * COLOR_TINT_MULT, (cdata(CDATA_PIC, cc) - picols * COLOR_TINT_MULT) / COLOR_TINT_MULT
			pos wx + 276, wy + 130
			gmode 2, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
			grotate 5, 0, 960, 0, chipc(CHIPC_WIDTH, i), chipc(CHIPC_HEIGHT, i)
		}
	}
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = cnt
		if ( p >= listmax ) {
			break
		}
		val = cnt, 0
		gosub *portrait_item
		s = listn(0, p)
		if ( rtval >= 0 ) {
			if ( rtval(2) >= 0 ) {
				s += " " + rtval(2)
			}
			else {
				if ( rtval(2) == (-1) ) {
					s += " N/A"
				}
				else {
					s += " u" + (abs(rtval(2)) - 1)
				}
			}
		}
		cs_list s, wx + 60, wy + 66 + cnt * 21 - 1, 19, 0
		if ( rtval != (-2) ) {
			pos wx + 30, wy + 66 + cnt * 21 - 5
			gcopy 3, 312, 336, 24, 24
			pos wx + 175, wy + 66 + cnt * 21 - 5
			gcopy 3, 336, 336, 24, 24
		}
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	val = cs, 0
	gosub *portrait_item
	p = 0
	if ( rtval == (-2) ) {
		if ( key == key_enter ) {
			create_pcpic cc, 1
			return 1
		}
		if ( key == key_pageup | key == key_pagedown ) {
			key = ""
		}
	}
	else {
		if ( key == key_enter ) {
			key = key_pageup
		}
	}
	if ( rtval == (-1) ) {
		if ( key == key_pageup | key == key_pagedown ) {
			snd SOUNDLIST_CURSOR1
			if ( page == 0 ) {
				page = 1
			}
			else {
				page = 0
				cs = 8
			}
			goto *com_portrait_loop
		}
	}
	if ( key == key_pageup ) {
		snd SOUNDLIST_CURSOR1
		if ( rtval == 100 ) {
			if ( cdata(CDATA_PORTRAIT, cc) < 32 - 1 ) {
				cdata(CDATA_PORTRAIT, cc)++
			}
			goto *com_portrait_loop_WHILE1_CONTINUE
		}
		if ( rtval == 101 ) {
			cbitmod CHARA_BIT_PCC, cc, 1
			goto *com_portrait_loop_WHILE1_CONTINUE
		}
		if ( rtval(1) == 0 ) {
			exist exedir + "\\graphic\\PCCs\\pcc_" + rtvaln + "_" + (pcc(rtval, cc) \ COLOR_TINT_MULT + 1) + ".bmp"
			if ( strsize != (-1) ) {
				pcc(rtval, cc)++
				p = 1
			}
		}
		else {
			if ( pcc(rtval, cc) / COLOR_TINT_MULT < MAX_COLOR - 1 ) {
				pcc(rtval, cc) += COLOR_TINT_MULT
				p = 1
			}
		}
	}
	if ( key == key_pagedown ) {
		snd SOUNDLIST_CURSOR1
		if ( rtval == 100 ) {
			if ( cdata(CDATA_PORTRAIT, cc) > (-41) ) {
				cdata(CDATA_PORTRAIT, cc)--
			}
			goto *com_portrait_loop_WHILE1_CONTINUE
		}
		if ( rtval == 101 ) {
			cbitmod CHARA_BIT_PCC, cc, 0
			goto *com_portrait_loop_WHILE1_CONTINUE
		}
		if ( rtval(1) == 0 ) {
			exist exedir + "\\graphic\\PCCs\\pcc_" + rtvaln + "_" + (pcc(rtval, cc) \ COLOR_TINT_MULT - 1) + ".bmp"
			if ( pcc(rtval, cc) \ COLOR_TINT_MULT == 1 & rtval != 15 | strsize != (-1) ) {
				pcc(rtval, cc)--
				p = 1
			}
		}
		else {
			if ( pcc(rtval, cc) / COLOR_TINT_MULT > 0 ) {
				pcc(rtval, cc) -= COLOR_TINT_MULT
				p = 1
			}
		}
	}
	if ( p ) {
		create_pcpic cc, 0
	}
	if ( key == key_cancel ) {
		create_pcpic cc, 1
		return 0
	}
	if ( mode == MODELIST_CHARA_CREATION ) {
		getkey p, 112
		if ( p ) {
			return -1
		}
	}
*com_portrait_loop_WHILE1_CONTINUE
	goto *com_portrait_loop_WHILE1

*com_mirror
	create_pcpic cc, 1
	snd SOUNDLIST_POP2
	page = 0
	pagesize = 18
	cs = 0
	cs_bk = -1
	windowshadow = 1
	listmax = 0
	s = lang("Њ€’и    ", "Done    "), lang("‹№•”ЉZЃ@", "Chest   "), lang("‹r•”ЉZЃ@", "Leg     "), lang("ѓxѓ‹ѓgЃ@", "Belt    "), lang("ёЮЫ°МЮЃ@", "Glove   "), lang("ѓ}ѓ“ѓgЃ@", "Mantle  ")
	p = 6
	repeat p
		list(0, cnt) = cnt
		listn(0, cnt) = s(cnt)
		listmax++
	loop
	keyrange = 0
	repeat p
		p = cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_enter
		keyrange++
	loop
*com_mirror_loop_WHILE1
	redraw 0
	pagesize = 0
	s = lang("‘•”х•\Ћ¦‚М•ПЌX", "Parts to hide"), lang("Ќ¶‰EѓLЃ[ [•ПЌX]  ·¬ЭѕЩ [•В‚¶‚й]", "Right,left [Change]  Shift,Esc [Close]")
	display_window (windoww - 360) / 2 + inf_screenx, winposy(289) - 12, 360, 289
	s = lang("ЌЂ–Ъ", "Part")
	pagesize = listmax
	display_topic s, wx + 34, wy + 36
	i++
	if ( i \ 100 < 45 ) {
		f = i \ 16
	}
	else {
		f++
	}
	window2 wx + 234, wy + 60, 88, 120, 1, 1
	if ( cfg_pcc_show == 0 ) {
		pos wx + 276, wy + 116
		gmode 2, 32, 48
	}
	if ( cfg_pcc_show == 1 ) {
		pos wx + 276, wy + 120
		gmode 2, 32, 48
	}
	if ( cfg_pcc_show == 0 ) {
		grotate 10 + cc, f / 4 \ 4 * 32, f / 16 \ 4 * 48, 0, 48, 80
	}
	if ( cfg_pcc_show == 1 ) {
		grotate 10 + cc, f / 4 \ 4 * 32, f / 16 \ 4 * 48, 0, 32, 48
	}
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = cnt
		if ( p >= listmax ) {
			break
		}
		s = listn(0, p)
		if ( cnt != 0 ) {
			if ( pcc(PCC_HIDE_CHEST + cnt - 1, cc) == 0 ) {
				s += "On"
			}
			else {
				s += "Off"
			}
			pos wx + 30, wy + 66 + cnt * 21 - 5
			gcopy 3, 312, 336, 24, 24
			pos wx + 175, wy + 66 + cnt * 21 - 5
			gcopy 3, 336, 336, 24, 24
		}
		cs_list s, wx + 60, wy + 66 + cnt * 21 - 1, 19, 0
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	if ( cs != 0 ) {
		if ( key == key_enter ) {
			key = key_pageup
		}
		if ( key == key_pageup | key == key_pagedown ) {
			if ( pcc(PCC_HIDE_CHEST + cs - 1, cc) == 0 ) {
				pcc(PCC_HIDE_CHEST + cs - 1, cc) = 1
			}
			else {
				pcc(PCC_HIDE_CHEST + cs - 1, cc) = 0
			}
			create_pcpic cc, 1
			snd SOUNDLIST_CURSOR1
		}
	}
	if ( cs == 0 & key == key_enter | key == key_cancel ) {
		snd SOUNDLIST_OK1
		create_pcpic cc, 1
		return 1
	}
	goto *com_mirror_loop_WHILE1

*com_calcAttack
	p(1) = 0, 0
	attackskill = SKILL_WEAPON_MARTIAL_ARTS
	ammo = -1
	attacknum = 0
	repeat MAX_EQUIP_SLOT_TOTAL
		body = CDATA_STARTING_EQUIP_SLOTS + cnt
		if ( cdata(body, cc) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_SHOOT ) {
			continue
		}
		if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_AMMO ) {
			continue
		}
		cw = cdata(body, cc) \ EXT_EQUIP_SLOTS - 1
		if ( inv(INV_ITEM_DICE1, cw) > 0 ) {
			attackskill = inv(INV_ITEM_SKILL_REF, cw)
			if ( iequiploc(cw) == EQUIP_SLOT_SHOOT ) {
				attackskill = SKILL_WEAPON_BLUNT
			}
			p(1)++
			s(1) = lang("•ђЉн", "Melee") + p(1)
			attacknum++
			gosub *com_skill_calcAttack
		}
	loop
	if ( attackskill == SKILL_WEAPON_MARTIAL_ARTS ) {
		s(1) = lang("Љi“¬", "Unarmed")
		gosub *com_skill_calcAttack
	}
	attacknum = 0
	gosub *FindRangeWeapon
	if ( stat == 1 ) {
		s(1) = lang("ЋЛЊ‚", "Dist")
		if ( iequiploc(cw) == EQUIP_SLOT_HAND ) {
			attackskill = SKILL_WEAPON_THROWING
		}
		gosub *com_skill_calcAttack
	}
	return

*com_skill_calcAttack
	tc = cc
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
	color 20, 10, 0
	if ( val == 0 ) {
		pos wx + 590, wy + 281 + p(2) * 16
		mes lang("–Ѕ’†", "Hit")
		pos wx + 422, wy + 281 + p(2) * 16
		mes s(1)
	}
	attackrange = 0
	if ( refitem(inv(INV_ITEM_ID, cw), DBSPEC_TYPE) == FILTER_RANGE ) {
		attackrange = 1
	}
	attackvar = 0
	hit = calcattackhit(1)
	dmg = calcattackdmg(1)
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 0, 0, 0
	s(2) = "" + dmgmulti
	s = "" + tohit + "%"
	if ( val == 0 ) {
		pos wx + 625 - en * 8, wy + 279 + p(2) * 16
		mes s
	}
	else {
		s(3) = s
	}
	s = "" + dice1 + "d" + dice2 + cnvfix(dmgfix) + " x" + strmid(s(2), 0, 3 + (int(s(2)) >= 10) + (int(s(2)) >= 100))
	if ( val == 0 ) {
		pos wx + 460 + en * 8, wy + 279 + p(2) * 16
		mes s
	}
	else {
		noteadd s(1) + "   : " + fixtxt(s(3), 12) + " " + fixtxt(s, 20)
	}
	p(2)++
	return

*show_weaponStat
	attacknum = 0
	repeat MAX_EQUIP_SLOT_TOTAL
		body = CDATA_STARTING_EQUIP_SLOTS + cnt
		if ( cdata(body, cc) / EXT_EQUIP_SLOTS != 5 ) {
			continue
		}
		if ( cdata(body, cc) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		cw = cdata(body, cc) \ EXT_EQUIP_SLOTS - 1
		if ( inv(INV_ITEM_DICE1, cw) == 0 ) {
			continue
		}
		attacknum++
		if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_TWOHAND ) {
			if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
				txt lang("‘•”х’†‚М" + itemname(cw) + "‚Н—јЋи‚Й‚µ‚Б‚­‚и‚Ж‚Ё‚і‚Ь‚йЃB", itemname(cw) + " fits well for two-hand fighting style.")
			}
			else {
				txt lang("‘•”х’†‚М" + itemname(cw) + "‚Н—јЋиЋќ‚ї‚Й‚Н‚в‚вЊy‚·‚¬‚йЃB", itemname(cw) + " is too light for two-hand fighting style.")
			}
		}
		if ( cdata(CDATA_ATTACK_STYLE, cc) & STYLE_DUAL_WIELD ) {
			if ( attacknum == 1 ) {
				if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
					if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
						txt lang("‘•”х’†‚М" + itemname(cw) + "‚Н—Ћи‚Е€µ‚¤‚Й‚аЏd‚·‚¬‚йЃB", itemname(cw) + " is too heavy for two-wield fighting style.")
					}
				}
			}
			else {
				if ( inv(INV_ITEM_WEIGHT, cw) > 1500 ) {
					if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
						txt lang("‘•”х’†‚М" + itemname(cw) + "‚Н•РЋи‚Е€µ‚¤‚Й‚НЏd‚·‚¬‚йЃB", itemname(cw) + " is too heavy for two-wield fighting style.")
					}
				}
			}
		}
	loop
	if ( cc == CHARA_PLAYER ) {
		if ( gdata(GDATA_RIDER) != 0 ) {
			if ( findbuff(cc, BUFF_SUPER_ARMOR) == (-1) | cdata(CDATA_EQUIP_WEIGHT, cc) < 35000 ) {
				if ( inv(INV_ITEM_WEIGHT, cw) >= 4000 ) {
					txt lang("‘•”х’†‚М" + itemname(cw) + "‚НЏж”n’†‚Й€µ‚¤‚Й‚НЏd‰Я‚¬‚йЃB", itemname(cw) + " is too heavy to use when riding.")
				}
			}
		}
	}
	return

#define calcDvPv(%1)\
	dvfix = cdata(CDATA_DV_FIX, %1) %c\
	pvfix = cdata(CDATA_PV_FIX, %1) %c\
	if ( cdata(CDATA_DV, %1) < 0 ) { %c\
		dvfix = 100%c\
	} %c\
	if ( cdata(CDATA_PV, %1) < 0 ) { %c\
		pvfix = 100 %c\
	} %c\
	dvr1 = cdata(CDATA_DV, %1) * dvfix / 100 + dvfix - 100 %c\
	pvr1 = (cdata(CDATA_PV, %1) + pvfix / 25) * pvfix / 100 %c\
	if ( cdata(CDATA_DRAIN_HP, %1) >= 100 ) { %c\
		dvr1 = 0 %c\
		pvr1 = 0 %c\
	}

*com_wear
	procid = (procid + 1) \ 4
	proclist(procid) = "com_wear" + " ct:" + ct
	cc = CHARA_PLAYER
	page = 0
	pagesize = 14
	listmax = 0
	cs = 0
	cs_bk = -1
	if ( cs_prev != 0 ) {
		cs = cs_prev
		cs_prev = 0
	}
	curmenu = 1
	mainhand = 0
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, cc) != 0 ) {
			if ( trait(TRAIT_ETHER_EQUIP_NECK) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_NECK ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_EQUIP_LEG) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_LEG ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_EQUIP_BACK) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_BACK ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_EQUIP_HEAD) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HEAD ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_BONES) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_BODY ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_BLADE_HANDS) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_WEBBED) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_RING ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_THICK_ARMS) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_ARM ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_TAIL) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_WAIST ) {
					continue
				}
			}
			if ( mainhand == 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
					mainhand = cnt
				}
			}
			list(0, listmax) = cnt, cdata(cnt, cc) / EXT_EQUIP_SLOTS
			listmax++
		}
	loop
	gosub *sort_list
	redraw 0
	drawmenu
	ww = 690
	wh = 380
	wx = (windoww - 690) / 2 + inf_screenx
	wy = winposy(380)
	if ( nowindowanime == 0 ) {
		snd SOUNDLIST_WEAR
	}
	windowanime wx, wy, ww, wh, 10, 4
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_wear.bmp", 1
	gsel 0
	windowshadow = 1
*com_wear_loop_pgchk
	page_check
*com_wear_loop
	redraw 0
	s = lang("‘•”х•i", "Equipment"), strhint5 + strhint5b + strhint3
	display_window (windoww - 690) / 2 + inf_screenx, winposy(428), 690, 428, 64
	display_topic lang("•”€К/‘•”х•i–јЏМ", "Category/Name"), wx + 28, wy + 30
	if ( showresist == 0 ) {
		display_topic lang("Џd‚і", "Weight"), wx + 524, wy + 30
	}
	pos wx + 46, wy - 16
	gcopy 3, 288 + 10 * 48, 48, 48, 48
	pos wx + ww - 106, wy
	gcopy 3, 960, 96, 96, 120
	pos wx, wy + wh - 164
	gcopy 3, 960, 216, 72, 144
    calcDvPv cc
	if ( showresist ) {
		pos wx + 320, wy + 40
		color 0, 0, 0

		/********** ORIGINAL - BEGINNING **********

		mes lang("‰О —в —‹ €Е Њ¶ “Е Ќ– ‰№ ђ_ “Ч –‚", "Fi Co Li Da Mi Po Nt So Nr Ch Ma")

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/ // Show skills on 'z' toggle

		switch showresist
			case 1
				mes lang("‰О —в —‹ €Е Њ¶ “Е Ќ– ‰№ ђ_ “Ч –‚", "Fi Co Li Da Mi Po Nt So Nr Ch Ma")
				swbreak
			case 2
				mes "Li Mn St Co Dx Pe Lr Wi Mg Ch Sp"
				swbreak
			case 3
				mes "Lu Ls Ss Ax Bl Po Sv Mr Sc Bo Cb"
				swbreak
			case 4
				mes "Fr Tr Lt Ge Ta Wl He Md Ne Sl Lp"
				swbreak
			case 5
				mes "Dt In An Sq Mi Mc Me Dw Th Sh Ha"
				swbreak
			case 6
				mes "Ma La Ca Ev Dv Di Cr Tl Al Je Ga"
				swbreak
			case 7
				mes "Fa Tv Pr Ck Fi Em Gv Cm Mk Sw Pp"
				swbreak
			case 8
				mes "Rd"
				swbreak
		swend

		/********** ANNA CUSTOM - ENDING **********/

	}
	display_note lang("‘•”хЏd—К: ", "Equip weight: ") + cnvweight(cdata(CDATA_EQUIP_WEIGHT, cc)) + cnveqweight(cc) + lang(" –Ѕ’†ЏCђі:", " Hit Bonus:") + cdata(CDATA_ATTACK, cc) + lang(" ѓ_ѓЃЃ[ѓWЏCђі:", " Damage Bonus:") + cdata(CDATA_DAMAGE, cc) + "  DV/PV:" + dvr1 + "/" + pvr1
	color 0, 0, 0
	font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 1
	gmode 2
	keyrange = 0
	f = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 100, wy + 60 + cnt * 19
			gfini 558, 18
			gfdec 12, 14, 16
		}
		q = bodyn(list(1, p))
		if ( list(0, p) == mainhand ) {
			q = lang("—Ћи", "Hand*")
		}
		pos wx + 22, wy + 60 + cnt * 19 - 4
		gcopy 3, 600 + (list(1, p) - 1) * 24, 336, 24, 24
		pos wx + 46, wy + 60 + cnt * 19 + 3
		mes q
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 0, 0, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		display_key wx + 88, wy + 60 + cnt * 19 - 2, cnt
		p(1) = cdata(list(0, p), cc)
		s = "-    ", "-"
		if ( p(1) \ 10000 != 0 ) {
			p(1) = p(1) \ 10000 - 1
			s = itemname(p(1)), cnvweight(inv(INV_ITEM_WEIGHT, p(1)))
			p(2) = inv(INV_ITEM_PIC, p(1))

            preparePicItem p(2), inv(INV_ITEM_COL, p(1))

			pos wx + 126, wy + 70 + cnt * 19
			gmode 2, inf_tiles, inf_tiles
			grotate 1, 0, 960, 0, chipi(CHIPI_WIDTH, p(2)), chipi(CHIPI_HEIGHT, p(2))
			if ( showresist ) {

				/********** ORIGINAL - BEGINNING **********

				equipinfo p(1), wx + 320, wy + 60 + cnt * 19 + 2

				 ********** ORIGINAL - ENDING **********/

				/********** ANNA CUSTOM - BEGINNING **********/ // Show skills on 'z' toggle

				if ( showresist == 1 ) {
					equipinfo p(1), wx + 320, wy + 60 + cnt * 19 + 2
				}
				else {
					equipinfo2 p(1), wx + 320, wy + 60 + cnt * 19 + 2, showresist
				}

				/********** ANNA CUSTOM - ENDING **********/

				s = strmid(s, 0, 22)
			}
		}
		else {
			p(1) = -1
		}
		cs_list s, wx + 140 - 26, wy + 60 + cnt * 19 - 1, 19, 30, p(1) != (-1), p(1)
		pos wx + 640 - strlen(s(1)) * 7, wy + 60 + cnt * 19 + 2
		mes s(1)
	loop
	cs_bk = cs
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( p != (-1) ) {
		cs_prev = cs
		body = p
		if ( cdata(body, cc) \ EXT_EQUIP_SLOTS != 0 ) {
			gdata(GDATA_EQUIP_CHANGE) = 1
			ci = cdata(body, cc) \ EXT_EQUIP_SLOTS - 1
			if ( inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_CURSED | inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_DOOMED ) {
				txt lang(itemname(ci) + "‚НЉO‚№‚И‚ўЃB", "" + itemname(ci) + " can't be taken off.")
				goto *com_wear_loop_pgchk
			}
			if ( cdata(CDATA_CONDITION_BRAINWASH, cc) != 0 ) {
				txt lang(name(cc) + "‚Н“Є‚Є‚Ъ‚с‚в‚и‚µ‚Д‘•”х‚р•ПЌX‚Е‚«‚И‚ўЃcЃB", name(cc) + " " + is(cc) + " confused and can't change " + his(cc) + " equipment.")
				goto *com_wear_loop_pgchk
			}
			r1 = cc
			gosub *act_unequip
			r1 = cc
			gosub *charaRefresh
			snd SOUNDLIST_EQUIP1
			txtnew
			txt lang(itemname(ci) + "‚рЉO‚µ‚ЅЃB", "You unequip " + itemname(ci) + ".")
			if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
				gosub *show_weaponStat
			}
			redraw 0
			gosub *screen_drawStatus
			goto *com_wear_loop_pgchk
		}
		nowindowanime = 1
		menucycle = 0
		invctrl = 6
		snd SOUNDLIST_INV
		goto *com_inventory
	}
	if ( key == key_identify ) {
		p = list(0, pagesize * page + cs)
		if ( cdata(p, cc) \ 10000 != 0 ) {
			ci = cdata(p, cc) \ 10000 - 1
			cs_prev = cs
			gosub *com_identify
			nowindowanime = 1
			returnfromidentify = 0
			screenupdate = -1
			gosub *screen_draw
			goto *com_wear
		}
	}
	if ( key == key_mode ) {

		/********** ORIGINAL - BEGINNING **********

		if ( showresist == 1 ) {
			showresist = 0
		}
		else {
			showresist = 1
		}

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/ // Show skills on 'z' toggle

		if ( showresist == 8 ) {
			showresist = 0
		}
		else {
			showresist++
		}

		/********** ANNA CUSTOM - ENDING **********/

		snd SOUNDLIST_POP1
		goto *com_wear_loop_pgchk
	}
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			p = curmenu
			if ( key == key_next ) {
				curmenu++
				if ( curmenu > 3 ) {
					curmenu = 0
				}
			}
			if ( key == key_prev ) {
				curmenu--
				if ( curmenu < 0 ) {
					curmenu = 3
				}
			}
			if ( p != curmenu ) {
				screenupdate = -1
				gosub *screen_draw
				if ( curmenu == 0 ) {
					csctrl = 0
					goto *com_charainfo
				}
				if ( curmenu == 1 ) {
					goto *com_wear
				}
				if ( curmenu == 2 ) {
					goto *com_trait
				}
				if ( curmenu == 3 ) {
					goto *com_material
				}
			}
		}
	}
	page_change *com_wear_loop_pgchk
	if ( key == key_cancel ) {
		menucycle = 0
		create_pcpic cc, 1
		gosub *screen_draw
		goto *pc_turn
	}
	goto *com_wear_loop

*com_get
	if ( map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 6) != 0 ) {
		if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
			cell_itemoncell cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
			if ( stat == 0 ) {
				cell_featread cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
				if ( feat(1) == CELL_FEATURE_PLANTED_SEED ) {
					if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
						if ( feat < tile_plant + 2 ) {
							txt lang("‰и‚р“E‚ЭЋж‚Б‚ЅЃB", "You nip a young plant.")
							map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 6) = 0
							goto *turn_end
						}
						if ( feat == tile_plant + 3 ) {
							txt lang("ЊН‚к‚Ѕ‘ђ‚р“E‚ЭЋж‚Б‚ЅЃB", "You nip a dead plant.")
							map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 6) = 0
							goto *turn_end
						}
						if ( inv_getspace(CHARA_PLAYER) == 0 ) {
							txt_invfull
							gosub *screen_draw
							goto *pc_turn
						}
						if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
							if ( inv_sum(CHARA_PLAYER) > 20 ) {
								txt_invfull
								gosub *screen_draw
								goto *pc_turn
							}
						}
						gosub *item_seedPick
						if ( chipm(CHIPM_ROLE, map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0)) == MAP_CHIP_ROLE_CROP ) {
							val = 1
						}
						else {
							val = 0
						}
						gosub *item_seedRegrowth
						if ( feat(FEAT_CELL_SUB_FEATURE_ID) \ 10 == SEED_TYPE_STRANGE ) {
							autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
						}
						gosub *calcBurdenPc
						goto *turn_end
					}
				}
				if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
					if ( feat(FEAT_CELL_FEATURE_ID) == CELL_FEATURE_NEFIA ) {
						if ( feat(FEAT_CELL_SUB_FEATURE_ID) + feat(FEAT_CELL_PARAM_1) * 100 >= 300 & feat(FEAT_CELL_SUB_FEATURE_ID) + feat(FEAT_CELL_PARAM_1) * 100 < 450 ) {
							area = feat(FEAT_CELL_SUB_FEATURE_ID) + feat(FEAT_CELL_PARAM_1) * 100
							if ( adata(ADATA_ARENA_WIN, area) == (-1) ) {
								snd SOUNDLIST_FAIL1
								txt lang("‚±‚МЊљ•Ё‚Н€ЪђЭ‚·‚й‚Ь‚Е“P‹Ћ‚Е‚«‚И‚ўЃB", "You can not remove the building until relocation.")
								goto *pc_turn
							}
							txt lang("–{“–‚Й‚±‚МЊљ•Ё‚р“P‹Ћ‚·‚йЃHЃi’Ќ€УЃIЊљ•Ё‚Ж’†‚М•Ё‚НЉ®‘S‚ЙЋё‚н‚к‚Ь‚·Ѓj", "Really remove this building?")
							promptYesNo
							if ( rtval != 0 ) {
								gosub *screen_draw
								goto *pc_turn
							}
							area = feat(2) + feat(3) * 100
							map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 6) = 0
							adata(ADATA_ID, area) = AREA_NONE
							removeworker area
							gosub *world_refresh
							fmode = 13
							gosub *game_ctrlFile
							snd SOUNDLIST_BUILD1
							txt lang("Њљ•Ё‚р“P‹Ћ‚µ‚ЅЃB", "You remove the building.")
							goto *turn_end
						}
					}
				}
			}
		}
	}
	cell_itemoncell cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
	if ( stat == 0 ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_TOWN | mdata(MDATA_TYPE) == MAP_TYPE_VILLAGE ) {
			if ( chipm(CHIPM_ROLE, map(cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0)) == MAP_CHIP_ROLE_SNOW ) {
				snd SOUNDLIST_FOOT2A
				txt lang("ђб‚р‚©‚«‚ ‚В‚Я‚ЅЃB", "You rake up a handful of snow.")
				actionsp CHARA_PLAYER, 10
				if ( stat == 0 ) {
					txt lang("”жJ‚µ‰Я‚¬‚ДЋё”s‚µ‚ЅЃI", "You are too exhausted!")
					goto *turn_end
				}
				flt
				itemcreate 0, ITEM_ID_HANDFUL_SNOW, -1, -1, 0
				if ( stat != 0 ) {
					inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_NORMAL
					inv(INV_ITEM_KNOWN, ci) = ITEM_KNOWN_FULL
					item_stack CHARA_PLAYER, ci, 1
				}
				goto *turn_end
			}
		}
		msgdup++
		txt lang("‚ ‚И‚Ѕ‚Н‹у‹C‚р‚В‚©‚с‚ѕЃB", "You grasp at the air.")
		gosub *screen_draw
		goto *pc_turn
	}
	ci = rtval(1)
	if ( rtval > 1 ) {
		invctrl = 3
		snd SOUNDLIST_INV
		goto *com_inventory
	}
	if ( inv(INV_ITEM_PROPERTY, ci) > PROP_NONE & inv(INV_ITEM_PROPERTY, ci) < PROP_CONSTRUCT | inv(INV_ITEM_PROPERTY, ci) == PROP_SPECIAL ) {
		snd SOUNDLIST_FAIL1
		msgdup++
		if ( inv(INV_ITEM_PROPERTY, ci) == PROP_SHOP ) {
			txt lang("‚»‚к‚НЋќ‚ї‰^‚Ч‚И‚ўЃB", "You can't carry it.")
		}
		if ( inv(INV_ITEM_PROPERTY, ci) == PROP_NPC | inv(INV_ITEM_PROPERTY, ci) == PROP_SPECIAL ) {
			txt_notyours

			/********** ANNA/BLOODYSHADE CUSTOM - BEGINNING **********/

			/*******************************************************************************
			The following sections of code adds a "Yes/No" dialogue box when attempting to pick up items
			that do not belong to you outside of quests and moongates, providing a shortcut to stealing.
			********************************************************************************/

			if ( sdata(SKILL_ACTIVE_PICKPOCKET, CHARA_PLAYER) != 0 & adata(ADATA_ID, gdata(GDATA_AREA)) != AREA_SHOW_HOUSE & gdata(GDATA_QUEST) != QUEST_TYPE_HUNTEX & gdata(GDATA_QUEST) != QUEST_TYPE_CONQUER & TweakData(TWEAK_UI_DISPLAY_PICKPOCKET_SHORTCUT, TWEAK_CATEGORY_UI) == 1 ) {
				s = itemname(ci, inv(INV_ITEM_NUM, ci)), cnvweight(inv(INV_ITEM_WEIGHT, ci) * inv(INV_ITEM_NUM, ci))
				s(1) = cnvweight(inv(INV_ITEM_WEIGHT, ci))
				txt lang("‚»‚к‚р“ђ‚а‚¤‚Ж‚µ‚Д‚ў‚Ь‚·‚©ЃH", "You see a " + s + " weight " + s(1) + ". Do you want to attempt to steal it?")
				promptYesNo
				if ( rtval == 0 ) {
					if ( cc == CHARA_PLAYER ) {
						if ( cdata(CDATA_SP, CHARA_PLAYER) < 50 ) {
							if ( cdata(CDATA_SP, CHARA_PLAYER) < rnd(75) ) {
								txt lang("”жJ‚µ‰Я‚¬‚ДЋё”s‚µ‚ЅЃI", "You are too exhausted!")
								dmgsp CHARA_PLAYER, sdataref(SKILL_DATAREF_COST, SKILL_ACTIVE_PICKPOCKET) / 2 + 1
								ens = 0
								goto *turn_end
							}
						}
						dmgsp CHARA_PLAYER, rnd(sdataref(SKILL_DATAREF_COST, SKILL_ACTIVE_PICKPOCKET) / 2 + 1) + sdataref(SKILL_DATAREF_COST, SKILL_ACTIVE_PICKPOCKET) / 2 + 1
					}
					gdata(GDATA_ROW_ACT) = ACTION_STEAL
					gosub *generalAct
					goto *turn_end
				}
			}

			/********** ANNA/BLOODYSHADE CUSTOM - ENDING **********/

		}
		gosub *screen_draw
		goto *pc_turn
	}
	in = inv(INV_ITEM_NUM, ci)
	gosub *act_get
	if ( stat == 1 | stat == (-1) ) {
		goto *turn_end
	}
	else {
		gosub *screen_draw
		goto *pc_turn
	}

*com_allyInventory
	if ( cdata(CDATA_ACTION_PERIOD, tc) != 0 ) {
		txt lang(name(tc) + "‚Н–Z‚µ‚ўЃB", name(tc) + " " + is(tc) + " busy now.")
		gosub *screen_draw
		goto *pc_turn
	}
	menucycle = 1
	invally = 1
	invctrl = 10
	snd SOUNDLIST_INV
	goto *com_inventory

*sort_list
	if ( listmax < 1 ) {
		return
	}
	repeat
		p = 0
		repeat listmax - 1
			if ( list(1, cnt) > list(1, cnt + 1) ) {
				p = list(0, cnt), list(1, cnt)
				list(0, cnt) = list(0, cnt + 1), list(1, cnt + 1)
				list(0, cnt + 1) = p, p(1)
				p = 1
			}
		loop
		if ( p == 0 ) {
			break
		}
	loop
	return

*sort_list2
	if ( listmax < 1 ) {
		return
	}
	repeat
		p = 0
		repeat listmax - 1
			if ( list(1, cnt) > list(1, cnt + 1) ) {
				p = list(0, cnt), list(1, cnt)
				list(0, cnt) = list(0, cnt + 1), list(1, cnt + 1)
				list(0, cnt + 1) = p, p(1)
				s = listn(0, cnt), listn(1, cnt)
				listn(0, cnt) = listn(0, cnt + 1), listn(1, cnt + 1)
				listn(0, cnt + 1) = s, s(1)
				p = 1
			}
		loop
		if ( p == 0 ) {
			break
		}
	loop
	return

#deffunc savecycle
	if ( menucycle == 1 ) {
		menucycle = 0
		if ( invally == 0 & invcontainer == 0 ) {
			lastctrl = invctrl
		}
	}
	return

*com_inventory
	procid = (procid + 1) \ 4
	proclist(procid) = "com_inventory" + invctrl + "/" + invctrl(1) + " ct:" + ct
	if ( invctrl == 22 ) {
		if ( invctrl(1) == 1 ) {
			gosub *gene_itemfix
		}
	}
	if ( menucycle == 1 ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			p = 0
			repeat 12
				if ( cycle(cnt, 1) == (-1) ) {
					break
				}
				if ( cycle(cnt, 1) == invctrl ) {
					p = 1
					break
				}
			loop
			if ( p == 0 ) {
				invctrl = cycle(0, 1)
			}
		}
	}
	invmark(11) = 0
	invmark(12) = 0
	page = 0
	pagesize = 16
	listmax = 0
	cs = invmark(invctrl) \ 1000
	page = invmark(invctrl) / 1000
	cs_bk = -1
	cc = CHARA_PLAYER
	page_load
	mainweapon = -1
	repeat 2
		if ( cnt == 0 ) {
			p = -1
			if ( invctrl == 2 | invctrl == 6 | invctrl == 10 | invctrl == 12 | invctrl == 16 | invctrl == 20 | invctrl == 21 | (invctrl == 23 & invctrl(1) != 14) | invctrl == 24 | invctrl == 25 | invctrl == 32 | invctrl == 0 ) {
				continue
			}
		}
		if ( cnt == 1 ) {
			p = cc
			if ( invctrl == 20 | invctrl == 25 ) {
				p = tc
			}
			if ( invctrl == 27 ) {
				p = map(tlocx, tlocy, 1) - 1
				if ( p == 0 | p == (-1) ) {
					continue
				}
			}
			if ( invctrl == 3 | invctrl == 11 | invctrl == 22 | invctrl == 28 ) {
				break
			}
		}
		inv_getheader p
		cnt2 = cnt
		if ( invctrl != 1 & invctrl != 5 & invctrl != 13 & invctrl != 14 & invctrl != 18 & invctrl != 20 & invctrl != 23 & invctrl != 25 & invctrl != 27 ) {
			countequip = 0
		}
		else {
			countequip = 1
		}
		if ( invctrl == 11 | invctrl == 12 | invctrl == 25 | invctrl == 27 ) {
			showmoney = 1
		}
		else {
			showmoney = 0
		}
		repeat invrange, invhead

			/********** ANNA CUSTOM - BEGINNING **********/ // Highlight/Filter Items.

			if ( ItemHighlight(inv(INV_ITEM_ID, cnt)) == 0 & TweakData(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER, TWEAK_CATEGORY_CONVENIENCE) == 2 ) {
				continue
			}
			if ( (Party_End == 1) & (inv(INV_ITEM_PROPERTY, cnt) == PROP_NPC | inv(INV_ITEM_PROPERTY, cnt) == PROP_SPECIAL) ) {
				continue
			}
			if ( invctrl == 2 & ibit(ITEM_BIT_NO_DROP, cnt) != 0 ) {
				continue
			}

			/********** ANNA CUSTOM - ENDING **********/

			/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // House Board - Plant seeds

			if ( invctrl == 34 ) {
				if ( invctrl(1) == 0 ) {
					if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE_MINOR) != FILTER_ITEM_SEED ) {
						continue
					}
				}
			}

			/********** BLOODYSHADE CUSTOM - ENDING **********/

			if ( inv(INV_ITEM_NUM, cnt) <= 0 ) {
				inv(INV_ITEM_NUM, cnt) = 0
				continue
			}
			if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_TRAINING_MACHINE ) {
				inv(INV_ITEM_EFFECT, cnt) = EFFECT_TRAIN
			}
			if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_CARD ) {
				inv(INV_ITEM_EFFECT, cnt) = EFFECT_CARD
			}
			if ( inv(INV_ITEM_ID, cnt) >= MAX_DB | inv(INV_ITEM_ID, cnt) < ITEM_ID_DUMMY ) {
				dialog "Invalid Item Id found. Item No:" + cnt + ", Id:" + inv(INV_ITEM_ID, cnt) + " has been removed from your inventory."
				inv(INV_ITEM_NUM, cnt) = 0
				inv(INV_ITEM_ID, cnt) = ITEM_ID_DUMMY
				continue
			}
			if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
				if ( invctrl == 7 ) {
					if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE_MINOR) != FILTER_ITEM_DEED & inv(INV_ITEM_ID, cnt) != ITEM_ID_TREASURE_MAP ) {
						continue
					}
				}
			}
			if ( cnt2 == 0 ) {
				if ( invctrl == 27 ) {
					if ( inv(INV_ITEM_X, cnt) != tlocx | inv(INV_ITEM_Y, cnt) != tlocy ) {
						continue
					}
				}
				else {
					if ( invctrl != 11 & invctrl != 22 & invctrl != 28 ) {
						if ( inv(INV_ITEM_X, cnt) != cdata(CDATA_X, cc) | inv(INV_ITEM_Y, cnt) != cdata(CDATA_Y, cc) ) {
							continue
						}
					}
				}
			}
			item_checkknown cnt
			reftype = refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE)
			if ( inv(INV_ITEM_PROPERTY, cnt) == PROP_SPECIAL ) {
				if ( ibit(ITEM_BIT_GUEST_USE, cnt) == 0 | invctrl != 14 ) {
					if ( invctrl != 1 ) {
						continue
					}
				}
			}
			if ( countequip == 0 ) {
				if ( inv(INV_ITEM_EQUIP, cnt) != 0 ) {
					continue
				}
			}
			if ( inv(INV_ITEM_EQUIP, cnt) != 0 ) {
				if ( mainweapon == (-1) ) {
					if ( reftype == FILTER_WEAPON ) {
						mainweapon = cnt
					}
				}
			}

			/********** ORIGINAL - BEGINNING **********

			if ( invctrl == 5 ) {
				if ( reftype != FILTER_ITEM_FOOD & reftype != FILTER_CARGO_FOOD & inv(INV_ITEM_MATERIAL, cnt) != ITEM_MATERIAL_RAW ) {
					continue
				}
			}

			 ********** ORIGINAL - ENDING **********/

			/********** ANNA CUSTOM - BEGINNING **********/

			if ( invctrl == 5 | (invctrl == 10 & Filter_Food == 1) ) {
				if ( reftype != FILTER_ITEM_FOOD & reftype != FILTER_CARGO_FOOD & inv(INV_ITEM_MATERIAL, cnt) != ITEM_MATERIAL_RAW ) {
					continue
				}
			}

			/********** ANNA CUSTOM - ENDING **********/

			if ( invctrl == 6 ) {
				if ( iequiploc(cnt) != cdata(body, cc) / EXT_EQUIP_SLOTS & (iequiploc(cnt) != EQUIP_SLOT_HAND | cdata(body, cc) / EXT_EQUIP_SLOTS != 10) & (iequiploc(cnt) != EQUIP_SLOT_SHOOT | cdata(body, cc) / EXT_EQUIP_SLOTS != 5) ) {
					continue
				}
			}

			/********** ORIGINAL - BEGINNING **********

			if ( invctrl == 7 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_READ) == 0 ) {
					continue
				}
			}

			 ********** ORIGINAL - ENDING **********/

			/********** ANNA CUSTOM - BEGINNING **********/ // Filter out decoded books from reading

			if ( invctrl == 7 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_READ) == FILTER_NOTHING | (inv(INV_ITEM_ID, cnt) == ITEM_ID_ANCIENT_BOOK & inv(INV_ITEM_PARAM2, cnt) != 0) ) {
					continue
				}
			}

			/********** ANNA CUSTOM - ENDING **********/

			if ( invctrl == 8 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_DRINK) == 0 ) {
					continue
				}
			}
			if ( invctrl == 9 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_ZAP) == 0 ) {
					continue
				}
			}
			if ( invctrl == 11 ) {
				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_GOLD_PIECE | inv(INV_ITEM_ID, cnt) == ITEM_ID_PLATINUM_COIN ) {
					continue
				}
			}
			if ( invctrl == 11 | invctrl == 12 ) {

				/********** ANNA CUSTOM - BEGINNING **********/ // Filter out no-drop items from drop and examine

				if ( ibit(ITEM_BIT_NO_DROP, cnt) == 1 ) {
					continue
				}

				/********** ANNA CUSTOM - ENDING **********/

				if ( shoptrade ) {
					if ( inv(INV_ITEM_WEIGHT, cnt) >= 0 ) {
						continue
					}
					else {
						if ( reftype != FILTER_CARGO_TRADE ) {
							continue
						}
					}
				}
				else {
					if ( inv(INV_ITEM_WEIGHT, cnt) < 0 ) {
						if ( reftype == FILTER_CARGO_TRADE ) {
							continue
						}
					}
				}
				if ( inv(INV_ITEM_VALUE, cnt) <= 1 ) {
					continue
				}
				if ( ibit(ITEM_BIT_PRECIOUS, cnt) == 1 ) {
					continue
				}
				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_HANDMADE_CHOCOLATE ) {
					continue
				}
				if ( inv(INV_ITEM_ROT, cnt) < 0 ) {
					continue
				}
				if ( inv(INV_ITEM_QUALITY, cnt) == FIX_QUALITY_UNIQUE ) {
					continue
				}
			}
			if ( invctrl == 13 ) {
				if ( inv(INV_ITEM_KNOWN, cnt) >= ITEM_KNOWN_FULL ) {
					continue
				}
			}
			if ( invctrl == 14 ) {
				if ( TweakData(50,1) == 0 ) {
					if ( inv(INV_ITEM_EFFECT, cnt) == EFFECT_NONE & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_USE) == 0 & ibit(ITEM_BIT_ALIVE, cnt) == 0 & ibit(ITEM_BIT_ULTIMATE, cnt) == 0 ) {
						continue
					}
				}
				else {
					if ( inv(INV_ITEM_EFFECT, cnt) == EFFECT_NONE & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_USE) == 0 & ibit(ITEM_BIT_ALIVE, cnt) == 0 & ibit(ITEM_BIT_ULTIMATE, cnt) == 0 & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE) != FILTER_ITEM_POTION ) {
						continue
					}
				}
			}
			if ( invctrl == 15 ) {
				if ( reftype != FILTER_CONTAINER ) {
					continue
				}
				if ( inv(INV_ITEM_PARAM1, cnt) == 0 ) {
					continue
				}
			}
			if ( invctrl == 16 ) {
				if ( reftype != FILTER_ITEM_FOOD ) {
					continue
				}
				else {
					if ( inv(INV_ITEM_PARAM2, cnt) != 0 ) {
						continue
					}
				}
			}
			if ( invctrl == 0 ) {
				if ( reftype != FILTER_ITEM_FOOD ) {
					continue
				}
				if ( inv(INV_ITEM_PARAM2, cnt) != 0 ) {
					continue
				}
				if ( inv(INV_ITEM_PARAM1, cnt) / 1000 != 2 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 3 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 4 ) {
					continue
				}
			}
			if ( invctrl == 17 ) {
				if ( reftype != FILTER_ITEM_POTION & inv(INV_ITEM_ID, cnt) != ITEM_ID_BAIT ) {
					continue
				}
			}
			if ( invctrl == 18 ) {
				if ( inv(INV_ITEM_ID, cidip) == ITEM_ID_BAIT ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_FISHING_POLE ) {
						continue
					}
				}
				if ( cidip == cnt | inv(INV_ITEM_ID, cnt) == ITEM_ID_BOTTLE_WATER ) {
					continue
				}
			}
			if ( invctrl == 19 ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_OFFER) == 0 ) {
					continue
				}
			}
			if ( invctrl == 20 ) {
				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_GOLD_PIECE | inv(INV_ITEM_ID, cnt) == ITEM_ID_PLATINUM_COIN ) {
					continue
				}
			}
			if ( invctrl == 21 ) {
				if ( calcitemvalue(cnt, 0) * inv(INV_ITEM_NUM, cnt) < calcitemvalue(citrade, 0) * inv(INV_ITEM_NUM, citrade) / 2 * 3 ) {
					continue
				}
				if ( ibit(ITEM_BIT_STOLEN, cnt) ) {
					continue
				}
			}
			if ( invctrl == 23 ) {
				if ( invctrl(1) == 0 ) {
					if ( reftype >= FILTER_ITEM_MIN & reftype != FILTER_FURNITURE ) {
						continue
					}
				}
				if ( invctrl(1) == 1 ) {
					if ( reftype != FILTER_WEAPON & reftype != FILTER_RANGE & reftype != FILTER_AMMO ) {
						continue
					}
				}
				if ( invctrl(1) == 2 ) {
					if ( reftype < FILTER_HELM | reftype >= FILTER_RANGE ) {
						if ( reftype < FILTER_ACCESSORY | reftype >= FILTER_ITEM_MIN ) {
							continue
						}
					}
				}
				if ( invctrl(1) == 3 ) {
					if ( ibit(ITEM_BIT_CHARGE_ITEM, cnt) == 0 ) {
						continue
					}
				}
				if ( invctrl(1) == 4 ) {
					if ( inv(INV_ITEM_EQUIP, cnt) != 0 ) {
						continue
					}
				}
				if ( invctrl(1) == 5 ) {
					if ( reftype != FILTER_ITEM_ROD ) {
						continue
					}
				}
				if ( invctrl(1) == 6 ) {
					if ( inv(INV_ITEM_WEIGHT, cnt) <= 0 | inv(INV_ITEM_ID, cnt) == ITEM_ID_COOLER_BOX ) {
						continue
					}
				}
				if ( invctrl(1) == 7 ) {
					if ( inv(INV_ITEM_QUALITY, cnt) >= FIX_QUALITY_MIRACLE | reftype >= FILTER_ITEM_MIN ) {
						continue
					}
				}
				if ( invctrl(1) == 8 ) {
					if ( inv(INV_ITEM_QUALITY, cnt) < FIX_QUALITY_MIRACLE | reftype >= FILTER_ITEM_MIN ) {
						continue
					}
					if ( reftype >= FILTER_AMMO & reftype <= FILTER_AMMO_ENERGY ) {
						continue
					}
				}
				if ( invctrl(1) == 9 ) {
					if ( inv(INV_ITEM_ID, cnt) < ITEM_ID_GLIA_CRYSTAL | inv(INV_ITEM_ID, cnt) > ITEM_ID_MAGIC_ICE & (inv(INV_ITEM_ID, cnt) < ITEM_ID_MIND_DISC | inv(INV_ITEM_ID, cnt) > ITEM_ID_TEAR_OF_GOD) ) {
						continue
					}
					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_TEAR_OF_GOD ) {
						if ( inv(INV_ITEM_PARAM1, cnt) <= 25 & inv(INV_ITEM_PARAM1, cnt) != 10 & inv(INV_ITEM_PARAM1, cnt) != 11 & inv(INV_ITEM_PARAM1, cnt) != 16 & inv(INV_ITEM_PARAM1, cnt) != 19 & inv(INV_ITEM_PARAM1, cnt) != 23 ) {
							if ( refitem(inv(INV_ITEM_ID, cibk), DBSPEC_TYPE) != FILTER_WEAPON & refitem(inv(INV_ITEM_ID, cibk), DBSPEC_TYPE) != FILTER_RANGE ) {
								continue
							}
						}
					}
				}
				if ( invctrl(1) == 10 ) {
					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_FISHING_POLE | inv(INV_ITEM_ID, cnt) == ITEM_ID_GIFT | (inv(INV_ITEM_PROPERTY, cnt) >= PROP_NPC & inv(INV_ITEM_PROPERTY, cnt) <= PROP_SPECIAL) | inv(INV_ITEM_ID, cnt) == ITEM_ID_SHELTER ) {
						continue
					}
				}
				if ( invctrl(1) == 11 ) {
					if ( reftype != FILTER_ITEM_POTION ) {
						continue
					}
					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_BOTTLE_SPEED_UPPER | inv(INV_ITEM_ID, cnt) == ITEM_ID_VERNIS_ORIGINAL | inv(INV_ITEM_ID, cnt) == ITEM_ID_BLUE_CAPSULE_DRAG | inv(INV_ITEM_ID, cnt) == ITEM_ID_POTION_DESCENT | inv(INV_ITEM_ID, cnt) == ITEM_ID_BOTTLE_HERMES_BLOOD | inv(INV_ITEM_ID, cnt) == ITEM_ID_EMPTY_BOTTLE | inv(INV_ITEM_ID, cnt) == ITEM_ID_HANDFUL_SNOW | inv(INV_ITEM_ID, cnt) == ITEM_ID_MOLOTOV | inv(INV_ITEM_ID, cnt) == ITEM_ID_POTION_POTENTIAL | inv(INV_ITEM_ID, cnt) == ITEM_ID_JUICE | inv(INV_ITEM_ID, cnt) == ITEM_ID_BOTTLE_MILK ) {
						continue
					}
				}
				if ( invctrl(1) == 12 ) {
					if ( reftype != FILTER_ITEM_SPELLBOOK ) {
						continue
					}
					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_RECIPE ) {
						continue
					}

					/********** ANNA CUSTOM - BEGINNING **********/ // Filter out decoded books from reading

					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_ANCIENT_BOOK & inv(INV_ITEM_PARAM2, cnt) != 0 ) {
						continue
					}

					/********** ANNA CUSTOM - ENDING **********/

				}
				if ( invctrl(1) == 13 ) {
					if ( reftype != FILTER_ITEM_ROD ) {
						continue
					}
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_BUBBLE_BALL & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_MAGIC_LASER & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_POISON_BALL & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_LIGHTNING_BALL & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_ECLIPSE & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_FIRE_WALL & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_ACID_GROUND & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_LIGHTNING_BOLT & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_FIRE_BOLT & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_ICE_BOLT & inv(INV_ITEM_ID, cnt) != ITEM_ID_ROD_MAGIC_MISSILE ) {
						continue
					}
				}
				if ( invctrl(1) == 14 ) {
					if ( reftype != FILTER_CONTAINER ) {
						continue
					}
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_SMALL_GAMBLE_CHEST & inv(INV_ITEM_ID, cnt) != ITEM_ID_CHEST & inv(INV_ITEM_ID, cnt) != ITEM_ID_SAFE ) {
						continue
					}
				}
				if ( invctrl(1) == 15 ) {
					if ( reftype < FILTER_WEAPON | reftype > FILTER_ITEM_MIN ) {
						continue
					}
					if ( inv(INV_ITEM_QUALITY, cnt) >= FIX_QUALITY_UNIQUE ) {
						continue
					}
				}
				if ( invctrl(1) == 16 ) {
					if ( reftype < FILTER_WEAPON | reftype > FILTER_ITEM_MIN ) {
						continue
					}
					if ( inv(INV_ITEM_QUALITY, cnt) < FIX_QUALITY_MIRACLE ) {
						continue
					}
				}
				if ( invctrl(1) == 17 ) {
					if ( reftype != FILTER_ITEM_FOOD ) {
						continue
					}
					if ( inv(INV_ITEM_MATERIAL, cnt) == ITEM_MATERIAL_RAW ) {
						if ( inv(INV_ITEM_PARAM3, cnt) < 0 ) {
							continue
						}
					}
					if ( inv(INV_ITEM_STATUS, cnt) <= ITEM_STATUS_CURSED ) {
						continue
					}
					if ( ibit(ITEM_BIT_POISON_BLEND, cnt) == 1 ) {
						continue
					}
					if ( ibit(ITEM_BIT_HAZARD, cnt) == 1 ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM2, cnt) < 5 ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM1, cnt) / 1000 != 1 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 2 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 3 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 4 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 5 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 6 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 7 & inv(INV_ITEM_PARAM1, cnt) / 1000 != 8 ) {
						continue
					}
				}
				if ( invctrl(1) == 18 ) {
					if ( reftype < FILTER_WEAPON | reftype > FILTER_ITEM_MIN ) {
						continue
					}
				}
				if ( invctrl(1) == 19 ) {
					if ( reftype != FILTER_ITEM_FOOD ) {
						continue
					}
				}
				if ( invctrl(1) == 20 ) {
					if ( reftype != FILTER_WEAPON & reftype != FILTER_RANGE ) {
						continue
					}
					if ( ibit(ITEM_BIT_ALIVE, cnt) != 1 ) {
						continue
					}
				}
				if ( invctrl(1) == 21 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_MANUSCRIPT ) {
						continue
					}
				}
				if ( invctrl(1) == 22 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_CF_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_CRUSH_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_BATTLE_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_SUPER_POTIOMAN ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM3, cnt) != 0 ) {
						continue
					}
				}
				if ( invctrl(1) == 23 ) {
					if ( reftype != FILTER_ITEM_SCROLL ) {
						continue
					}
					if ( inv(INV_ITEM_NUM, cnt) < 10 ) {
						continue
					}
				}
				if ( invctrl(1) == 24 ) {
					if ( reftype != FILTER_ITEM_SCROLL ) {
						continue
					}
					if ( inv(INV_ITEM_NUM, cnt) < 20 ) {
						continue
					}
				}
				if ( invctrl(1) == 25 ) {
					if ( inv(INV_ITEM_WEIGHT, cnt) <= 0 ) {
						continue
					}
					if ( inv(INV_ITEM_EQUIP, cnt) != 0 ) {
						continue
					}
					if ( ibit(ITEM_BIT_NO_DROP, cnt) ) {
						continue
					}
					if ( ibit(ITEM_BIT_PRECIOUS, cnt) ) {
						continue
					}
				}
				if ( invctrl(1) == 26 ) {
					if ( ibit(ITEM_BIT_ALIVE, cnt) != TRUE ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM1, cnt) >= 15 ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM2, cnt) >= calcexpalive(inv(INV_ITEM_PARAM1, cnt)) ) {
						continue
					}
				}
				if ( invctrl(1) == 27 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_CORPSE ) {
						continue
					}
					if ( inv(INV_ITEM_SHOP_SAMPLE, cnt) == 0 ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM2, cnt) != 0 ) {
						continue
					}
				}
				if ( invctrl(1) == 28 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_CF_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_CRUSH_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_BATTLE_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_SUPER_POTIOMAN ) {
						continue
					}
					if ( inv(INV_ITEM_AMUR_CAGE, cnt) == 0 ) {
						continue
					}
				}
				if ( invctrl(1) == 29 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_CF_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_CRUSH_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_BATTLE_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_SUPER_POTIOMAN ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM3, cnt) == 0 ) {
						continue
					}
					if ( inv(INV_ITEM_AMUR_CAGE, cnt) != 0 ) {
						continue
					}
				}
				if ( invctrl(1) == 30 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_CF_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_CRUSH_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_BATTLE_POTIOMAN & inv(INV_ITEM_ID, cnt) != ITEM_ID_SUPER_POTIOMAN ) {
						continue
					}
					if ( inv(INV_ITEM_PARAM3, cnt) == 0 ) {
						continue
					}
				}
			}
			if ( invctrl == INVCTRL_PUT ) {
				if ( invctrl(1) == 0 ) {
					if ( gdata(GDATA_AREA) == AREA_LUMIEST | gdata(GDATA_AREA) == AREA_ARCBELC ) {
						if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_ANCIENT_BOOK | inv(INV_ITEM_PARAM2, cnt) == 0 ) {
							continue
						}
					}
					else {
						if ( inv(INV_ITEM_PROPERTY, cnt) != PROP_QUEST ) {
							continue
						}
					}
				}
				else {
					if ( inv(INV_ITEM_PROPERTY, cnt) == PROP_QUEST ) {
						continue
					}
				}
				if ( invctrl(1) == 2 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_BILL & inv(INV_ITEM_ID, cnt) != ITEM_ID_1_2_MILLION_TAX_CERTIFICATE & inv(INV_ITEM_ID, cnt) != ITEM_ID_12_MILLION_TAX_CERTIFICATE ) {
						continue
					}
				}
				if ( reftype == FILTER_CONTAINER ) {
					continue
				}
				if ( invctrl(1) == 3 ) {
					if ( reftype != FILTER_ITEM_FOOD ) {
						continue
					}
				}
				if ( invctrl(1) == 6 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_COFFIN_OF_NECROMANCY ) {
						continue
					}
				}
				if ( invctrl(1) == 7 ) {
					if ( reftype != FILTER_ITEM_POTION ) {
						continue
					}
				}
				if ( invctrl(1) == 8 ) {
					if ( inv(INV_ITEM_ID, cnt) != ITEM_ID_PUFF_PUFF_BREAD & inv(INV_ITEM_ID, cnt) != ITEM_ID_STICK_BREAD & inv(INV_ITEM_ID, cnt) != ITEM_ID_HAMBURGER & (inv(INV_ITEM_ID, cnt) != ITEM_ID_SACK_FLOUR | inv(INV_ITEM_PARAM2, cnt) == 0) ) {
						continue
					}
				}
				if ( invctrl(1) == 9 ) {
					if ( reftype != FILTER_ITEM_BOOK & reftype != FILTER_ITEM_SPELLBOOK & reftype != FILTER_ITEM_SCROLL ) {
						continue
					}
				}
			}
			else {
				if ( inv(INV_ITEM_PROPERTY, cnt) == PROP_QUEST ) {
					if ( invctrl != 1 & invctrl != 2 & invctrl != 3 & invctrl != 5 ) {
						continue
					}
				}
			}
			if ( invctrl == 26 ) {
				if ( reftype != FILTER_ITEM_POTION & reftype != FILTER_ITEM_FOOD & inv(INV_ITEM_ID, cnt) != ITEM_ID_KITTY_BANK & inv(INV_ITEM_ID, cnt) != ITEM_ID_MONSTER_BALL & inv(INV_ITEM_ID, cnt) != ITEM_ID_LITTLE_BALL & inv(INV_ITEM_ID, cnt) != ITEM_ID_DUEL_GLOVE & inv(INV_ITEM_ID, cnt) != ITEM_ID_LULWYS_PHOTO_COLLECTION & inv(INV_ITEM_ID, cnt) != ITEM_ID_KEMURIDAMA & reftype != FILTER_ENVIRONMENT & reftype != FILTER_FURNITURE & reftype != FILTER_JUNK ) {
					continue
				}
				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_MONSTER_BALL ) {
					if ( inv(INV_ITEM_SUB_NAME, cnt) != 0 ) {
						continue
					}
				}
			}
			if ( invctrl == 27 ) {
				if ( cnt2 == 0 ) {
					if ( inv(INV_ITEM_PROPERTY, cnt) != PROP_NPC ) {
						continue
					}
				}
			}
			list(0, listmax) = cnt, reftype * 1000 + inv(INV_ITEM_ID, cnt)
			if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_DISC ) {
				list(1, listmax) += inv(INV_ITEM_PARAM1, cnt) + 900
			}
			if ( invctrl == 1 | invctrl == 13 ) {
				if ( inv(INV_ITEM_EQUIP, cnt) != 0 ) {
					list(1, listmax) -= 99999 * 1000
				}
			}
			if ( cnt2 == 0 ) {
				list(1, listmax) -= 99999 * 2000
			}
			if ( invctrl == 28 ) {
				if ( invctrl(1) == 0 ) {
					list(1, listmax) = calcmedalvalue(cnt)
				}
				if ( invctrl(1) == 1 ) {
					list(1, listmax) = calcmusicticketvalue(cnt)
				}
			}
			listmax++
		loop
	loop
	f = 0
	if ( listmax == 0 ) {
		if ( invctrl == 21 ) {
			txt lang(itemname(citrade) + "‚ЙЊ©Ќ‡‚¤•Ё‚рЏЉЋќ‚µ‚Д‚ў‚И‚ўЃB", "You don't have anything that matches " + itemname(citrade) + ".")
			f = 1
		}
		if ( invctrl == 27 ) {
			if ( tc != CHARA_PLAYER ) {
				txt lang(name(tc) + "‚Н“ђ‚Я‚й‚а‚М‚рЏЉЋќ‚µ‚Д‚ў‚И‚ўЃB", name(tc) + " has nothing to steal.")
				f = 1
			}
			else {
				txt lang("‚»‚±‚Й“ђ‚Я‚й‚а‚М‚Н‚И‚ўЃB", "There's nothing to steal.")
				f = 1
			}
		}

		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // House Board - Plant seeds

		if ( invctrl == 34 ) {
			if ( invctrl(1) == 0 ) {
				txt lang("ѓoѓbѓNѓpѓbѓN‚ЙЋнЋq‚Є‚ ‚и‚Ь‚№‚сЃB", "You have no seeds in your backpack.")
				f = 1
			}
		}

		/********** BLOODYSHADE CUSTOM - ENDING **********/

	}
	if ( invctrl == 19 ) {
		item_find FILTER_FURNITURE_ALTAR, 2
		if ( stat == (-1) ) {
			msgdup++
			txt lang("‚±‚±‚Й‚НЌХ’d‚Є‚И‚ўЃB", "There's no altar here.")
			f = 1
		}
	}
	if ( invctrl == 27 ) {
		if ( tc > CHARA_PLAYER ) {
			if ( cdata(CDATA_RELATION, tc) == 10 ) {
				txt lang("’‡ЉФ‚©‚з‚Н“ђ‚Э‚Ѕ‚­‚И‚ўЃB", "You don't want to rob your ally.")
				f = 1
			}
		}
	}
	if ( invctrl == 24 ) {
		if ( invctrl(1) == 0 ) {
			if ( gdata(GDATA_AREA) == AREA_LUMIEST | gdata(GDATA_AREA) == AREA_ARCBELC ) {
				if ( gdata(GDATA_FLAG_GUILD_MAGE_NORMA) <= 0 ) {
					txt lang("Њ»ЌЭ–‚ЏpЋmѓMѓ‹ѓh‚Мѓmѓ‹ѓ}‚Н‚И‚ўЃB", "You have no quota for Mages Guild.")
					f = 1
				}
			}
		}
	}
	if ( f == 1 ) {
		if ( invsubroutine == 1 ) {
			invsubroutine = 0
			return 0
		}
		gosub *screen_draw
		goto *pc_turn
	}
	gosub *sort_list
	if ( invctrl == 3 ) {
		if ( listmax == 0 ) {
			goto *turn_end
		}
	}
	if ( returnfromidentify == 0 ) {
		if ( invctrl == 18 ) {
			valn = itemname(cidip, 1)
		}
		else {
			if ( invctrl == 21 ) {
				valn = itemname(citrade)
			}
		}
		s = "", lang("‚З‚МѓAѓCѓeѓЂ‚р’І‚Ч‚йЃH ", "Examine what? "), lang("‚З‚МѓAѓCѓeѓЂ‚р’u‚­ЃH ", "Drop what? "), lang("‚З‚МѓAѓCѓeѓЂ‚рЏE‚¤ЃH ", "Which item do you want to pick up? "), lang("‰Ѕ‚р‘•”х‚·‚йЃH", "Equip what?"), lang("‰Ѕ‚рђH‚Ч‚ж‚¤ЃH ", "Eat what? "), "", lang("‚З‚к‚р“З‚ЮЃH ", "Read what? "), lang("‚З‚к‚р€щ‚ЮЃH ", "Drink what? "), lang("‚З‚к‚рђU‚йЃH ", "Zap what? "), lang("‚З‚к‚р“n‚·ЃH ", "Which item do you want to give? "), lang("‚З‚к‚рЌw“ь‚·‚йЃH ", "What do you want to buy? "), lang("‚З‚к‚р”„‹p‚·‚йЃH ", "What do you want to sell? "), lang("‚З‚МѓAѓCѓeѓЂ‚рЉУ’и‚·‚йЃH ", "Which item do you want to identify? "), lang("‚З‚МѓAѓCѓeѓЂ‚рЋg—p‚·‚йЃH ", "Use what? "), lang("‚З‚к‚рЉJ‚Ї‚йЃH ", "Open what? "), lang("‰Ѕ‚р—ї—ќ‚·‚йЃH ", "Cook what? "), lang("‰Ѕ‚рЌ¬‚є‚йЃH ", "Blend what? "), lang("‰Ѕ‚ЙЌ¬‚є‚йЃH(" + valn + "‚МЊш‰К‚р“K—p‚·‚йѓAѓCѓeѓЂ‚р‘I‘р) ", "Which item do you want to apply the effect of " + valn + "? "), lang("‰Ѕ‚рђ_‚Й•щ‚°‚йЃH ", "What do you want to offer to your god? "), lang("‰Ѕ‚рЊрЉ·‚·‚йЃH ", "Which item do you want to trade? "), lang(valn + "‚М‘г‚н‚и‚Й‰Ѕ‚р’сЋ¦‚·‚йЃH ", "What do you offer for " + valn + "? "), lang("‰Ѕ‚рЋж‚йЃH ", "Take what? "), lang("‰Ѕ‚р‘ОЏЫ‚Й‚·‚йЃH ", "Target what? "), lang("‰Ѕ‚р“ь‚к‚йЃH ", "Put what? "), lang("‰Ѕ‚р‚а‚з‚¤ЃH ", "Which item do you want to take? "), lang("‰Ѕ‚р“Љ‚°‚йЃH ", "Throw what? "), lang("‰Ѕ‚р“ђ‚ЮЃH ", "Steal what? "), lang("‰Ѕ‚ЖЊрЉ·‚·‚йЃH ", "Trade what? "), lang("‰Ѕ‚р—\–с‚·‚йЃH", "Which item do you want to reserve? ")
		if ( s(invctrl) != "" ) {
			txtnew
		}
		if ( invsc == 0 ) {
			txt s(invctrl)
		}
		if ( invctrl == 28 ) {
			if ( invctrl(1) == 0 ) {
				item_find ITEM_ID_SMALL_MEDAL, 3, 1
				if ( stat != (-1) ) {
					p = inv(INV_ITEM_NUM, stat)
				}
				else {
					p = 0
				}
				txtmore
				txt lang("(Ћќ‚Б‚Д‚ў‚йѓЃѓ_ѓ‹: " + p + "–‡)", "(Coins: " + p + ")")
			}
			if ( invctrl(1) == 1 ) {
				item_find ITEM_ID_MUSIC_TICKET, 3, 1
				if ( stat != (-1) ) {
					p = inv(INV_ITEM_NUM, stat)
				}
				else {
					p = 0
				}
				txtmore
				txt lang("(Ћќ‚Б‚Д‚ў‚йѓ`ѓPѓbѓg: " + p + "–‡)", "(tickets: " + p + ")")
			}
		}
		if ( invctrl == 24 ) {
			if ( invctrl(1) == 0 ) {
				if ( gdata(GDATA_AREA) == AREA_LUMIEST | gdata(GDATA_AREA) == AREA_ARCBELC ) {
					txt lang("ѓmѓ‹ѓ}Ћc‚и: " + gdata(GDATA_FLAG_GUILD_MAGE_NORMA) + "GP", "" + gdata(GDATA_FLAG_GUILD_MAGE_NORMA) + " guild points are needed to gain a rank.")
				}
			}
		}
	}
	gsel 3
	pos 960, 96
	picload exedir + "graphic\\deco_inv.bmp", 1
	gsel 0
	if ( returnfromidentify == 0 ) {
		windowshadow = 1
	}
	returnfromidentify = 0
*com_inventory_loop
	if ( invsc != 0 ) {
		f = 0
		repeat listmax
			p = list(0, cnt)
			if ( inv(INV_ITEM_ID, p) == invsc ) {
				ci = p
				f = 1
				if ( ibit(ITEM_BIT_CHARGE_ITEM, ci) ) {
					if ( inv(INV_ITEM_CHARGE, ci) <= 0 ) {
						continue
					}
				}
				break
			}
		loop
		cc = CHARA_PLAYER
		if ( f == 0 ) {
			inv_find invsc, CHARA_PLAYER
			if ( stat == (-1) ) {
				txt lang("‚»‚МѓAѓCѓeѓЂ‚Н‘¶ЌЭ‚µ‚И‚ўЃB", "The item doesn't exist.")
			}
			else {
				if ( inv(INV_ITEM_PARAM1, stat) == 0 & refitem(inv(INV_ITEM_ID, stat), DBSPEC_TYPE) == FILTER_CONTAINER ) {
					txt lang("‚»‚МѓAѓCѓeѓЂ‚Н‚а‚¤‹у‚Б‚Ы‚ѕЃB", "The item is empty!")
				}
				else {
					txtnew
					txt_globalarea
				}
			}
			invsc = 0
			gosub *screen_draw
			goto *pc_turn
		}
		invsc = 0
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
			if ( invctrl == 9 | invctrl == 15 | invctrl == 26 ) {
				txtnew
				txt_globalarea
				gosub *screen_draw
				goto *pc_turn
			}
		}
		goto *inv_skipSc
	}
	redraw 0
	page_check
	if ( menucycle == 1 ) {
		font lang(cfg_font1, cfg_font2), 12 + sizefix - en * 2, 0
		y = 34
		x = windoww - 650 + 156
		window2 x, y, 475, 22, 5, 5
		pos x - 28, y - 8
		gcopy 3, 64, 288, 50, 32
		if ( dropcontinue ) {
			i = 4
		}
		else {
			if ( invally == 1 ) {
				i = 2
			}
			else {
				if ( invcontainer ) {
					i = 3
				}
				else {
					if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
						i = 1
					}
					else {
						i = 0
					}
				}
			}
		}
		repeat 12
			if ( cycle(cnt, i) == (-1) ) {
				break
			}
			p = cycle(cnt, i)
			pos x + cnt * 44 + 20, y - 24
			gcopy 3, 288 + invicon(p) * 48, 48, 48, 48
			if ( invctrl == p ) {
				gmode 5, , , 70
				pos x + cnt * 44 + 20, y - 24
				gcopy 3, 288 + invicon(p) * 48, 48, 48, 48
				gmode 2
			}
			pos x + cnt * 44 + 46 - strlen(invtitle(p)) * 3, y + 7
			color 0, 0, 0
			if ( invctrl == p ) {
				bmes invtitle(p), 255, 255, 255
			}
			else {
				bmes invtitle(p), 165, 165, 165
			}
			if ( invkey(p) != "" ) {
				pos x + cnt * 44 + 46, y + 18
				color 0, 0, 0
				bmes "(" + invkey(p) + ")", 235, 235, 235
			}
		loop
		font lang(cfg_font1, cfg_font2), 14 + sizefix - en * 2, 0
		color 180, 30, 0
		pos x + 145, y + 30
		bmes "" + key_prev + "," + key_next + ",Tab " + lang("[ѓЃѓjѓ…Ѓ[ђШ‘Ц]", "[Change]"), 255, 255, 255
	}
*com_inventory_loop_WHILE1
	redraw 0
	s = lang(invtitle(invctrl) + "ѓAѓCѓeѓЂ‚М‘I‘р", invtitle(invctrl))
	s(1) = strhint2 + strhint5 + strhint5b + strhint3
	if ( invctrl == 5 | invctrl == 7 | invctrl == 8 | invctrl == 9 | invctrl == 14 | invctrl == 15 | invctrl == 26 ) {
		s(1) += strhint7
	}
	if ( invctrl == 1 ) {
		s(1) += "" + key_mode2 + " " + lang("[•ЫЋќЋw’и]", "[Tag No-Drop]")
	}
	if ( invctrl == 2 ) {
		if ( dropcontinue == 0 ) {
			s(1) += "" + key_mode2 + " " + lang("[A‘±‚Е’u‚­]", "[Multi Drop]")
		}
	}
	display_window (windoww - 640) / 2 + inf_screenx, winposy(432), 640, 432
	if ( invicon(invctrl) != (-1) ) {
		pos wx + 46, wy - 14
		gcopy 3, 288 + invicon(invctrl) * 48, 48, 48, 48
	}
	s = lang("Џd‚і", "Weight")
	if ( invctrl == 11 | invctrl == 12 ) {
		s = lang("’l’i", "Price")
	}
	if ( invctrl == 28 ) {
		if ( invctrl(1) == 0 ) {
			s = lang("ѓЃѓ_ѓ‹", "Medal")
		}
		if ( invctrl(1) == 1 ) {
			s = lang("ѓ`ѓPѓbѓg", "ticket")
		}
	}

	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Show guild points rather than weight when turning in ancient books

	if ( invctrl == 24 & invctrl(1) == 0 & gdata(GDATA_AREA) != AREA_QUEST ) {
		s = lang("ѓMѓ‹ѓhѓ|ѓCѓ“ѓg", "Guild Point")
	}

	/********** BLOODYSHADE CUSTOM - ENDING **********/

	display_topic lang("ѓAѓCѓeѓЂ‚М–јЏМ", "Name"), wx + 28, wy + 30
	display_topic s, wx + 526, wy + 30
	if ( showresist ) {
		pos wx + 300, wy + 40
		color 0, 0, 0

		/********** ORIGINAL - BEGINNING **********

		mes lang("‰О —в —‹ €Е Њ¶ “Е Ќ– ‰№ ђ_ “Ч –‚", "Fi Co Li Da Mi Po Nt So Nr Ch Ma")

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/ // Show skills on 'z' toggle

		switch showresist
			case 1
				mes lang("‰О —в —‹ €Е Њ¶ “Е Ќ– ‰№ ђ_ “Ч –‚", "Fi Co Li Da Mi Po Nt So Nr Ch Ma")
				swbreak
			case 2
				mes "Li Mn St Co Dx Pe Lr Wi Mg Ch Sp"
				swbreak
			case 3
				mes "Lu Ls Ss Ax Bl Po Sv Mr Sc Bo Cb"
				swbreak
			case 4
				mes "Fr Tr Lt Ge Ta Wl He Md Ne Sl Lp"
				swbreak
			case 5
				mes "Dt In An Sq Mi Mc Me Dw Th Sh Ha"
				swbreak
			case 6
				mes "Ma La Ca Ev Dv Di Cr Tl Al Je Ga"
				swbreak
			case 7
				mes "Fa Tv Pr Ck Fi Em Gv Cm Mk Sw Pp"
				swbreak
			case 8
				mes "Rd"
				swbreak
		swend

		/********** ANNA CUSTOM - ENDING **********/

	}
	pos wx + ww - 136, wy - 6
	gcopy 3, 960, 96, 144, 48
	if ( showresist == 0 ) {
		pos wx + ww - 186, wy - 6
		gcopy 3, 960, 144, 48, 72
	}
	pos wx + ww - 246, wy - 6
	gcopy 3, 1008, 144, 48, 72
	pos wx - 6, wy - 6
	gcopy 3, 960, 216, 48, 72
	s = "" + listmax + " items"
	s += lang("  (Џd‚іЌ‡Њv ", "  (Weight ") + cnvweight(cdata(CDATA_INV_WEIGHT, CHARA_PLAYER)) + "/" + cnvweight(cdata(CDATA_CARRY_LIMIT, CHARA_PLAYER)) + lang("  ‰ЧЋФ ", " Cargo ") + cnvweight(gdata(GDATA_CARGO_WEIGHT)) + "/" + cnvweight(gdata(GDATA_CARGO_LIMIT)) + ")"
	if ( invctrl == 25 ) {
		s = ""
	}
	display_note s
	if ( invctrl == INVCTRL_PICKPOCKET ) {
		x = (windoww - 640) / 2 + inf_screenx + 455
		y = winposy(432) - 32
		w = 200
		h = 102
		window x + 4, y + 4, w, h - h \ 8, 0, -1
		window x, y, w, h - h \ 8, 0, 0
        calcDvPv tc
		font lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0
		pos x + 16, y + 17
		mes "Dv:" + dvr1 + " Pv:" + pvr1
		pos x + 16, y + 35
		mes lang("‘•”хЏd—К:", "EquipWt:") + cnvweight(cdata(CDATA_EQUIP_WEIGHT, tc)) + "" + cnveqweight(tc)
	}
	if ( invctrl == 25 ) {
		x = (windoww - 640) / 2 + inf_screenx + 455
		y = winposy(432) - 32
		w = 200
		h = 102
		window x + 4, y + 4, w, h - h \ 8, 0, -1
		window x, y, w, h - h \ 8, 0, 0
        calcDvPv tc
		font lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0
		pos x + 16, y + 17
		mes "Dv:" + dvr1 + " Pv:" + pvr1
		pos x + 16, y + 35
		mes lang("‘•”хЏd—К:", "EquipWt:") + cnvweight(cdata(CDATA_EQUIP_WEIGHT, tc)) + "" + cnveqweight(tc)
		x = wx + 40
		y = wy + wh - 65 - wh \ 8
		pos x, y
		mes lang("‘•”х‰УЏЉ:", "Equip:")
		x += 60
		repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
			if ( cdata(cnt, tc) == 0 ) {
				continue
			}
			p = cdata(cnt, tc)
			if ( p \ EXT_EQUIP_SLOTS != 0 ) {
				color 50, 50, 200
			}
			else {
				color 100, 100, 100
			}
			pos x, y
			mes "" + bodyn(p / EXT_EQUIP_SLOTS)
			x += (strlen(bodyn(p / EXT_EQUIP_SLOTS)) + 1) * 6
		loop
	}
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		key_list(cnt) = key_select(cnt)
		keyrange++
		if ( cnt \ 2 == 0 ) {
			pos wx + 70, wy + 60 + cnt * 19
			gfini 540, 18
			gfdec2 12, 14, 16
		}
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 0, 0, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		p = list(0, p)
		s = itemname(p, inv(INV_ITEM_NUM, p)), cnvweight(inv(INV_ITEM_WEIGHT, p) * inv(INV_ITEM_NUM, p))

		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Show guild points rather than weight when turning in ancient books

		if ( invctrl == 24 & invctrl(1) == 0 & gdata(GDATA_AREA) != AREA_QUEST ) {
			s(1) = "" + (inv(INV_ITEM_PARAM1, p) + 5) * inv(INV_ITEM_NUM, p) + "(" + (inv(INV_ITEM_PARAM1, p) + 5) + ")"
		}

		/********** BLOODYSHADE CUSTOM - ENDING **********/

		if ( invctrl == 11 ) {
			s += " " + cnvweight(inv(INV_ITEM_WEIGHT, p))
			s(1) = "" + calcitemvalue(p, 0) + strgold
		}
		if ( invctrl == 12 ) {
			s += " " + cnvweight(inv(INV_ITEM_WEIGHT, p))
			s(1) = "" + calcitemvalue(p, 1) + strgold
		}
		if ( invctrl == 28 ) {
			if ( invctrl(1) == 0 ) {
				s(1) = "" + calcmedalvalue(p) + lang(" –‡", " Coins")
			}
			if ( invctrl(1) == 1 ) {
				s(1) = "" + calcmusicticketvalue(p) + lang(" –‡", " Tickets")
			}
		}
		if ( invctrl != 3 & invctrl != 11 & invctrl != 22 & invctrl != 27 & invctrl != 28 ) {
			if ( p >= RANGE_INV2 ) {
				s += lang("(‘«Њі)", " (Ground)")
			}
		}
		repeat RANGE_GDATA_SHORTCUT
			if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == inv(INV_ITEM_ID, p) + invctrl * 10000 ) {
				s += "{" + cnt + "}"
			}
		loop
		display_key wx + 58, wy + 60 + cnt * 19 - 2, cnt
		p(1) = inv(INV_ITEM_PIC, p) \ COLOR_TINT_MULT
		if ( inv(INV_ITEM_PIC, p) >= COLOR_TINT_MULT ) {
			p(1) = inv(INV_ITEM_PIC, p)
		}

        preparePicItem p(1), inv(INV_ITEM_COL, p)

		pos wx + 37, wy + 69 + cnt * 19
		gmode 2, chipi(CHIPI_WIDTH, p(1)), chipi(CHIPI_HEIGHT, p(1))
		grotate 1, 0, 960, 0, chipi(CHIPI_WIDTH, p(1)) * inf_tiles / chipi(CHIPI_HEIGHT, p(1)), inf_tiles
		if ( inv(INV_ITEM_ID, p) == ITEM_ID_CF_POTIOMAN | inv(INV_ITEM_ID, p) == ITEM_ID_CRUSH_POTIOMAN | inv(INV_ITEM_ID, p) == ITEM_ID_BATTLE_POTIOMAN | inv(INV_ITEM_ID, p) == ITEM_ID_SUPER_POTIOMAN ) {
			if ( inv(INV_ITEM_SHOP_SAMPLE, p) > 0 ) {
				pos wx + 37, wy + 69 + cnt * 19
				gmode 2, chipi(CHIPI_WIDTH, p(1)), chipi(CHIPI_HEIGHT, p(1))
				grotate BUFFER_ITEM, 1008 - (inv(INV_ITEM_SHOP_SAMPLE, p) - 50) * 48, 1776, 0, 48, 48
			}
			if ( inv(INV_ITEM_AMUR_CAGE, p) > 0 ) {
				pos wx + 37, wy + 69 + cnt * 19
				gmode 2, chipi(CHIPI_WIDTH, p(1)), chipi(CHIPI_HEIGHT, p(1))
				grotate BUFFER_ITEM, 1344 - inv(INV_ITEM_AMUR_CAGE, p) * 48, 1776, 0, 48, 48
			}
		}
		if ( inv(INV_ITEM_EQUIP, p) != 0 ) {
			pos wx + 46, wy + 72 + cnt * 18 - 3
			gcopy 3, 12, 348, 12, 12
			if ( inv(INV_ITEM_KNOWN, p) == ITEM_KNOWN_FULL ) {
				if ( inv(INV_ITEM_IDENTIFY_LEVEL, p) == 100 ) {
					s += lang("(‰“Љu)", " (Range)")
				}
			}
		}
		if ( showresist ) {

			/********** ORIGINAL - BEGINNING **********

			equipinfo p, wx + 300, wy + 60 + cnt * 19 + 2

			 ********** ORIGINAL - ENDING **********/

			/********** ANNA CUSTOM - BEGINNING **********/ // Show skills on 'z' toggle

			if ( showresist == 1 ) {
				equipinfo p, wx + 300, wy + 60 + cnt * 19 + 2
			}
			else {
				equipinfo2 p, wx + 300, wy + 60 + cnt * 19 + 2, showresist
			}

			/********** ANNA CUSTOM - ENDING **********/

			s = strmid(s, 0, 24)
		}
		cs_list s, wx + 84, wy + 60 + cnt * 19 - 1, 19, 0, 1, p
		pos wx + 600 - strlen(s(1)) * 7, wy + 60 + cnt * 19 + 2
		mes s(1)
	loop
	if ( keyrange != 0 ) {
		cs_bk = cs
	}
	if ( showmoney ) {
		if ( showresist == 0 ) {
			font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
			gmode 2
			pos wx + 340, wy + 32
			gcopy 3, 0, 392, 24, 24
			color 0, 0, 0
			pos wx + 368, wy + 37 - en * 2
			mes "" + cdata(CDATA_GOLD, tc) + " gp"
		}
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	p = -1
	invmark(invctrl) = page * 1000 + cs
	repeat keyrange
		if ( key == key_select(cnt) ) {
			p = list(0, pagesize * page + cnt)
			break
		}
	loop
	if ( mode == MODELIST_TXT_ADV ) {
		if ( listmax == 0 ) {
			p = -1
			key = key_cancel
		}
	}
	if ( p != (-1) ) {
		ci = p
		if ( invctrl == 12 | (invctrl == 24 & invctrl(1) != 0) ) {
			cc = -1
		}
		else {
			cc = CHARA_PLAYER
		}
*inv_skipSc
		cargocheck
		if ( stat == 0 ) {
			goto *com_inventory_loop_WHILE1_CONTINUE
		}

		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // House Board - Plant seeds

		if ( invctrl == 34 ) {
			if ( invctrl(1) == 0 ) {
				break_from_loop = 0

				number_of_seeds_planted = 0
				name_of_seed_planted = ioriginalnameref(inv(INV_ITEM_ID, ci))
				total_number_of_seeds = inv(INV_ITEM_NUM, ci)

				repeat mdata(MDATA_HEIGHT)
					if ( break_from_loop == 1 ) {
						break
					}
					y = cnt
					repeat mdata(MDATA_WIDTH)
						if ( break_from_loop == 1 ) {
							break
						}
						x = cnt
						if ( chipm(CHIPM_ROLE, map(x, y, 0)) == MAP_CHIP_ROLE_CROP ) {
							if ( map(x, y, 6) == 0 ) { // is not occupied
								feat = tile_plant, CELL_FEATURE_PLANTED_SEED, inv(INV_ITEM_MATERIAL, ci)
								gosub *item_seedNextGrowth

								if ( inv(INV_ITEM_NUM, ci) == 1 ) { // last seed in the stack
									break_from_loop = 1
								}

								removeitem ci, 1
								cell_featset x, y, tile_plant, CELL_FEATURE_PLANTED_SEED, inv(INV_ITEM_MATERIAL, ci), feat(3)

								number_of_seeds_planted++
							}
						}
					loop
				loop

				if ( number_of_seeds_planted > 0 ) {
					txt lang(name_of_seed_planted + "‚Н" + number_of_seeds_planted + "—±‚р–„‚Я‚ЅЃB", "You've planted " + number_of_seeds_planted + " " + name_of_seed_planted + ".")
					gosub *calcBurdenPc
				}
				else {
					txt_nospace
				}

				if ( number_of_seeds_planted < total_number_of_seeds ) { // this means it wasn't possible to plant all the seeds in the stack, meaning we ran out of crop space.
					gosub *screen_draw
					goto *pc_turn
				}
				else {
					goto *com_inventory
				}
			}
		}

		/********** BLOODYSHADE CUSTOM - ENDING **********/

		if ( invctrl == 1 ) {
			gosub *com_identify
			goto *com_inventory
		}
		if ( invctrl == 2 ) {
			if ( ibit(ITEM_BIT_NO_DROP, ci) ) {
				snd SOUNDLIST_FAIL1
				txt_nodrop
				goto *com_inventory_loop
			}
			if ( inv_getspace(-1) == 0 ) {
				txt lang("‚±‚к€ИЏг‚Н’u‚Ї‚И‚ўЃB", "You can't drop items any more.")
				snd SOUNDLIST_FAIL1
				goto *com_inventory_loop
			}
			if ( mdata(MDATA_MAX_INV) != 0 ) {
				if ( inv_sum(-1) > mdata(MDATA_MAX_INV) ) {
					if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) != FILTER_FURNITURE ) {
						txt lang("‚±‚к€ИЏг‚Н’u‚Ї‚И‚ўЃB", "You can't drop items any more.")
						snd SOUNDLIST_FAIL1
						goto *com_inventory_loop
					}
				}
			}
			if ( inv(INV_ITEM_NUM, ci) > 1 ) {
				txt lang(itemname(ci, 1) + "‚р‚ў‚­‚В—Ћ‚Ж‚·ЃH (1Ѓ`" + inv(INV_ITEM_NUM, ci) + ") ", "How many? (1 to " + inv(INV_ITEM_NUM, ci) + ")")
				display_msg screenmsgy, 1
				val = (windoww - 200) / 2 + inf_screenx, winposy(60), 8, 1, inv(INV_ITEM_NUM, ci)
				inputlog = "" + inv(INV_ITEM_NUM, ci)
				gosub *prompt_word
				in = int(inputlog)
				if ( in > inv(INV_ITEM_NUM, ci) ) {
					in = inv(INV_ITEM_NUM, ci)
				}
				if ( in == 0 | rtval == (-1) ) {
					goto *com_inventory_loop
				}
			}
			else {
				in = 1
			}
			savecycle
			dropval = 0
			gosub *act_drop
			if ( dropcontinue ) {
				menucycle = 1
				dropcontinue++
				goto *com_inventory
			}
			goto *turn_end
		}
		if ( invctrl == 3 | invctrl == 11 | invctrl == 12 | invctrl == 22 | (invctrl == 24 & (invctrl(1) == 3 | invctrl(1) == 5 | invctrl(1) == 6 | invctrl(1) == 7 | invctrl(1) == 8 | invctrl(1) == 9)) ) {
			if ( invctrl != 3 & invctrl != 22 & invctrl != 32 ) {
				if ( ibit(ITEM_BIT_NO_DROP, ci) ) {
					snd SOUNDLIST_FAIL1
					txt_nodrop
					goto *com_inventory_loop
				}
			}
			if ( invctrl == 24 ) {
				if ( invctrl(1) == 3 | invctrl(1) == 5 ) {
					if ( inv_sum(-1) >= invcontainer ) {
						snd SOUNDLIST_FAIL1
						txt lang("‚±‚к€ИЏг“ь‚з‚И‚ўЃB", "The container is full.")
						goto *com_inventory_loop
					}
				}
				if ( invctrl(1) == 6 ) {
					if ( inv_sum(-1) >= invcontainer ) {
						snd SOUNDLIST_FAIL1
						txt lang("‚±‚к€ИЏг‘—‚к‚И‚ўЃB", "The cemetery is full.")
						goto *com_inventory_loop
					}
				}
				if ( invctrl(1) >= 7 & invctrl(1) <= 9 ) {
					if ( inv_sum(-1) >= invcontainer ) {
						snd SOUNDLIST_FAIL1
						txt lang("‚±‚к€ИЏг’u‚Ї‚И‚ўЃB", "The container is full.")
						goto *com_inventory_loop
					}
				}
				if ( invctrl(1) == 5 ) {
					if ( inv(INV_ITEM_WEIGHT, ci) >= efp * 100 ) {
						snd SOUNDLIST_FAIL1
						txt lang("Џd‚і‚Є" + cnvweight(efp * 100) + "€ИЏг‚М•Ё‚Н“ь‚з‚И‚ўЃB", "The container can only hold items weighing less than " + cnvweight(efp * 100) + ".")
						goto *com_inventory_loop
					}
					if ( inv(INV_ITEM_WEIGHT, ci) < 0 ) {
						snd SOUNDLIST_FAIL1
						txt lang("‰Ч•Ё‚Н“ь‚з‚И‚ўЃB", "The container cannot hold cargos")
						goto *com_inventory_loop
					}
				}
				if ( invctrl(1) == 5 ) {
					actionsp CHARA_PLAYER, 2
					if ( stat == 0 ) {
						txt lang("”жJ‚µ‰Я‚¬‚ДЋё”s‚µ‚ЅЃI", "You are too exhausted!")
						goto *com_inventory_end
					}
				}
			}
			if ( invctrl == 22 ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
					if ( inv_sum(CHARA_PLAYER) > 20 ) {
						txt_invfull
						goto *com_inventory_loop
					}
				}
				if ( invctrl(1) == 1 ) {
					if ( gdata(GDATA_HEIR_DEED) < 1 ) {
						txt lang("€вЋY‚М‘Љ‘±Њ ‚рЋќ‚Б‚Д‚ў‚И‚ўЃB", "You don't have a claim.")
						goto *com_inventory_loop
					}
				}
				if ( invctrl(1) == 5 ) {
					actionsp CHARA_PLAYER, 2
					if ( stat == 0 ) {
						txt lang("”жJ‚µ‰Я‚¬‚ДЋё”s‚µ‚ЅЃI", "You are too exhausted!")
						goto *com_inventory_end
					}
				}
			}
			if ( inv(INV_ITEM_PROPERTY, ci) > PROP_NONE & inv(INV_ITEM_PROPERTY, ci) < PROP_CONSTRUCT ) {
				snd SOUNDLIST_FAIL1
				msgdup++
				if ( inv(INV_ITEM_PROPERTY, ci) == PROP_SHOP ) {
					txt lang("‚»‚к‚НЋќ‚ї‰^‚Ч‚И‚ўЃB", "You can't carry it.")
				}
				if ( inv(INV_ITEM_PROPERTY, ci) == PROP_NPC ) {
					txt_notyours
				}
				gosub *screen_draw
				goto *pc_turn
			}
			page_save
			if ( mode == MODELIST_SHOP & inv(INV_ITEM_NUM, ci) > 1 & invctrl != 22 ) {
				if ( invctrl == 11 ) {
					txt lang(itemname(ci, 1) + "‚р‚ў‚­‚В”ѓ‚¤ЃH (1Ѓ`" + inv(INV_ITEM_NUM, ci) + ") ", "How many? (1 to " + inv(INV_ITEM_NUM, ci) + ")")
				}
				if ( invctrl == 12 ) {
					txt lang(itemname(ci, 1) + "‚р‚ў‚­‚В”„‚йЃH (1Ѓ`" + inv(INV_ITEM_NUM, ci) + ") ", "How many? (1 to " + inv(INV_ITEM_NUM, ci) + ")")
				}
				display_msg screenmsgy, 2
				val = (windoww - 200) / 2 + inf_screenx, winposy(60), 8, 1, inv(INV_ITEM_NUM, ci)
				inputlog = "" + inv(INV_ITEM_NUM, ci)
				gosub *prompt_word
				in = int(inputlog)
				if ( in > inv(INV_ITEM_NUM, ci) ) {
					in = inv(INV_ITEM_NUM, ci)
				}
				if ( in == 0 | rtval == (-1) ) {
					screenupdate = -1
					gosub *screen_draw
					stick p
					goto *com_inventory_loop
				}
			}
			else {
				in = inv(INV_ITEM_NUM, ci)
			}
			if ( mode == MODELIST_SHOP & invctrl != 22 & invctrl != 24 ) {
				if ( invctrl == 11 ) {
					txt lang(itemname(ci, in) + "‚р " + in * calcitemvalue(ci, 0) + " gp ‚Е”ѓ‚¤ЃH", "Do you really want to buy " + itemname(ci, in) + " for " + in * calcitemvalue(ci, 0) + "gp?")
				}
				if ( invctrl == 12 ) {
					txt lang(itemname(ci, in) + "‚р " + in * calcitemvalue(ci, 1) + " gp ‚Е”„‚йЃH", "Do you really want to sell " + itemname(ci, in) + " for " + in * calcitemvalue(ci, 1) + "gp?")
				}
				promptYesNo
				if ( rtval != 0 ) {
					screenupdate = -1
					gosub *screen_draw
					goto *com_inventory
				}
				if ( invctrl == 11 ) {
					if ( calcitemvalue(ci, 0) * in > cdata(CDATA_GOLD, CHARA_PLAYER) ) {
						screenupdate = -1
						gosub *screen_draw
						txt lang("‚ ‚И‚Ѕ‚НЌа•z‚рЉJ‚ў‚Д‚Є‚Б‚©‚и‚µ‚ЅЃc", "You check your wallet and shake your head."), lang("‚а‚Б‚Ж‰Т‚Є‚И‚ў‚Ж”ѓ‚¦‚И‚ўЃI", "You need to earn more money!")
						msgkeep = 1
						goto *com_inventory
					}
				}
				if ( invctrl == 12 ) {
					if ( calcitemvalue(ci, 1) * in > cdata(CDATA_GOLD, tc) ) {
						screenupdate = -1
						gosub *screen_draw
						txt lang(name(tc) + "‚НЌа•z‚рЉJ‚ў‚Д‚Є‚Б‚©‚и‚µ‚ЅЃc", name(tc) + " checks " + his(tc) + " wallet and shakes " + his(tc) + " head.")
						msgkeep = 1
						goto *com_inventory
					}
				}
			}
			if ( invctrl == 11 ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
					if ( inv_sum(CHARA_PLAYER) > 20 ) {
						txt_invfull
						goto *com_inventory_loop
					}
				}
			}
			gosub *act_get
			if ( stat == 0 ) {
				goto *com_inventory
			}
			if ( stat == (-1) ) {
				goto *turn_end
			}
			if ( invctrl == 22 ) {
				if ( invctrl(1) == 1 ) {
					gdata(GDATA_HEIR_DEED)--
					if ( invctrl(1) == 1 ) {
						txt lang("Ћc‚и" + gdata(GDATA_HEIR_DEED) + "ЊВ•Є‚МѓAѓCѓeѓЂ‚М‘Љ‘±Њ ‚рЋќ‚Б‚Д‚ў‚йЃB", "You can claim " + gdata(GDATA_HEIR_DEED) + " more heirloom" + _s3(gdata(GDATA_HEIR_DEED)) + ".")
					}
				}
				if ( invctrl(1) == 4 ) {
					gdata(GDATA_SISTER_REWARD)++
					invsubroutine = 0
					return 1
				}
			}
			screenupdate = -1
			gosub *screen_draw
			goto *com_inventory
		}
		if ( invctrl == 5 ) {
			if ( ibit(ITEM_BIT_NO_DROP, ci) ) {
				snd SOUNDLIST_FAIL1
				txt_nodrop
				goto *com_inventory_loop
			}
			screenupdate = -1
			gosub *screen_draw
			savecycle
			if ( cdata(CDATA_HUNGER, CHARA_PLAYER) > 10000 ) {
				if ( gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_PURGE ) {
					txt lang("ЌЎ‚Н‚Ж‚Д‚ађH‚Ч‚з‚к‚И‚ўЃB", "You are too full to eat."), lang("• ‚Є‚і‚Ї‚йЃc", "You are too bloated to eat any more."), lang("‚Ь‚ѕ• ‚НЊё‚Б‚Д‚ў‚И‚ўЃB", "Your stomach can't digest any more.")
					gosub *screen_draw
					goto *pc_turn
				}
			}
			goto *act_eat
		}
		if ( invctrl == 6 ) {
			if ( cc == CHARA_PLAYER ) {
				if ( trait(TRAIT_RACE_WEAK) != 0 ) {
					if ( inv(INV_ITEM_WEIGHT, ci) > 2000 ) {
						txt lang("‚»‚к‚НЏd‚·‚¬‚Д‘•”х‚Е‚«‚И‚ўЃB", "It's too heavy to equip.")
						goto *com_inventory_loop
					}
				}
			}
			if ( cdata(CDATA_CONDITION_BRAINWASH, cc) != 0 ) {
				txt lang(name(cc) + "‚Н“Є‚Є‚Ъ‚с‚в‚и‚µ‚Д‘•”х‚р•ПЌX‚Е‚«‚И‚ўЃcЃB", name(cc) + " is confused and can't change their equipment.")
				goto *com_inventory_loop
			}
			r1 = cc
			gosub *act_equip
			r1 = cc
			gosub *charaRefresh
			screenupdate = -1
			gosub *screen_draw
			snd SOUNDLIST_EQUIP1
			txtnew
			txt lang(itemname(ci) + "‚р‘•”х‚µ‚ЅЃB", "You equip " + itemname(ci) + ".")
			gdata(GDATA_EQUIP_CHANGE) = 1
			if ( inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_CURSED ) {
				txt lang(name(cc) + "‚Н‹}‚ЙЉ¦‹C‚Є‚µ‚Д‚У‚й‚¦‚ЅЃB", "You suddenly feel a chill and shudder.")
			}
			if ( inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_DOOMED ) {
				txt lang(name(cc) + "‚Н”j–Е‚Ц‚М“№‚р•а‚ЭЋn‚Я‚ЅЃB", "You are now one step closer to doom.")
			}
			if ( inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_BLESSED ) {
				txt lang(name(cc) + "‚Н‰Ѕ‚©‚ЙЊ©Ћз‚з‚к‚Д‚ў‚йЉґ‚¶‚Є‚µ‚ЅЃB", "You feel as someone is watching you intently.")
			}
			if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
				gosub *show_weaponStat
			}
			menucycle = 1
			goto *com_wear
		}
		if ( invctrl == 7 ) {
			screenupdate = -1
			gosub *screen_draw
			savecycle
			goto *act_read
		}
		if ( invctrl == 8 ) {
			screenupdate = -1
			gosub *screen_draw
			savecycle
			if ( TweakData(TWEAK_GAMEPLAY_CG_DISABLE_THIRST, TWEAK_CATEGORY_GAMEPLAY) == FALSE ) {
				if ( cdata(CDATA_THIRST, CHARA_PLAYER) > 10000 ) {
					if ( gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_PURGE ) {
						txt lang("‚±‚к€ИЏг€щ‚Я‚И‚ўЃcЃB", "Your are too full to drink."), lang("дNгч‚Є‚в‚Ф‚Ї‚йЃc", "You are too bloated to drink any more."), lang("‚Ь‚ѕЌA‚НЉ‰‚ў‚Д‚ў‚И‚ўЃB", "Your stomach can't digest any more.")
						gosub *screen_draw
						goto *pc_turn
					}
				}
			}
			goto *act_drink
		}
		if ( invctrl == 9 ) {
			screenupdate = -1
			gosub *screen_draw
			savecycle
			goto *act_zap
		}
		if ( invctrl == 32 ) {
			snd SOUNDLIST_ENC
			cdata(CDATA_MARK_ITEM_PIC, tc) = inv(INV_ITEM_PIC, ci)
			cdata(CDATA_MARK_ITEM_COL, tc) = inv(INV_ITEM_COL, ci)
			txt lang(name(tc) + "‚ЙѓAѓCѓeѓЂ‰ж‘њ‚р•t—^‚µ‚ЅЃB", "You attached an item mark to " + name(tc) + ".")
			gosub *screen_draw
			goto *pc_turn
		}
		if ( invctrl == 10 ) {
			if ( ibit(ITEM_BIT_NO_DROP, ci) ) {
				snd SOUNDLIST_FAIL1
				txt_nodrop
				goto *com_inventory_loop
			}
			ti = inv_getfreeid(tc)
			if ( cdata(CDATA_CONDITION_SLEEP, tc) ) {
				txt lang(name(tc) + "‚Н–°‚Б‚Д‚ў‚йЃB", name(tc) + " " + is(tc) + " sleeping.")
				snd SOUNDLIST_FAIL1
				goto *com_inventory_loop
			}
			if ( cdata(CDATA_CONDITION_DIM, tc) > 60 ) {
				txt lang(name(tc) + "‚Н‹Cђв‚µ‚Д‚ў‚йЃB", name(tc) + " " + is(tc) + " stunned.")
				snd SOUNDLIST_FAIL1
				goto *com_inventory_loop
			}
			if ( ti == (-1) ) {
				txt lang(name(tc) + "‚Н‚±‚к€ИЏгЋќ‚Д‚И‚ўЃB", his(tc) + " inventory is full.")
				snd SOUNDLIST_FAIL1
				goto *com_inventory_loop
			}
			chatc@DP = tc
			reftype = refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE)
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_GIFT ) {
				snd SOUNDLIST_EQUIP1
				txt lang("‚ ‚И‚Ѕ‚Н" + name(tc) + "‚Й" + itemname(ci, 1) + "‚рѓvѓЊѓ[ѓ“ѓg‚µ‚ЅЃB", "You give " + name(tc) + " " + itemname(ci, 1) + ".")
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				txt lang("Ѓu‚¦ЃA‚±‚к‚р" + _ore(3) + "‚Й‚­‚к‚й‚М" + _ka(1) + "" + _thanks(2) + "Ѓv", cnvtalk("Thank you!"))
				if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == gdata(GDATA_MONTH) & cdata(CDATA_JOIN_DATE_DAY, tc) == gdata(GDATA_DAY) & cdata(CDATA_JOIN_DATE_YEAR, tc) > gdata(GDATA_YEAR) ) {
					txt lang("ЌЎ“ъ‚Н‚ ‚И‚Ѕ‚Ж" + name(tc) + "‚М‹L”O“ъ‚ѕЃI", "Today is your anniversary with " + name(tc) + "!")
					modimp tc, giftvalue(inv(INV_ITEM_PARAM4, ci))
				}
				modimp tc, giftvalue(inv(INV_ITEM_PARAM4, ci))
				cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				goto *com_inventory
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_TOKEN_FRIENDSHIP ) {
				snd SOUNDLIST_EQUIP1
				txt lang("‚ ‚И‚Ѕ‚Н" + name(tc) + "‚Й" + itemname(ci, 1) + "‚р“n‚µ‚ЅЃB", "You give " + name(tc) + " " + itemname(ci, 1) + ".")
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				if ( cdata(CDATA_IMPRESSION, tc) >= 100 ) {
					txt lang("Ѓu‚±ЃA‚±‚к‚Є" + _ore(3) + "‚Ѕ‚ї‚М—FЏо‚МЏШЃIЃv", cnvtalk("Thank you!"))
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == gdata(GDATA_MONTH) & cdata(CDATA_JOIN_DATE_DAY, tc) == gdata(GDATA_DAY) & cdata(CDATA_JOIN_DATE_YEAR, tc) > gdata(GDATA_YEAR) ) {
						txt lang("ЌЎ“ъ‚Н‚ ‚И‚Ѕ‚Ж" + name(tc) + "‚М‹L”O“ъ‚ѕЃI", "Today is your anniversary with " + name(tc) + "!")
						modimp tc, 30
					}
					modimp tc, 30
					cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				}
				else {
					txt lang("Ѓu—FЏоЃA‚Л‚ҐЃcЃv", cnvtalk("Hmm..."))
				}
				goto *com_inventory
			}
			if ( inv(INV_ITEM_ID, ci) <= ITEM_ID_M01_GARNET & inv(INV_ITEM_ID, ci) >= ITEM_ID_M12_LAPIS_LAZULI ) {
				snd SOUNDLIST_EQUIP1
				txt lang("‚ ‚И‚Ѕ‚Н" + name(tc) + "‚Й" + itemname(ci, 1) + "‚р“n‚µ‚ЅЃB", "You give " + name(tc) + " " + itemname(ci, 1) + ".")
				txtvalid = 0
				txt lang("ЃuгY—н" + _dana(3) + "ЃcЃv", cnvtalk("Beautiful..."))
				modimp tc, 40
				cdata(CDATA_EMO_ICON, tc) = 6 + 100 * 3
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M01_GARNET ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 1 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M02_AMETHYST ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 2 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M03_AQUAMARINE ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 3 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M04_DIAMOND ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 4 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M05_EMERALD ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 5 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M06_ALEXANDRITE ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 6 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M07_RUBY ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 7 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M08_SARDONYX ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 8 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M09_SAPPHIRE ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 9 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M10_OPAL ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 10 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M11_TOPAZ ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 11 ) {
						modimp tc, 20
					}
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_M12_LAPIS_LAZULI ) {
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == 12 ) {
						modimp tc, 20
					}
				}
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				goto *com_inventory
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_LOVELY_BOUQUET ) {
				snd SOUNDLIST_EQUIP1
				txt lang("‚ ‚И‚Ѕ‚Н" + name(tc) + "‚Й" + itemname(ci, 1) + "‚р“n‚µ‚ЅЃB", "You give the " + itemname(ci, 1) + " to " + name(tc) + ".")
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				if ( cdata(CDATA_IMPRESSION, tc) >= 150 ) {
					txt lang("Ѓu‘f“G" + _dana(3) + "ЃIЃv", cnvtalk("Thank you!"))
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == gdata(GDATA_MONTH) & cdata(CDATA_JOIN_DATE_DAY, tc) == gdata(GDATA_DAY) & cdata(CDATA_JOIN_DATE_YEAR, tc) > gdata(GDATA_YEAR) ) {
						txt lang("ЌЎ“ъ‚Н‚ ‚И‚Ѕ‚Ж" + name(tc) + "‚М‹L”O“ъ‚ѕЃI", "Today is your anniversary with " + name(tc) + "!")
						modimp tc, 20
					}
					modimp tc, 20
					cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				}
				else {
					txt lang("Ѓu‚¤ЃA‚¤‚сЃcЃv", cnvtalk("Hmm..."))
				}
				goto *com_inventory
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_HANDMADE_CHOCOLATE ) {
				if ( inv(INV_ITEM_SUB_NAME, ci) == CREATURE_ID_BUG ) {
					if ( gdata(GDATA_MONTH) != 2 ) {
						snd SOUNDLIST_FAIL1
						txt lang("Ћџ‚М‚QЊЋ‚р‘Т‚Ж‚¤ЃB", "You have to wait until next February.")
						goto *com_inventory_loop
					}
					snd SOUNDLIST_EQUIP1
					if ( cdata(CDATA_IMPRESSION, tc) < 100 ) {
						if ( rnd(2) == 0 ) {
							txt lang("Ѓu–і—ќЃv", cnvtalk("No way."))
						}
						else {
							txt lang("Ѓu‚ў‚з‚сЃv", cnvtalk("No way."))
						}
						gosub *screen_draw
						snd SOUNDLIST_ATK_DARK
						music = MUSICLIST_MCLOG
						gosub *music_play
						redraw 0
						gosub *screen_draw
						gosub *screen_fade
						gsel 4
						buffer 4, FACE_SIZE_WIDTH, FACE_SIZE_HEIGHT
						pos 0, 0
						picload exedir + "graphic\\face1" + devfile + ".bmp", 1
						gsel 0
						goto *pc_turn
					}
					if ( ibit(ITEM_BIT_STOLEN, ci) ) {
						txt lang("Ѓu“ђ‚с‚Е‚«‚Ѕѓ`ѓ‡ѓRѓЊЃ[ѓg‚И‚с‚ДЃcЃv", cnvtalk("No way."))
						goto *pc_turn
					}
					txt lang("‚ ‚И‚Ѕ‚Н" + name(tc) + "‚Й" + itemname(ci, 1) + "‚р“n‚µ‚ЅЃB", "You give " + name(tc) + " " + itemname(ci, 1) + ".")
					snd SOUNDLIST_COMPLETE1
					music = MUSICLIST_MCWEDDING
					gosub *music_play
					if ( cdata(CDATA_IMPRESSION, tc) >= 200 ) {
						modimp tc, 50
						cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
						if ( jp ) {
							txtef COLOR_GREEN
							txt name(tc) + "‚Н‚ ‚И‚Ѕ‚Жѓ`ѓ‡ѓR‚рЊрЊЭ‚ЙЊ©‚В‚Я‚Д‚НЌK‚№‚»‚¤‚Й€кђl‚Е‚Й‚в‚Й‚в‚µ‚Д‚ў‚йЃcЃB", name(tc) + "‚НЉґ‹Й‚Ь‚Б‚Д‚ ‚И‚Ѕ‚Й•ш‚«‚В‚ў‚Д‚«‚ЅЃI‚ЄЃA‰д‚Й•Ф‚Б‚ДЌQ‚Д‚Д—Ј‚к‚ЅЃB"
						}
						else {
							txt cnvtalk("I love you."), cnvtalk("Thank you.")
						}
					}
					if ( cdata(CDATA_IMPRESSION, tc) >= 150 & cdata(CDATA_IMPRESSION, tc) < 200 ) {
						modimp tc, 40
						cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
						if ( jp ) {
							txtef COLOR_GREEN
							txt name(tc) + "‚НЉз‚Є‚Й‚в‚Ї‚й‚М‚р‰B‚»‚¤‚Ж•KЋЂ‚ѕЃI", name(tc) + "‚НЏОЉз‚рЊ©‚№‚ЅЃB‚»‚к‚аЃAЌЎ‚Ь‚Е‚ЙЊ©‚Ѕ‚±‚Ж‚Є‚И‚ў‚ж‚¤‚И‚ў‚ўЏОЉз‚рЃB", name(tc) + "‚Н•ЅђГ‚р‘•‚Б‚Д‚ў‚йЃB‚ѕ‚ЄЉз‚Єђ^‚БђФ‚ѕЃB"
						}
						else {
							txt cnvtalk("I love you."), cnvtalk("Thank you.")
						}
					}
					if ( cdata(CDATA_IMPRESSION, tc) >= 100 & cdata(CDATA_IMPRESSION, tc) < 150 ) {
						modimp tc, 30
						cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
						if ( jp ) {
							txtef COLOR_GREEN
							txt name(tc) + "‚Н€кЏu•р‘R‚Ж‚µ‚ЅЊгЃA‹Бњ±‚Мђє‚рЏг‚°‚ЅЃB–б‚¦‚й‚Ж‚НЋv‚Б‚Д‚ў‚И‚©‚Б‚Ѕ‚ж‚¤‚ѕЃB", name(tc) + "‚Н”чЏО‚с‚Е‚ў‚йЃB‚Ь‚с‚ґ‚з‚Е‚а‚И‚і‚»‚¤‚ѕЃB", name(tc) + "‚Н—]’цЉр‚µ‚©‚Б‚Ѕ‚М‚©ЃAѓ`ѓ‡ѓR‚рЊ©‚Д–Ъ‚р‹P‚№‚Д‚ў‚йЃB"
						}
						else {
							txt cnvtalk("I love you."), cnvtalk("Thank you.")
						}
					}
					item_copy ci, ti
					inv(INV_ITEM_NUM, ci)--
					inv(INV_ITEM_NUM, ti) = 1
					item_stack tc, ti, 1
					ci = ti
					rc = tc
					gosub *chara_item
					gosub *chara_equipFull
					if ( tc < MAX_CHARA_FOLLOWER ) {
						create_pcpic tc, 1
					}
					r1 = tc
					gosub *charaRefresh
					gosub *calcBurdenPc
					goto *com_inventory
				}
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_BOTTLE_MILK & cbit(CHARA_BIT_LIVESTOCK, tc) == TRUE ) {
				tcbk = tc
				if ( cdata(CDATA_HUNGER, tc) >= 8000 ) {
					snd SOUNDLIST_FAIL1
					txt lang("ЃuЌЎ‚Н‚Ё‚И‚©‚ў‚Б‚П‚ўЃIЃv", cnvtalk("I'm full now!"))
					goto *com_inventory
				}
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				tc = tcbk
				efid = SKILL_EFFECT_POTION_MILK
				gosub *effect
				goto *pc_turn
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_LIVESTOCK_FEED & cdata(CDATA_HUNGER, tc) < 10000 & cbit(CHARA_BIT_LIVESTOCK, tc) == 1 ) {
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				txt lang(name(tc) + "‚Й‰Ж’{‚М‰a‚рђH‚Ч‚і‚№‚ЅЃB", "You gave " + name(tc) + " food for livestock.")
				snd SOUNDLIST_EAT1
				txt lang("ЃuѓpѓbѓTѓpѓTЃIЃv", cnvtalk("This is hard!")), lang("ЃuѓpѓbѓTѓpѓTЃIЃv", cnvtalk("This is hard!")), lang("ЃuЊы‚М‚И‚©ѓpѓbѓTѓpѓTЃIЃv", cnvtalk("This dries your mouth!")), lang("ЃuЊы‚М’†ѓpѓbѓTѓpѓT‚ѕ‚жЃIЃv", cnvtalk("Ugh, this is so dry!")), lang("ЃuѓpѓbѓTѓpѓT‚ѕ‚жЃIЃv", cnvtalk("Ugh, this is hard!")), lang("ЃuѓpѓbѓTѓpѓT‚ѕ‚жЃv", cnvtalk("Ugh, this is hard."))
				inv_find ITEM_ID_BIO_BATTERY, tc
				if ( stat == (-1) ) {
					omosa = limit(cdata(CDATA_WEIGHT, tc), 1, 100000000)
					cdata(CDATA_WEIGHT, tc) += omosa * (inv(INV_ITEM_LEVEL, ci) + 1) / 100 + inv(INV_ITEM_LEVEL, ci) + 1
					txt lang(name(tc) + "‚Н‘ѕ‚Б‚Д" + cdata(CDATA_WEIGHT, tc) + "kg‚Й‚И‚Б‚ЅЃB", name(tc) + " grew fatter and now weighs " + cdata(CDATA_WEIGHT, tc) + "kg.")
				}
				cdata(CDATA_HUNGER, tc) += 2500
				goto *com_inventory
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_PUFF_PUFF_BREAD & cdata(CDATA_ID, tc) == CREATURE_ID_ALCHEMIST_NAPLUS ) {
				snd SOUNDLIST_FAIL1
				txt lang("Ѓu‚ўЃA‚ў‚з‚И‚ўЃI‚У‚©‚У‚©ѓpѓ“‚И‚с‚Д‚а‚¤‚ў‚з‚И‚ўЃIЃIЃv", cnvtalk("I-I don't want it! Get that puff puff bread away from me!!"))
				goto *com_inventory_loop
			}
			if ( cbit(CHARA_BIT_BIRTHED_CHILD, tc) == TRUE & cdata(CDATA_SPRITE_SIZE_MILK, tc) == (-4) ) {
				f = rnd(8) + 1
				if ( f <= 4 ) {
					s = "", lang("ѓCѓ„‚џ‚џ‚ ЃI", "Nooooo!"), lang("ѓCѓ„Ѓ`ЃI", "No!"), lang("ѓCѓ„Ѓф", "No! No!"), lang("ѓCѓ„ѓbЃI", "No!!!!!!")
					snd SOUNDLIST_FAIL1
					txt lang(name(tc) + "Ѓu" + s(f) + "Ѓv", cnvtalk(s(f)))
					goto *pc_turn
				}
			}
			f = 0
			p = sdata(SKILL_ATTR_STR, tc) * 500 + sdata(SKILL_ATTR_CON, tc) * 500 + sdata(SKILL_NORMAL_WEIGHT_LIFTING, tc) * 2500 + 25000
			if ( cdata(CDATA_ID, tc) == CREATURE_ID_GOLDEN_KNIGHT ) {
				p *= 5
			}
			if ( inv_weight(tc) + inv(INV_ITEM_WEIGHT, ci) > p ) {
				f = 1
			}
			if ( cdata(CDATA_ID, tc) != CREATURE_ID_GOLDEN_KNIGHT ) {
				if ( reftype == FILTER_FURNITURE ) {
					if ( inv(INV_ITEM_ID, ci) != ITEM_ID_SLEEP_SHEEP & inv(INV_ITEM_ID, ci) != ITEM_ID_WILD_FLOWER ) {
						if ( inv(INV_ITEM_SKILL_REF, ci) != SKILL_NORMAL_PERFORMER | sdata(SKILL_NORMAL_PERFORMER, tc) < 1 ) {
							f = 2
						}
					}
				}
				if ( reftype == FILTER_JUNK ) {
					if ( inv(INV_ITEM_ID, ci) != ITEM_ID_MAGATAMA & inv(INV_ITEM_ID, ci) != ITEM_ID_MAGAQUA & inv(INV_ITEM_ID, ci) != ITEM_ID_SKILL_TICKET & inv(INV_ITEM_ID, ci) != ITEM_ID_BIO_BATTERY & inv(INV_ITEM_ID, ci) != ITEM_ID_MAGAICE ) {
						f = 3
					}
				}
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_FILTRATION_BOTTLE ) {
				f = 1
				if ( inv(INV_ITEM_PARAM2, ci) == 0 ) {
					f = 2
					snd SOUNDLIST_FAIL1
				}
				if ( cdata(CDATA_THIRST, tc) > 10000 ) {
					f = 3
					snd SOUNDLIST_FAIL1
				}
				if ( f == 1 ) {
					if ( inv(INV_ITEM_PARAM2, ci) > 0 ) {
						f = 4
						snd SOUNDLIST_DRINK1
						inv(INV_ITEM_PARAM2, ci)--
						cdata(CDATA_THIRST, tc) += 2000
						cdata(CDATA_HUNGER, tc) += 150
					}
				}
				s = "", lang("Џd‚·‚¬", "Too heavy!"), lang("‚©‚з‚Б‚ЫЃI", "No way."), lang("‚ў‚з‚с", "I don't want it."), lang("‚ ‚и‚Є‚Ж‚¤ЃI", "Never!")
				txt lang(name(tc) + "Ѓu" + s(f) + "Ѓv", cnvtalk(s(f)))
				goto *com_inventory_loop
			}
			if ( inv(INV_ITEM_WEIGHT, ci) < 0 ) {
				f = 4
			}
			if ( f ) {
				s = "", lang("Џd‚·‚¬", "Too heavy!"), lang("–і—ќ", "No way."), lang("‚ў‚з‚с", "I don't need it."), lang("ѓCѓ„ЃI", "Never!")
				snd SOUNDLIST_FAIL1
				txt lang(name(tc) + "Ѓu" + s(f) + "Ѓv", cnvtalk(s(f)))
				goto *com_inventory_loop
			}
			f = 0
			if ( cdata(CDATA_RELATION, tc) == 10 ) {
				f = 1
			}
			else {
				if ( inv(INV_ITEM_KNOWN, ci) < ITEM_KNOWN_QUALITY ) {
					snd SOUNDLIST_FAIL1
					txt lang("Ѓu‚»‚с‚И“ѕ‘М‚М’m‚к‚И‚ў‚а‚М‚Н‚ў‚з‚И‚ў" + _yo() + "Ѓv", cnvtalk("I don't want it. It's too creepy."))
					goto *com_inventory_loop
				}
				if ( inv(INV_ITEM_STATUS, ci) <= ITEM_STATUS_CURSED ) {
					snd SOUNDLIST_FAIL1
					txt lang("Ѓu‚»‚кЃAЋф‚н‚к‚Д‚ў" + _ru() + "Ѓv", cnvtalk("It's cursed!"))
					goto *com_inventory_loop
				}
				if ( reftype == FILTER_ITEM_SCROLL ) {
					f = 1
					if ( instr(filter_item(inv(INV_ITEM_ID, ci)), 0, "/neg/") != (-1) ) {
						f = 0
					}
					if ( inv(INV_ITEM_ID, ci) == ITEM_ID_SCROLL_TELEPORTATION | inv(INV_ITEM_ID, ci) == ITEM_ID_SCROLL_MINOR_TELEPORTATION | inv(INV_ITEM_ID, ci) == ITEM_ID_TREASURE_MAP ) {
						f = 0
					}
				}
				if ( reftype == FILTER_ITEM_POTION ) {
					f = 1
					if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE_MINOR) == FILTER_ITEM_POTION_ALE ) {
						if ( cdata(CDATA_CONDITION_DRUNK, tc) ) {
							snd SOUNDLIST_FAIL1
							txt lang("Ѓu‚а‚¤€щ‚Я‚И‚ў" + _yo() + "Ѓv", cnvtalk("Enough for me."))
							goto *com_inventory_loop
						}
					}
					if ( instr(filter_item(inv(INV_ITEM_ID, ci)), 0, "/neg/") != (-1) ) {
						f = 0
					}
					if ( instr(filter_item(inv(INV_ITEM_ID, ci)), 0, "/nogive/") != (-1) ) {
						f = 0
					}
					if ( cbit(CHARA_BIT_PREGNANT, tc) ) {
						if ( inv(INV_ITEM_ID, ci) == ITEM_ID_POISON | inv(INV_ITEM_ID, ci) == ITEM_ID_BOTTLE_DYE | inv(INV_ITEM_ID, ci) == ITEM_ID_BOTTLE_SULFURIC ) {
							f = 1
							txt lang("Ѓu‚Ё‚л‚·ЃcЃv", cnvtalk("Abortion..."))
						}
					}
				}
			}
			if ( f ) {
				snd SOUNDLIST_EQUIP1
				txt lang(itemname(ci, 1) + "‚р“n‚µ‚ЅЃB", "You hand " + itemname(ci, 1) + " to " + name(tc) + ".")
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_ENGAGEMENT_RING | inv(INV_ITEM_ID, ci) == ITEM_ID_ENGAGEMENT_AMULET ) {
					txtef COLOR_GREEN
					txt lang(name(tc) + "‚НЉз‚рђФ‚з‚Я‚ЅЃB", name(tc) + " blushes.")
					if ( cdata(CDATA_JOIN_DATE_MONTH, tc) == gdata(GDATA_MONTH) & cdata(CDATA_JOIN_DATE_DAY, tc) == gdata(GDATA_DAY) & cdata(CDATA_JOIN_DATE_YEAR, tc) > gdata(GDATA_YEAR) ) {
						txt lang("ЌЎ“ъ‚Н‚ ‚И‚Ѕ‚Ж" + name(tc) + "‚М‹L”O“ъ‚ѕЃI", "Today is your anniversary with " + name(tc) + "!")
						modimp tc, 15
					}
					modimp tc, 15
					cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_LOVE_POTION ) {
					txtmore
					txtef COLOR_PURPLE
					txt lang(name(tc) + "‚НЊѓ“{‚µ‚Д" + itemname(ci, 1) + "‚р’@‚«Љ„‚Б‚ЅЃB", name(tc) + " throws it on the ground angrily.")
					snd SOUNDLIST_CRUSH2
					txtmore
					txtef COLOR_SKY_BLUE
					txt lang(name(tc) + "ЃuѓTѓCѓeЃ[ЃIЃIЃv", cnvtalk("You scum!")), lang(name(tc) + "Ѓu‚±‚Мѓwѓ“ѓ^ѓCЃIЃv", cnvtalk("What are you trying to do!")), lang(name(tc) + "ЃuѓKЃ[ѓhЃIѓKЃ[ѓhЃIѓKЃ[ѓhЃIЃv", cnvtalk("Guards! Guards! Guards!"))
					modimp tc, -20
					cdata(CDATA_EMO_ICON, tc) = 18 + 100 * 3
					inv(INV_ITEM_NUM, ci)--
					goto *com_inventory
				}
				item_copy ci, ti
				inv(INV_ITEM_NUM, ci)--
				inv(INV_ITEM_NUM, ti) = 1
				item_stack tc, ti, 1
				ci = ti
				rc = tc
				gosub *chara_item
				if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) == FILTER_ITEM_ROD ) {
					cdata(CDATA_AI_ITEM, tc) = ci
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_LASER_BAZOOKA | inv(INV_ITEM_ID, ci) == ITEM_ID_M202_SPECIAL | inv(INV_ITEM_ID, ci) == ITEM_ID_PANZERFAUST_X ) {
					cdata(CDATA_AI_ITEM, tc) = ci
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_CF_POTIOMAN | inv(INV_ITEM_ID, ci) == ITEM_ID_CRUSH_POTIOMAN | inv(INV_ITEM_ID, ci) == ITEM_ID_BATTLE_POTIOMAN | inv(INV_ITEM_ID, ci) == ITEM_ID_SUPER_POTIOMAN ) {
					cdata(CDATA_AI_ITEM, tc) = ci
				}
				if ( inv(INV_ITEM_KNOWN, ci) == ITEM_KNOWN_FULL ) {
					inv(INV_ITEM_IDENTIFY_LEVEL, ci) = 0
				}
				locationweap = 0

				/********** ORIGINAL - BEGINNING **********

				if ( iequiploc(ci) == EQUIP_SLOT_SHOOT | iequiploc(ci) == EQUIP_SLOT_HAND ) {

				 ********** ORIGINAL - ENDING **********/

				/********** ANNA CUSTOM - BEGINNING **********/

				if ( (iequiploc(ci) == EQUIP_SLOT_SHOOT | iequiploc(ci) == EQUIP_SLOT_HAND) & Filter_Food != 1 ) {

				/********** ANNA CUSTOM - ENDING **********/

					if ( inv(INV_ITEM_KNOWN, ci) == ITEM_KNOWN_FULL ) {
						if ( iequiploc(ci) == EQUIP_SLOT_SHOOT ) {
							txt lang("‚»‚к‚Н‰“Љu‘•”х‚ѕ‚ЄЋи‚Й‚а‘•”х‚Е‚«‚йЃB‚З‚ї‚з‚Й‘•”х‚і‚№‚йЃH", "Although this is a ranged equipment it can be equipped in your hands. Which will you choose?")
						}
						if ( iequiploc(ci) == EQUIP_SLOT_HAND ) {
							txt lang("‚»‚к‚НЋи‘•”х‚ѕ‚Є‰“Љu‚Й‚а‘•”х‚Е‚«‚йЃB‚З‚ї‚з‚Й‘•”х‚і‚№‚йЃH", "Although this is a short distance equipment it can be equipped as ranged. Which will you choose?")
						}
						txtsetequipw 2
						repeat 2
							promptAdd s(cnt), key_select(cnt)
						loop
						val = promptx, prompty, 150, 0
						gosub *prompt_key
						if ( rtval == 1 ) {
							inv(INV_ITEM_IDENTIFY_LEVEL, ci) = 100
						}
						if ( rtval == 0 ) {
							handkazu = 0
							repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
								if ( cdata(cnt, tc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
									handkazu++
								}
							loop
							in = 0
							if ( handkazu > 0 ) {
								txt lang("‰Ѕ”Ф–Ъ‚МЋиЃH", "Which hand?")
								display_msg screenmsgy, 1
								val = (windoww - 200) / 2 + inf_screenx, winposy(60), 8, 1, handkazu
								inputlog = "" + handkazu
								gosub *prompt_word
								in = int(inputlog)
								if ( in > handkazu ) {
									in = handkazu
								}
								inv(INV_ITEM_IDENTIFY_LEVEL, ci) = in
							}
							if ( in == 0 | rtval == (-1) ) {
								inv(INV_ITEM_IDENTIFY_LEVEL, ci) = 0
							}
							in = 0
						}
					}
				}
				gosub *chara_equipFull
				if ( tc < MAX_CHARA_FOLLOWER ) {
					create_pcpic tc, 1
				}
				r1 = tc
				gosub *charaRefresh
				gosub *calcBurdenPc
				if ( invally == 1 ) {
					goto *com_inventory
				}
				gosub *screen_draw
				goto *turn_end
			}
			snd SOUNDLIST_FAIL1
			txt lang(name(tc) + "‚Н" + itemname(ci, 1) + "‚рЋу‚ЇЋж‚з‚И‚ўЃB", name(tc) + " refuse" + _s(tc) + " to take " + itemname(ci, 1) + ".")
			goto *com_inventory_loop
		}
		if ( invctrl == 13 ) {
			screenupdate = -1
			gosub *screen_draw
			item_identify ci, -1, efp
			if ( stat == ITEM_KNOWN_NONE ) {
				txt lang("ђV‚µ‚ў’mЋЇ‚Н“ѕ‚з‚к‚И‚©‚Б‚ЅЃB‚ж‚иЏг€К‚МЉУ’и‚Е’І‚Ч‚й•K—v‚Є‚ ‚йЃB", "You need higher identification to gain new knowledge.")
			}
			else {
				if ( stat < ITEM_KNOWN_FULL ) {
					txt lang("‚»‚к‚Н" + itemname(ci, inv(INV_ITEM_NUM, ci)) + "‚ѕ‚Ж”»–ѕ‚µ‚Ѕ‚ЄЃAЉ®‘S‚Й‚НЉУ’и‚Е‚«‚И‚©‚Б‚ЅЃB", "The item is half-identified as " + itemname(ci, 1) + ".")
				}
				else {
					txt lang("‚»‚к‚Н" + itemname(ci, inv(INV_ITEM_NUM, ci)) + "‚ѕ‚ЖЉ®‘S‚Й”»–ѕ‚µ‚ЅЃB", "The item is fully identified as " + itemname(ci, 1) + ".")
				}
			}
			item_stack CHARA_PLAYER, ci, 1
			invsubroutine = 0
			return 1
		}
		if ( invctrl == 14 ) {
			savecycle
			goto *act_use
		}
		if ( invctrl == 16 | invctrl == 0 ) {
			screenupdate = -1
			gosub *screen_draw
			invsubroutine = 0
			return 1
		}
		if ( invctrl == 15 ) {
			screenupdate = -1
			gosub *screen_draw
			savecycle
			goto *act_open
		}
		if ( invctrl == 17 ) {
			cidip = ci
			savecycle
			invctrl = 18
			txtnew
			snd SOUNDLIST_POP2
			goto *com_inventory
		}
		if ( invctrl == 18 ) {
			screenupdate = -1
			gosub *screen_draw
			goto *act_dip
		}
		if ( invctrl == 19 ) {
			if ( ibit(ITEM_BIT_NO_DROP, ci) ) {
				snd SOUNDLIST_FAIL1
				txt_nodrop
				goto *com_inventory_loop
			}
			screenupdate = -1
			gosub *screen_draw
			savecycle
			goto *god_offer
		}
		if ( invctrl == 20 ) {
			citrade = ci
			invctrl = 21
			snd SOUNDLIST_POP2
			goto *com_inventory
		}
		if ( invctrl == 21 ) {
			if ( ibit(ITEM_BIT_NO_DROP, ci) ) {
				snd SOUNDLIST_FAIL1
				txt_nodrop
				goto *com_inventory_loop
			}
			if ( cdata(CDATA_ROW_ACT, tc) != ACTION_NONE ) {
				cdata(CDATA_ROW_ACT, tc) = ACTION_NONE, 0
				cdata(CDATA_ITEM_USING, tc) = 0
			}
			snd SOUNDLIST_EQUIP1
			ibitmod ITEM_BIT_DROP, citrade, 0
			txt lang(itemname(ci) + "‚р" + itemname(citrade) + "‚ЖЊрЉ·‚µ‚ЅЃB", "You receive " + itemname(citrade) + " in exchange for " + itemname(ci) + ".")
			if ( inv(INV_ITEM_IDENTIFY_LEVEL, ci) != 0 ) {
				inv(INV_ITEM_KNOWN, ci) = ITEM_KNOWN_FULL
				inv(INV_ITEM_IDENTIFY_LEVEL, ci) = 0
			}
			if ( inv(INV_ITEM_EQUIP, citrade) != 0 ) {
				p = inv(INV_ITEM_EQUIP, citrade)
				cdata(p, tc) = cdata(p, tc) / 10000 * 10000
				inv(INV_ITEM_EQUIP, citrade) = 0
			}
			ti = citrade
			gosub *act_exchange
			convertartifact ci
			rc = tc
			ci = citrade
			if ( cdata(CDATA_AI_ITEM, rc) == ci ) {
				cdata(CDATA_AI_ITEM, rc) = 0
			}
			gosub *chara_equipFull
			if ( tc >= MAX_CHARA_FOLLOWER ) {
				gosub *supplyEquip
			}
			gosub *chara_adjustInv
			r1 = tc
			gosub *charaRefresh
			gosub *calcBurdenPc
			invsubroutine = 0
			return 1
		}
		if ( invctrl == 23 ) {
			if ( invctrl(1) != 21 & invctrl(1) != 23 & invctrl(1) != 24 ) {
				item_separate ci
			}
			invsubroutine = 0
			return 1
		}
		if ( invctrl == 24 ) {
			if ( invctrl(1) == 0 ) {
				snd SOUNDLIST_INV
				if ( gdata(GDATA_AREA) == AREA_LUMIEST | gdata(GDATA_AREA) == AREA_ARCBELC ) {
					gdata(GDATA_FLAG_GUILD_MAGE_NORMA) -= (inv(INV_ITEM_PARAM1, ci) + 5) * inv(INV_ITEM_NUM, ci)
					if ( gdata(GDATA_FLAG_GUILD_MAGE_NORMA) <= 0 ) {
						gdata(GDATA_FLAG_GUILD_MAGE_NORMA) = 0
					}
					txtef COLOR_GREEN
					txt lang(itemname(ci) + "‚р”[“ь‚µ‚Ѕ", "You deliver " + itemname(ci) + ". ") + "(" + (inv(INV_ITEM_PARAM1, ci) + 5) * inv(INV_ITEM_NUM, ci) + " Guild Point)"
					if ( gdata(GDATA_FLAG_GUILD_MAGE_NORMA) == 0 ) {
						snd SOUNDLIST_COMPLETE1
						txtef COLOR_GREEN
						txt lang("ѓmѓ‹ѓ}‚р’Bђ¬‚µ‚ЅЃI", "You fulfill the quota!")
					}
				}
				else {
					qdata(QDATA_PARAM2, gdata(GDATA_QUEST_REF)) += inv(INV_ITEM_WEIGHT, ci) * inv(INV_ITEM_NUM, ci)
					txtef COLOR_GREEN
					txt lang(itemname(ci) + "‚р”[“ь‚µ‚ЅЃB", "You deliver " + itemname(ci) + ".") + " +" + cnvweight(inv(INV_ITEM_WEIGHT, ci) * inv(INV_ITEM_NUM, ci)) + lang("  ”[“ьЌП‚Э", " Delivered ") + "(" + cnvweight(qdata(QDATA_PARAM2, gdata(GDATA_QUEST_REF))) + ") " + lang("”[“ьѓmѓ‹ѓ}", "Quota ") + "(" + cnvweight(qdata(QDATA_PARAM1, gdata(GDATA_QUEST_REF))) + ")"
				}
				inv(INV_ITEM_NUM, ci) = 0
				gosub *calcBurdenPc
				goto *com_inventory
			}
			if ( invctrl(1) == 2 ) {
				if ( cdata(CDATA_GOLD, CHARA_PLAYER) < inv(INV_ITEM_SUB_NAME, ci) & inv(INV_ITEM_ID, ci) == ITEM_ID_BILL ) {
					snd SOUNDLIST_FAIL1
					txt lang("‹а‚Є‘«‚и‚И‚ўЃc", "You don't have enough money.")
					goto *com_inventory_loop
				}
				if ( cdata(CDATA_GOLD, CHARA_PLAYER) < 1200000 & inv(INV_ITEM_ID, ci) == ITEM_ID_1_2_MILLION_TAX_CERTIFICATE ) {
					snd SOUNDLIST_FAIL1
					txt lang("‹а‚Є‘«‚и‚И‚ўЃc", "You don't have enough money.")
					goto *com_inventory_loop
				}
				if ( cdata(CDATA_GOLD, CHARA_PLAYER) < 12000000 & inv(INV_ITEM_ID, ci) == ITEM_ID_12_MILLION_TAX_CERTIFICATE ) {
					snd SOUNDLIST_FAIL1
					txt lang("‹а‚Є‘«‚и‚И‚ўЃc", "You don't have enough money.")
					goto *com_inventory_loop
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_BILL ) {
					if ( gdata(GDATA_BILL) <= 0 ) {
						snd SOUNDLIST_FAIL1
						txt lang("‚Ь‚ѕ”[ђЕ‚·‚й•K—v‚Н‚И‚ўЃB", "You don't have to pay your tax yet.")
						goto *com_inventory
					}
					/********** CUSTOM CHALLENGE - DOUBLE TAX EACH MONTH - BEGINNING **********/
					if ( TweakData(TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, TWEAK_CATEGORY_CHALLENGE) > 0 ) {
						if ( inv(INV_ITEM_SUB_NAME, ci) == 0 ) {
							txtef COLOR_RED
							txt "Submitting a empty bill will fail the challenge. Are you sure about that?"
							promptYesNo
							if ( rtval != 0 ) {
								goto *com_inventory_loop
							}
						}
					}
					/********** CUSTOM CHALLENGE - DOUBLE TAX EACH MONTH - ENDING **********/
					cdata(CDATA_GOLD, CHARA_PLAYER) -= inv(INV_ITEM_SUB_NAME, ci)
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_1_2_MILLION_TAX_CERTIFICATE ) {
					cdata(CDATA_GOLD, CHARA_PLAYER) -= 1200000
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_12_MILLION_TAX_CERTIFICATE ) {
					cdata(CDATA_GOLD, CHARA_PLAYER) -= 12000000
				}
				snd SOUNDLIST_PAYGOLD1
				txtef COLOR_GREEN
				txt lang(itemname(ci) + "‚рЋx•Ґ‚Б‚ЅЃB", "You pay " + itemname(ci) + ".")
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_BILL ) {
					/********** CUSTOM CHALLENGE - DOUBLE TAX EACH MONTH - BEGINNING **********/
					if ( TweakData(TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, TWEAK_CATEGORY_CHALLENGE) > 0 ) {
						if ( inv(INV_ITEM_SUB_NAME, ci) == 0 ) {
							txtmore
							txtef COLOR_RED
							txt "YOU COMMITED TAX EVASION."
							TweakData(TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, TWEAK_CATEGORY_CHALLENGE) = (-1)
						} else {
							TweakData(TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, TWEAK_CATEGORY_CHALLENGE) += 1
							s = lang("–€ЊЋ2”{‚МђЕ‹а", "Double Tax Each Month")
							file = "bg_re1"
							buff = lang("ђM‚¶‚з‚к‚И‚ўЃI‚ ‚И‚Ѕ‚Н" + (TweakData(TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, TWEAK_CATEGORY_CHALLENGE) - 1) + "ѓ–ЊЋЉФђЕ‹а‚р•Ґ‚Б‚ЅЃI", "Unbelievable! You paid your taxes for " + (TweakData(TWEAK_CHALLENGE_DOUBLE_TAX_EACH_MONTH, TWEAK_CATEGORY_CHALLENGE) - 1) + " month!")
							listmax = 0
							chatList 1, lang("ђ‹‚ЙЃcЃI", "Finally!")
							chatList 2, lang("“–‘R‚МЊ‹‰К‚ѕ", "Just the natural outcome.")
							chatList 3, lang("‚Ё‚§‚§‚§‚§ЃI", "Woooooo!")
							chatList 4, lang("‚У‚Б", "Heh.")
							chatList 5, lang("ЌЎ“ъ‚Н–°‚к‚И‚ў‚И", "I can't sleep tonight.")
							chatList 6, lang("‚Ь‚Ѕ‚»‚с‚ИЏз’k‚р", "You're kidding.")
							gosub *re_select
						}
					}
					/********** CUSTOM CHALLENGE - DOUBLE TAX EACH MONTH - ENDING **********/
					gdata(GDATA_BILL)--
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_1_2_MILLION_TAX_CERTIFICATE ) {
					gdata(STARTING_GDATA_FLAG + 359) += 1200000
				}
				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_12_MILLION_TAX_CERTIFICATE ) {
					gdata(STARTING_GDATA_FLAG + 359) += 12000000
				}
				inv(INV_ITEM_NUM, ci)--
				gosub *calcBurdenPc
				screenupdate = -1
				gosub *screen_draw
				goto *com_inventory
			}
		}
		if ( invctrl == 25 ) {
			ti = inv_getfreeid(CHARA_PLAYER)
			if ( ti == (-1) ) {
				txt_invfull
				goto *com_inventory_loop
			}
			if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
				if ( inv_sum(CHARA_PLAYER) > 20 ) {
					txt_invfull
					goto *com_inventory_loop
				}
			}
			if ( cbit(CHARA_BIT_BIRTHED_CHILD, tc) == TRUE & cdata(CDATA_SPRITE_SIZE_MILK, tc) == (-4) ) {
				f = rnd(8) + 1
				if ( f <= 4 ) {
					s = "", lang("ѓCѓ„‚џ‚џ‚ ЃI", "Nooooo!"), lang("ѓCѓ„Ѓ`ЃI", "No!"), lang("ѓCѓ„Ѓф", "No! No!"), lang("ѓCѓ„ѓbЃI", "No!!!!!!")
					snd SOUNDLIST_FAIL1
					txt lang(name(tc) + "Ѓu" + s(f) + "Ѓv", cnvtalk(s(f)))
					goto *pc_turn
				}
			}
			f = 0
			if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) == FILTER_ORE ) {
				f = 2
			}
			if ( f != 0 ) {
				s = "", lang("‚в‚ѕ", "No!"), lang("‚ ‚°‚И‚ў‚ж", "It's mine."), lang("‚ѕ‚Я", "Get off!"), lang("ѓCѓ„ЃI", "Never.")
				snd SOUNDLIST_FAIL1
				txtef COLOR_BLUE
				txt lang(name(tc) + "Ѓu" + s(f) + "Ѓv", cnvtalk(s(f)))
				goto *com_inventory_loop
			}
			if ( inv(INV_ITEM_EQUIP, ci) != 0 ) {
				if ( inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_CURSED | inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_DOOMED ) {
					txt lang(itemname(ci) + "‚НЋф‚н‚к‚Д‚ў‚ДЉO‚№‚И‚ўЃB", "" + itemname(ci) + " is cursed and can't be taken off.")
					goto *com_inventory
				}
				if ( cdata(CDATA_CONDITION_BRAINWASH, tc) != 0 ) {
					txt lang(name(tc) + "‚Нђф”]‚і‚к‚Д‚ў‚ДЃA‘•”х‚рЉO‚і‚И‚ўЃI", "It is impossible to change the equipment by confusing.")
					goto *com_inventory
				}
				p = inv(INV_ITEM_EQUIP, ci)
				cdata(p, tc) = cdata(p, tc) / 10000 * 10000
				inv(INV_ITEM_EQUIP, ci) = 0
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_ENGAGEMENT_RING | inv(INV_ITEM_ID, ci) == ITEM_ID_ENGAGEMENT_AMULET ) {
				txtef COLOR_PURPLE
				txt lang(name(tc) + "‚НЊѓ“{‚µ‚Д" + itemname(ci, 1) + "‚р€щ‚ЭЌћ‚с‚ѕЃB", name(tc) + " swallows " + itemname(ci, 1) + " angrily.")
				snd SOUNDLIST_OFFER1
				modimp tc, -20
				cdata(CDATA_EMO_ICON, tc) = 18 + 100 * 3
				inv(INV_ITEM_NUM, ci)--
				goto *com_inventory
			}
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_HANDMADE_CHOCOLATE ) {
				snd SOUNDLIST_EAT1
				txt lang(name(tc) + "‚Н‹}‚ў‚Е" + itemname(ci, 1) + "‚р–j’Ј‚иЃA‚а‚І‚а‚І‚µ‚И‚Є‚зЃA‚»‚с‚ИѓAѓCѓeѓЂ‚НЋќ‚Б‚Д‚ў‚И‚ў‚Ж“љ‚¦‚ЅЃB", name(tc) + " swallows " + itemname(ci, 1) + " angrily.")
				snd SOUNDLIST_OFFER1
				inv(INV_ITEM_NUM, ci)--
				cdata(CDATA_HUNGER, tc) = 15000
				goto *com_inventory
			}
			snd SOUNDLIST_EQUIP1
			ibitmod ITEM_BIT_DROP, ci, 0
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_GOLD_PIECE ) {
				in = inv(INV_ITEM_NUM, ci)
			}
			else {
				in = 1
			}
			txt lang(itemname(ci, in) + "‚рЋу‚ЇЋж‚Б‚ЅЃB", "You take " + itemname(ci, in) + ".")
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_GOLD_PIECE ) {
				cdata(CDATA_GOLD, CHARA_PLAYER) += in
				inv(INV_ITEM_NUM, ci) = 0
			}
			else {
				item_copy ci, ti
				inv(INV_ITEM_NUM, ci) -= in
				inv(INV_ITEM_NUM, ti) = in
				item_stack CHARA_PLAYER, ti, 1
				convertartifact ti
			}
			rc = tc
			gosub *chara_equipFull
			if ( tc < MAX_CHARA_FOLLOWER ) {
				create_pcpic tc, 1
			}
			r1 = tc
			gosub *charaRefresh
			gosub *calcBurdenPc
			goto *com_inventory
		}
		if ( invctrl == 26 ) {
			savecycle
			gosub *findLocation
			if ( stat != 1 ) {
				if ( stat == 0 ) {
					txt_cantsee
					gosub *screen_draw
				}
				goto *pc_turn
			}
			if ( chipm(CHIPM_ATTRIB, map(tlocx, tlocy, MAP_TILE_ID)) & CHIPM_ATTRIB_CANT_PASS | map(tlocx, tlocy, MAP_FEATS_ON_TILE) / 1000 \ 100 == CELL_FEATURE_DOOR_CLOSED | map(tlocx, tlocy, MAP_FEATS_ON_TILE) / 1000 \ 100 == 23 | map(tlocx, tlocy, MAP_FEATS_ON_TILE) / 1000 \ 100 == 31 | map(tlocx, tlocy, MAP_FEATS_ON_TILE) / 1000 \ 100 == 33 ) { // TODO
				txt lang("‚»‚±‚Й‚Н“Љ‚°‚з‚к‚И‚ўЃB", "The location is blocked.")
				gosub *screen_draw
				goto *pc_turn
			}
			goto *act_throw
		}
		if ( invctrl == 27 ) {
			gosub *act_pickpocket
			invsubroutine = 0
			return 1
		}
		if ( invctrl == 28 ) {
			if ( invctrl(1) == 0 ) {
				txtnew
				ti = inv_getfreeid(CHARA_PLAYER)
				if ( ti == (-1) ) {
					txt lang("‚±‚к€ИЏгЋќ‚Д‚И‚ўЃB", "Your inventory is full.")
					snd SOUNDLIST_FAIL1
					goto *com_inventory
				}
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
					if ( inv_sum(CHARA_PLAYER) > 20 ) {
						txt_invfull
						goto *com_inventory
					}
				}
				item_find ITEM_ID_SMALL_MEDAL, 3, 1
				if ( stat != (-1) ) {
					i = stat
					p = inv(INV_ITEM_NUM, i)
				}
				else {
					p = 0
				}
				if ( p < calcmedalvalue(ci) ) {
					txt lang("ѓЃѓ_ѓ‹‚Мђ”‚Є‘«‚и‚И‚ўЃc", "You don't have enough coins.")
					snd SOUNDLIST_FAIL1
					goto *com_inventory
				}
				inv(INV_ITEM_NUM, i) -= calcmedalvalue(ci)
				snd SOUNDLIST_PAYGOLD1
				item_copy ci, ti
				txt lang("" + itemname(ti, 1) + "‚рЋу‚ЇЋж‚Б‚ЅЃI", "You receive " + itemname(ti, 1) + "!")
				item_stack CHARA_PLAYER, ti, 1
				convertartifact ti, 1
				goto *com_inventory
			}
			if ( invctrl(1) == 1 ) {
				txtnew
				ti = inv_getfreeid(CHARA_PLAYER)
				if ( ti == (-1) ) {
					txt lang("‚±‚к€ИЏгЋќ‚Д‚И‚ўЃB", "Your inventory is full.")
					snd SOUNDLIST_FAIL1
					goto *com_inventory
				}
				if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL ) {
					if ( inv_sum(CHARA_PLAYER) > 20 ) {
						txt_invfull
						goto *com_inventory
					}
				}
				item_find ITEM_ID_MUSIC_TICKET, 3, 1
				if ( stat != (-1) ) {
					i = stat
					p = inv(INV_ITEM_NUM, i)
				}
				else {
					p = 0
				}
				if ( p < calcmusicticketvalue(ci) ) {
					txt lang("ѓ`ѓPѓbѓg‚Мђ”‚Є‘«‚и‚И‚ўЃc", "You don't have enough tickets.")
					snd SOUNDLIST_FAIL1
					goto *com_inventory
				}
				inv(INV_ITEM_NUM, i) -= calcmusicticketvalue(ci)
				snd SOUNDLIST_PAYGOLD1
				item_copy ci, ti
				txt lang("" + itemname(ti, 1) + "‚рЋу‚ЇЋж‚Б‚ЅЃI", "You receive " + itemname(ti, 1) + "!")
				item_stack CHARA_PLAYER, ti, 1
				convertartifact ti, 1
				goto *com_inventory
			}
		}
	}
	if ( key == key_identify ) {
		if ( listmax != 0 ) {
			ci = list(0, pagesize * page + cs)
			gosub *com_identify
			goto *com_inventory
		}
	}
	page_change *com_inventory_loop
	if ( menucycle == 1 ) {
		if ( key == key_next | key == key_prev ) {
			if ( dropcontinue ) {
				i = 4
			}
			else {
				if ( invally == 1 ) {
					i = 2
				}
				else {
					if ( invcontainer ) {
						i = 3
					}
					else {
						if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
							i = 1
						}
						else {
							i = 0
						}
					}
				}
			}
			p = -1
			repeat 12
				if ( invctrl == cycle(cnt, i) ) {
					p = cnt
					break
				}
			loop
			if ( p != (-1) ) {
				if ( key == key_next ) {
					p++
					if ( cycle(p, i) == (-1) ) {
						p = 0
					}
				}
				if ( key == key_prev ) {
					p--
					if ( p < 0 ) {
						p = cyclemax(i)
					}
				}
				if ( invctrl != cycle(p, i) ) {
					invctrl = cycle(p, i)
					snd SOUNDLIST_INV
					screenupdate = -1
					gosub *screen_draw
					goto *com_inventory
				}
			}
		}
	}
	if ( key == key_mode2 ) {
		if ( invctrl == 1 ) {
			ci = list(0, pagesize * page + cs)
			if ( ibit(ITEM_BIT_NO_DROP, ci) == 0 ) {
				ibitmod ITEM_BIT_NO_DROP, ci, 1
				txt lang(itemname(ci) + "‚р‘еЋ–‚И‚а‚М‚ЙЋw’и‚µ‚ЅЃB", "You set " + itemname(ci) + " as no-drop.")
			}
			else {
				ibitmod ITEM_BIT_NO_DROP, ci, 0
				txt lang(itemname(ci) + "‚Н‚а‚¤‘еЋ–‚И‚а‚М‚Е‚Н‚И‚ўЃB", itemname(ci) + " is no longer set as no-drop.")
			}
		}
		if ( invctrl == 2 ) {
			if ( dropcontinue == 0 ) {
				txt lang("‘±‚Ї‚ДѓAѓCѓeѓЂ‚р’u‚­‚±‚Ж‚Є‚Е‚«‚йЃB", "You can continuously drop items.")
				dropcontinue = 1
				snd SOUNDLIST_INV
				screenupdate = -1
				gosub *screen_draw
				goto *com_inventory
			}
		}
	}
	if ( key == key_mode ) {

		/********** ORIGINAL - BEGINNING **********

		if ( showresist == 1 ) {
			showresist = 0
		}
		else {
			showresist = 1
		}

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/ // Show skills on 'z' toggle

		if ( showresist == 8 ) {
			showresist = 0
		}
		else {
			showresist++
		}

		/********** ANNA CUSTOM - ENDING **********/

		snd SOUNDLIST_POP1
		goto *com_inventory_loop
	}
	if ( key == key_cancel ) {
*com_inventory_end
		savecycle
		if ( invctrl == 22 ) {
			if ( invctrl(1) == 0 ) {
				if ( listmax > 0 ) {
					txt lang("‚Ь‚ѕѓAѓCѓeѓЂ‚ЄЋc‚Б‚Д‚ў‚й‚Є‚ў‚ўЃH", "Really leave these items?")
					promptYesNo
					if ( rtval != 0 ) {
						goto *com_inventory_loop
					}
				}
			}
		}
		cc = CHARA_PLAYER
		efcancel = 1
		if ( invsubroutine == 1 ) {
			invsubroutine = 0
			return 0
		}
		if ( invctrl == 6 ) {
			screenupdate = -1
			gosub *screen_draw
			menucycle = 1
			goto *com_wear
		}
		if ( invctrl == 11 | invctrl == 12 | invctrl == 22 | invctrl == 28 ) {
			goto *shop_end
		}
		if ( invally == 1 ) {
			invally = 0
		}
		if ( dropcontinue ) {
			dropcontinue = 0
			goto *turn_end
		}
		screenupdate = 0
		gosub *screen_draw
		goto *pc_turn
	}
	if ( invctrl == 5 | invctrl == 7 | invctrl == 8 | invctrl == 9 | invctrl == 14 | invctrl == 15 | invctrl == 26 ) {
		if ( key == "sc" ) {
			p = list(0, pagesize * page + cs)
			if ( inv(INV_ITEM_WEIGHT, p) < 0 ) {
				snd SOUNDLIST_FAIL1
				txt lang("‰ЧЋФ‚М‰Ч•Ё‚Н“o^‚Е‚«‚И‚ўЃB", "You can't make a shortcut for cargo stuff.")
				goto *com_inventory
			}
			snd SOUNDLIST_OK1
			p = inv(INV_ITEM_ID, list(0, pagesize * page + cs)) + invctrl * 10000
			if ( gdata(STARTING_GDATA_SHORTCUT + sc) == p ) {
				gdata(STARTING_GDATA_SHORTCUT + sc) = 0
				goto *com_inventory_loop
			}
			repeat RANGE_GDATA_SHORTCUT
				if ( gdata(STARTING_GDATA_SHORTCUT + cnt) == p ) {
					gdata(STARTING_GDATA_SHORTCUT + cnt) = 0
				}
			loop
			gdata(STARTING_GDATA_SHORTCUT + sc) = p
			txt_shortcut
			goto *com_inventory_loop
		}
	}
*com_inventory_loop_WHILE1_CONTINUE
	goto *com_inventory_loop_WHILE1
*com_inventory_loop_WEND1
	goto *com_identify

#defcfunc trimdesc str trimdesc_arg1, int trimdesc_arg2
	locvar_trimdesc_q = trimdesc_arg1
	repeat
		await
		locvar_trimdesc_p = instr(locvar_trimdesc_q, 0, "\t")
		if ( locvar_trimdesc_p != (-1) ) {
			locvar_trimdesc_q = strmid(locvar_trimdesc_q, 0, locvar_trimdesc_p) + strmid(locvar_trimdesc_q, locvar_trimdesc_p + 1, 999)
			continue
		}
		if ( trimdesc_arg2 == 1 ) {
			locvar_trimdesc_p = instr(locvar_trimdesc_q, 0, "\n")
			if ( locvar_trimdesc_p != (-1) ) {
				locvar_trimdesc_q = strmid(locvar_trimdesc_q, 0, locvar_trimdesc_p) + strmid(locvar_trimdesc_q, locvar_trimdesc_p + 1, 999)
				continue
			}
			locvar_trimdesc_p = instr(locvar_trimdesc_q, 0, "#")
			if ( locvar_trimdesc_p != (-1) ) {
				locvar_trimdesc_q = strmid(locvar_trimdesc_q, 0, locvar_trimdesc_p)
			}
			if ( jp ) {
				if ( strmid(locvar_trimdesc_q, strlen(locvar_trimdesc_q) - 3, 2) == "ЃB" ) {
					locvar_trimdesc_q = strmid(locvar_trimdesc_q, 0, strlen(locvar_trimdesc_q) - 3)
				}
			}
			else {
				locvar_trimdesc_p = instr(locvar_trimdesc_q, 0, ",")
				if ( locvar_trimdesc_p != (-1) ) {
					locvar_trimdesc_q = strmid(locvar_trimdesc_q, 0, locvar_trimdesc_p) + "." + strmid(locvar_trimdesc_q, locvar_trimdesc_p + 1, 999)
					continue
				}
			}
		}
		if ( trimdesc_arg2 == 2 ) {
			locvar_trimdesc_p = instr(locvar_trimdesc_q, 0, "#")
			if ( locvar_trimdesc_p != (-1) ) {
				locvar_trimdesc_q = strmid(locvar_trimdesc_q, 0, locvar_trimdesc_p) + strmid(locvar_trimdesc_q, locvar_trimdesc_p + 1, 999)
				continue
			}
		}
		break
	loop
	return locvar_trimdesc_q

*com_identify
	procid = (procid + 1) \ 4
	proclist(procid) = "com_identify" + " ct:" + ct
	if ( ci < 0 ) {
		dialog "Ћb’иѓGѓ‰Ѓ[‰с”рЏ€’u‚Е‚·ЃB‚ЁЋиђ”‚Е‚·‚ЄЃA‚З‚МЋќ‚ї•ЁѓЃѓjѓ…Ѓ[(—б‚¦‚О€щ‚ЮЃAђU‚йЃAђH‚Ч‚й‚И‚ЗЃj‚©‚з’ІЌё(xѓLЃ[)‚р‰џ‚µ‚Ѕ‚©•сЌђ‚ЁЉи‚ў‚µ‚Ь‚·ЃB"
		return
	}
	snd SOUNDLIST_POP2
	page_save
	page = 0
	pagesize = 15
	listmax = 0
	p = 0
	s = ""
	reftype = refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE)
	dbid = inv(INV_ITEM_ID, ci)
	dbmode = DBMODE_REF
	gosub *db_item
	if ( en ) {
		description(0) = ""
		description(1) = ""
		description(2) = ""
		description(3) = ""
	}
	dbmode = DBMODE_DESC
	gosub *db_item

	/********** CUSTOM - BEGINNING **********/ // Shows creature card info on corpses, cards, and figures

	if ( inv(INV_ITEM_SUB_NAME, ci) != 0 ) {
		if ( inv(INV_ITEM_ID, ci) == ITEM_ID_CORPSE | inv(INV_ITEM_ID, ci) == ITEM_ID_CARD | inv(INV_ITEM_ID, ci) == ITEM_ID_FIGURINE ) {
			dbid_bk = dbid
			dbid = inv(INV_ITEM_SUB_NAME, ci)
			gosub *db_card@
			description(1) = description(0)
			description(0) = cardrefskill
			dbid = dbid_bk
		}
	}

	/********** CUSTOM - ENDING **********/

	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Shows item sell price if the item quality is known

	if ( inv(INV_ITEM_KNOWN, ci) >= ITEM_KNOWN_QUALITY ) {
		item_info_value = calcitemvalue(ci, 1)
		item_info_number = inv(INV_ITEM_NUM, ci)
		item_value_total = item_info_value * item_info_number
		if ( item_info_value > 0 & item_info_number > 0 & inv(INV_ITEM_QUALITY, ci) < FIX_QUALITY_UNIQUE ) {
			list(0, p) = 7
			listn(0, p) = lang("‚±‚МѓAѓCѓeѓЂ‚Є" + item_info_value + "‚М‹а‰Э‚Е”„‚з‚к‚й‚Жђ„’и‚µ‚Ь‚·ЃB (‹а‰Э‚МЌ‡Њv: " + item_value_total + ")", "You estimate this item would sell for " + item_info_value + "gp. (Total gp: " + item_value_total + ")")
			p++
		}
	}

	/********** BLOODYSHADE CUSTOM - ENDING **********/

	if ( inv(INV_ITEM_KNOWN, ci) >= ITEM_KNOWN_FULL ) {
		if ( inv(INV_ITEM_PARAM4, ci) != 0 & inv(INV_ITEM_ID, ci) != ITEM_ID_FISHING_POLE & inv(INV_ITEM_ID, ci) != ITEM_ID_GIFT ) {
			if ( inv(INV_ITEM_PARAM4, ci) == 1 ) {
				exist exedir + "user\\item\\plan1.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 2 ) {
				exist exedir + "user\\item\\plan2.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 3 ) {
				exist exedir + "user\\item\\plan3.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 4 ) {
				exist exedir + "user\\item\\plan4.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 5 ) {
				exist exedir + "user\\item\\plan5.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 6 ) {
				exist exedir + "user\\item\\plan6.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 7 ) {
				exist exedir + "user\\item\\plan7.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 8 ) {
				exist exedir + "user\\item\\plan8.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 9 ) {
				exist exedir + "user\\item\\plan9.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 10 ) {
				exist exedir + "user\\item\\plan10.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 11 ) {
				exist exedir + "user\\item\\plan11.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 12 ) {
				exist exedir + "user\\item\\plan12.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 13 ) {
				exist exedir + "user\\item\\plan13.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 14 ) {
				exist exedir + "user\\item\\plan14.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 15 ) {
				exist exedir + "user\\item\\plan15.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 16 ) {
				exist exedir + "user\\item\\plan16.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 17 ) {
				exist exedir + "user\\item\\plan17.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 18 ) {
				exist exedir + "user\\item\\plan18.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 19 ) {
				exist exedir + "user\\item\\plan19.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 20 ) {
				exist exedir + "user\\item\\plan20.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 21 ) {
				exist exedir + "user\\item\\plan21.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 22 ) {
				exist exedir + "user\\item\\plan22.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 23 ) {
				exist exedir + "user\\item\\plan23.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 24 ) {
				exist exedir + "user\\item\\plan24.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 25 ) {
				exist exedir + "user\\item\\plan25.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 26 ) {
				exist exedir + "user\\item\\plan26.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 27 ) {
				exist exedir + "user\\item\\plan27.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 28 ) {
				exist exedir + "user\\item\\plan28.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 29 ) {
				exist exedir + "user\\item\\plan29.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 30 ) {
				exist exedir + "user\\item\\plan30.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 31 ) {
				exist exedir + "user\\item\\plan31.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 32 ) {
				exist exedir + "user\\item\\plan32.txt"
			}
			if ( inv(INV_ITEM_PARAM4, ci) == 33 ) {
				exist exedir + "user\\item\\plan33.txt"
			}
			if ( strsize != (-1) ) {
				sdim buf, strsize
				notesel buf
				if ( inv(INV_ITEM_PARAM4, ci) == 1 ) {
					noteload exedir + "user\\item\\plan1.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 2 ) {
					noteload exedir + "user\\item\\plan2.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 3 ) {
					noteload exedir + "user\\item\\plan3.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 4 ) {
					noteload exedir + "user\\item\\plan4.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 5 ) {
					noteload exedir + "user\\item\\plan5.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 6 ) {
					noteload exedir + "user\\item\\plan6.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 7 ) {
					noteload exedir + "user\\item\\plan7.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 8 ) {
					noteload exedir + "user\\item\\plan8.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 9 ) {
					noteload exedir + "user\\item\\plan9.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 10 ) {
					noteload exedir + "user\\item\\plan10.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 11 ) {
					noteload exedir + "user\\item\\plan11.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 12 ) {
					noteload exedir + "user\\item\\plan12.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 13 ) {
					noteload exedir + "user\\item\\plan13.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 14 ) {
					noteload exedir + "user\\item\\plan14.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 15 ) {
					noteload exedir + "user\\item\\plan15.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 16 ) {
					noteload exedir + "user\\item\\plan16.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 17 ) {
					noteload exedir + "user\\item\\plan17.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 18 ) {
					noteload exedir + "user\\item\\plan18.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 19 ) {
					noteload exedir + "user\\item\\plan19.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 20 ) {
					noteload exedir + "user\\item\\plan20.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 21 ) {
					noteload exedir + "user\\item\\plan21.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 22 ) {
					noteload exedir + "user\\item\\plan22.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 23 ) {
					noteload exedir + "user\\item\\plan23.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 24 ) {
					noteload exedir + "user\\item\\plan24.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 25 ) {
					noteload exedir + "user\\item\\plan25.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 26 ) {
					noteload exedir + "user\\item\\plan26.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 27 ) {
					noteload exedir + "user\\item\\plan27.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 28 ) {
					noteload exedir + "user\\item\\plan28.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 29 ) {
					noteload exedir + "user\\item\\plan29.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 30 ) {
					noteload exedir + "user\\item\\plan30.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 31 ) {
					noteload exedir + "user\\item\\plan31.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 32 ) {
					noteload exedir + "user\\item\\plan32.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 33 ) {
					noteload exedir + "user\\item\\plan33.txt"
				}
				s = "%txtFlavor"
				o = instr(buf, 0, s + "," + lang("JP", "EN"))
				buf = strmid(buf, o, instr(buf, o + 1, "%"))
				if ( noteinfo(0) > 1 ) {
					o = noteinfo(0) - 1
					noteget s, o
				}
				buf = trimdesc(s, 1)
			}
		}
		else {
			buf = cnven(trimdesc(description(3), 1))
		}
		if ( buf != "" ) {
			list(0, p) = 7
			listn(0, p) = buf
			p++
		}
	}
	if ( inv(INV_ITEM_KNOWN, ci) >= ITEM_KNOWN_QUALITY ) {

		/********** ORIGINAL - BEGINNING **********

		if ( inv(INV_ITEM_MATERIAL, ci) != ITEM_MATERIAL_SAND ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Н" + mtname(0, inv(INV_ITEM_MATERIAL, ci)) + "‚ЕЌм‚з‚к‚Д‚ў‚й", "It is made of " + mtname(0, inv(INV_ITEM_MATERIAL, ci)) + ".")
			p++
		}

		 ********** ORIGINAL - ENDING **********/

		/********** ANNA CUSTOM - BEGINNING **********/ // Shows what seeds grow into when planted

		if ( inv(INV_ITEM_MATERIAL, ci) != ITEM_MATERIAL_SAND ) {
			list(0, p) = 7
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_MAGICAL_SEED | inv(INV_ITEM_ID, ci) == ITEM_ID_GEM_SEED | inv(INV_ITEM_ID, ci) == ITEM_ID_ARTIFACT_SEED | inv(INV_ITEM_ID, ci) == ITEM_ID_UNKNOWN_SEED | inv(INV_ITEM_ID, ci) == ITEM_ID_HERB_SEED | inv(INV_ITEM_ID, ci) == ITEM_ID_FRUIT_SEED | inv(INV_ITEM_ID, ci) == ITEM_ID_VEGETABLE_SEED ) {
				listn(0, p) = lang("‚»‚к‚Н" + mtname(0, inv(INV_ITEM_MATERIAL, ci)) + "‚ЕЌм‚з‚к‚Д‚ў‚й", "It grows into " + mtname(0, inv(INV_ITEM_MATERIAL, ci)) + " when planted.")
			}
			else {
				listn(0, p) = lang("‚»‚к‚Н" + mtname(0, inv(INV_ITEM_MATERIAL, ci)) + "‚ЕЌм‚з‚к‚Д‚ў‚й", "It is made of " + mtname(0, inv(INV_ITEM_MATERIAL, ci)) + ".")
			}
			p++
		}

		/********** ANNA CUSTOM - ENDING **********/

		if ( inv(INV_ITEM_MATERIAL, ci) == ITEM_MATERIAL_ETHER ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Н‘•”х‚µ‚Д‚ў‚йЉФЃAѓGЃ[ѓeѓ‹‚М•a‚МђiЌs‚р‘Ѓ‚Я‚й", "It speeds up the Ether Disease while equipped.")
			p++
		}
		if ( ibit(ITEM_BIT_ACIDPROOF, ci) ) {
			if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) != FILTER_ITEM_POTION ) {
				list(0, p) = 7
				listn(0, p) = lang("‚»‚к‚НЋ_‚Е‚НЏќ‚В‚©‚И‚ў", "It is acidproof.")
				p++
			}
		}
		if ( ibit(ITEM_BIT_FIREPROOF, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Н‰Љ‚Е‚Н”R‚¦‚И‚ў", "It is fireproof.")
			p++
		}
		if ( ibit(ITEM_BIT_COLDPROOF, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Н—в‹C‚Е‚НЌУ‚Ї‚И‚ў", "It is coldproof.")
			p++
		}
		if ( ibit(ITEM_BIT_PRECIOUS, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Н‹MЏd‚И•i‚ѕ", "It is precious.")
			p++
		}
		if ( ibit(ITEM_BIT_REMAKE, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚НѓGѓwѓJѓgѓ‹‚МЏj•џ‚рЋу‚Ї‚Д‚ў‚й", "It is blessed by Ehekatl.")
			p++
		}
		if ( ibit(ITEM_BIT_STOLEN, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Н“ђ•i‚ѕ", "It is a stolen item.")
			p++
		}
		if ( ibit(ITEM_BIT_ALIVE, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚Нђ¶‚«‚Д‚ў‚й", "It is alive.") + " [Lv:" + inv(INV_ITEM_GROWTH, ci) + " Exp:" + limit(inv(INV_ITEM_EXP, ci) * 100 / calcexpalive(inv(INV_ITEM_GROWTH, ci)), 0, 100) + "%]"
			p++
		}
		if ( ibit(ITEM_BIT_GUEST_USE, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚НѓVѓ‡ѓEѓ‹Ѓ[ѓЂ‚Е‚М‚ЭЋg—p‚Е‚«‚йЃB", "It can be only used in a show room.")
			p++
		}
		if ( ibit(ITEM_BIT_HANDMADE, ci) ) {
			list(0, p) = 7
			listn(0, p) = lang("‚»‚к‚НђS‰·‚Ь‚йЋиЌм‚и•i‚ѕ", "It is a hand-made item.")
			p++
		}
		calcweaponfix inv(INV_ITEM_ID, ci)
		if ( inv(INV_ITEM_DICE1, ci) != 0 ) {
			list(0, p) = 5
			listn(0, p) = lang("‚»‚к‚Н•ђЉн‚Ж‚µ‚Д€µ‚¤‚±‚Ж‚Є‚Е‚«‚й", "It can be wielded as a weapon.") + " (" + inv(INV_ITEM_DICE1, ci) + "d" + inv(INV_ITEM_DICE2, ci) + lang(" ЉС’К ", " Pierce ") + pierce + "%)"
			p++
			if ( reftype == FILTER_WEAPON ) {
				if ( inv(INV_ITEM_WEIGHT, ci) <= 1500 ) {
					list(0, p) = 5
					listn(0, p) = lang("‚»‚к‚Н•РЋи‚Е‚а€µ‚ў‚в‚·‚ў", "It is a light weapon.")
					p++
				}
				if ( inv(INV_ITEM_WEIGHT, ci) >= 4000 ) {
					list(0, p) = 5
					listn(0, p) = lang("‚»‚к‚Н—јЋиЋќ‚ї‚Й“K‚µ‚Д‚ў‚й", "It is a heavy weapon.")
					p++
				}
			}
		}
		if ( inv(INV_ITEM_ATTACK, ci) != 0 | inv(INV_ITEM_DAMAGE, ci) != 0 ) {
			if ( inv(INV_ITEM_ID, ci) != ITEM_ID_CHEST ) {
				list(0, p) = 5
				listn(0, p) = lang("‚»‚к‚Н–Ѕ’†ЏCђі‚Й" + inv(INV_ITEM_ATTACK, ci) + "‚р‰Б‚¦ЃAѓ_ѓЃЃ[ѓW‚р" + inv(INV_ITEM_DAMAGE, ci) + "‘ќ‰Б‚і‚№‚й", "It modifies hit bonus by " + inv(INV_ITEM_ATTACK, ci) + " and damage bonus by " + inv(INV_ITEM_DAMAGE, ci) + ".")
				p++
			}
		}
		if ( inv(INV_ITEM_PV, ci) != 0 | inv(INV_ITEM_DV, ci) != 0 ) {
			list(0, p) = 6
			listn(0, p) = lang("‚»‚к‚НDV‚р" + inv(INV_ITEM_DV, ci) + "ЏгЏё‚і‚№ЃAPV‚р" + inv(INV_ITEM_PV, ci) + "ЏгЏё‚і‚№‚й", "It modifies DV by " + inv(INV_ITEM_DV, ci) + " and PV by " + inv(INV_ITEM_PV, ci) + ".")
			p++
		}
	}
	if ( inv(INV_ITEM_KNOWN, ci) < ITEM_KNOWN_QUALITY ) {
		list(0, p) = 0
		listn(0, p) = lang("‚±‚МѓAѓCѓeѓЂ‚ЙЉЦ‚·‚й’mЋЇ‚р“ѕ‚й‚Й‚НЃAЉУ’и‚·‚й•K—v‚Є‚ ‚йЃB", "You have to identify the item to gain knowledge.")
		p++
	}
	if ( inv(INV_ITEM_KNOWN, ci) >= ITEM_KNOWN_FULL ) {
		repeat RANGE_INV_ITEM_ENCHANT
			if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci) == 0 ) {
				break
			}
			val = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci), inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, ci), 0, reftype
			gosub *item_encdetail
			listn(0, p) = lang("‚»‚к‚Н", "It ") + s
			list(0, p) = rtval, rtval(1)
			if ( inhmax > 0 ) {
				cnt2 = cnt
				repeat inhmax
					if ( cnt2 == inhlist(cnt) ) {
						list(0, p) += 10000
						break
					}
				loop
			}
			p++
		loop
		if ( ibit(ITEM_BIT_ULTIMATE, ci) ) {
			list(0, p) = 4
			listn(0, p) = lang("‘ЉЋи‚НЋЂ‚К", "The enemy dies.")
			p++
		}
		if ( inv(INV_ITEM_PARAM4, ci) != 0 & inv(INV_ITEM_ID, ci) != ITEM_ID_FISHING_POLE & inv(INV_ITEM_ID, ci) != ITEM_ID_GIFT ) {
			repeat 4
				list(0, p) = 0
				listn(0, p) = ""
				if ( cnt == 0 ) {
					p++
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 1 ) {
					exist exedir + "user\\item\\plan1.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 2 ) {
					exist exedir + "user\\item\\plan2.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 3 ) {
					exist exedir + "user\\item\\plan3.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 4 ) {
					exist exedir + "user\\item\\plan4.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 5 ) {
					exist exedir + "user\\item\\plan5.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 6 ) {
					exist exedir + "user\\item\\plan6.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 7 ) {
					exist exedir + "user\\item\\plan7.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 8 ) {
					exist exedir + "user\\item\\plan8.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 9 ) {
					exist exedir + "user\\item\\plan9.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 10 ) {
					exist exedir + "user\\item\\plan10.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 11 ) {
					exist exedir + "user\\item\\plan11.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 12 ) {
					exist exedir + "user\\item\\plan12.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 13 ) {
					exist exedir + "user\\item\\plan13.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 14 ) {
					exist exedir + "user\\item\\plan14.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 15 ) {
					exist exedir + "user\\item\\plan15.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 16 ) {
					exist exedir + "user\\item\\plan16.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 17 ) {
					exist exedir + "user\\item\\plan17.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 18 ) {
					exist exedir + "user\\item\\plan18.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 19 ) {
					exist exedir + "user\\item\\plan19.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 20 ) {
					exist exedir + "user\\item\\plan20.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 21 ) {
					exist exedir + "user\\item\\plan21.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 22 ) {
					exist exedir + "user\\item\\plan22.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 23 ) {
					exist exedir + "user\\item\\plan23.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 24 ) {
					exist exedir + "user\\item\\plan24.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 25 ) {
					exist exedir + "user\\item\\plan25.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 26 ) {
					exist exedir + "user\\item\\plan26.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 27 ) {
					exist exedir + "user\\item\\plan27.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 28 ) {
					exist exedir + "user\\item\\plan28.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 29 ) {
					exist exedir + "user\\item\\plan29.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 30 ) {
					exist exedir + "user\\item\\plan30.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 31 ) {
					exist exedir + "user\\item\\plan31.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 32 ) {
					exist exedir + "user\\item\\plan32.txt"
				}
				if ( inv(INV_ITEM_PARAM4, ci) == 33 ) {
					exist exedir + "user\\item\\plan33.txt"
				}
				if ( strsize != (-1) ) {
					sdim buf, strsize
					notesel buf
					if ( inv(INV_ITEM_PARAM4, ci) == 1 ) {
						noteload exedir + "user\\item\\plan1.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 2 ) {
						noteload exedir + "user\\item\\plan2.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 3 ) {
						noteload exedir + "user\\item\\plan3.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 4 ) {
						noteload exedir + "user\\item\\plan4.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 5 ) {
						noteload exedir + "user\\item\\plan5.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 6 ) {
						noteload exedir + "user\\item\\plan6.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 7 ) {
						noteload exedir + "user\\item\\plan7.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 8 ) {
						noteload exedir + "user\\item\\plan8.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 9 ) {
						noteload exedir + "user\\item\\plan9.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 10 ) {
						noteload exedir + "user\\item\\plan10.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 11 ) {
						noteload exedir + "user\\item\\plan11.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 12 ) {
						noteload exedir + "user\\item\\plan12.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 13 ) {
						noteload exedir + "user\\item\\plan13.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 14 ) {
						noteload exedir + "user\\item\\plan14.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 15 ) {
						noteload exedir + "user\\item\\plan15.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 16 ) {
						noteload exedir + "user\\item\\plan16.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 17 ) {
						noteload exedir + "user\\item\\plan17.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 18 ) {
						noteload exedir + "user\\item\\plan18.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 19 ) {
						noteload exedir + "user\\item\\plan19.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 20 ) {
						noteload exedir + "user\\item\\plan20.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 21 ) {
						noteload exedir + "user\\item\\plan21.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 22 ) {
						noteload exedir + "user\\item\\plan22.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 23 ) {
						noteload exedir + "user\\item\\plan23.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 24 ) {
						noteload exedir + "user\\item\\plan24.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 25 ) {
						noteload exedir + "user\\item\\plan25.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 26 ) {
						noteload exedir + "user\\item\\plan26.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 27 ) {
						noteload exedir + "user\\item\\plan27.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 28 ) {
						noteload exedir + "user\\item\\plan28.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 29 ) {
						noteload exedir + "user\\item\\plan29.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 30 ) {
						noteload exedir + "user\\item\\plan30.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 31 ) {
						noteload exedir + "user\\item\\plan31.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 32 ) {
						noteload exedir + "user\\item\\plan32.txt"
					}
					if ( inv(INV_ITEM_PARAM4, ci) == 33 ) {
						noteload exedir + "user\\item\\plan33.txt"
					}
					ts = "%txtDescript" + cnt + ""
					o = instr(buf, 0, ts + "," + lang("JP", "EN"))
					buf = strmid(buf, o, instr(buf, o + 1, "%"))
					if ( noteinfo(0) > 1 ) {
						o = noteinfo(0) - 1
						noteget ts, o
					}
					buf = trimdesc(ts, 2)
					notesel buf
					repeat noteinfo(0)
						noteget q, cnt
						p(1) = 66, 0
						if ( strlen(q) > p(1) ) {

							/********** ORIGINAL - BEGINNING **********

							if ( jp ) {
								repeat strlen(q) / p(1) + 1
									if ( strmid(q, p(2) + p(1), 2) == "ЃB" | strmid(q, p(2) + p(1), 2) == "ЃA" ) {
										p(1) += 2
									}
									if ( strmid(q, p(2), p(1)) == "" ) {
										break
									}
									list(0, p) = -1
									listn(0, p) = strmid(q, p(2), p(1))
									p++
									p(2) += p(1)
								loop
							}
							else {
								s = ""
								repeat 100
									if ( p(2) >= strlen(q) ) {
										break
									}
									s = ""
									repeat 100
										p(3) = instr(q, p(2), " ") + 1
										if ( p(3) == 0 ) {
											p(3) = strlen(q) - p(2)
										}
										if ( strlen(s) + p(3) > p(1) ) {
											break
										}
										s += strmid(q, p(2.0), p(3))
										p(2) += p(3)
									loop
									list(0, p) = -1
									listn(0, p) = s
									p++
								loop
							}

							********** ORIGINAL - ENDING **********/

							/********** ANNA CUSTOM - BEGINNING **********/

							if ( jp ) {
								repeat strlen(q) / p(1) + 1
									if ( strmid(q, p(2) + p(1), 2) == "ЃB" | strmid(q, p(2) + p(1), 2) == "ЃA" ) {
										p(1) += 2
									}
									if ( strmid(q, p(2), p(1)) == "" ) {
										break
									}
									list(0, p) = -1
									listn(0, p) = strmid(q, p(2), p(1))
									p++
									p(2) += p(1)
								loop
							}
							else {
								p(1) = 61, 0
								repeat strlen(q) / p(1) + 1
									if ( cnt == 0 ) {
										p(1) = 61
									}
									else {
										p(1) = 70
									}

									repeat 15
										if ( strmid(q, p(2) + p(1)-cnt, 1) == " " | strmid(q, p(2) + p(1)-cnt, 1) == "," | strmid(q, p(2) + p(1)-cnt, 1) == "." ) {
											p(1) = p(1)-cnt+1
											break
										}
									loop

									list(0, p) = -1
									listn(0, p) = strmid(q, p(2), p(1))
									p++
									p(2) += p(1)
								loop
							}

							/********** ANNA CUSTOM - ENDING **********/

						}
						else {
							list(0, p) = 0
							listn(0, p) = q
							if ( cnt == noteinfo(0) - 1 ) {
								list(0, p) = -2
								if ( en ) {
									listn(0, p) = "-" + listn(0, p)
								}
							}
							p++
						}
					loop
				loop
			}
		}
		else {
			repeat 3
				if ( description(cnt) == "" ) {
					continue
				}
				list(0, p) = 0
				listn(0, p) = ""
				p++
				buf = trimdesc(description(cnt), 2)
				notesel buf
				repeat noteinfo(0)
					noteget q, cnt
					p(1) = 66, 0
					if ( strlen(q) > p(1) ) {
						if ( jp ) {
							repeat strlen(q) / p(1) + 1
								if ( strmid(q, p(2) + p(1), 2) == "ЃB" | strmid(q, p(2) + p(1), 2) == "ЃA" ) {
									p(1) += 2
								}
								if ( strmid(q, p(2), p(1)) == "" ) {
									break
								}
								list(0, p) = -1
								listn(0, p) = strmid(q, p(2), p(1))
								p++
								p(2) += p(1)
							loop
						}
						else {

							/********** ORIGINAL - BEGINNING **********

							s = ""
							repeat 100
								if ( p(2) >= strlen(q) ) {
									break
								}
								s = ""
								repeat 100
									p(3) = instr(q, p(2), " ") + 1
									if ( p(3) == 0 ) {
										p(3) = strlen(q) - p(2)
									}
									if ( strlen(s) + p(3) > p(1) ) {
										break
									}
									s += strmid(q, p(2.0), p(3))
									p(2) += p(3)
								loop
								list(0, p) = -1
								listn(0, p) = s
								p++
							loop

							 ********** ORIGINAL - ENDING **********/


							/********** ANNA CUSTOM - BEGINNING **********/

							p(1) = 61, 0

							repeat strlen(q) / p(1) + 1
								if ( cnt == 0 ) {
									p(1) = 61
								}
								else {
									p(1) = 70
								}

								repeat 15
									if ( strmid(q, p(2) + p(1)-cnt, 1) == " " | strmid(q, p(2) + p(1)-cnt, 1) == "," | strmid(q, p(2) + p(1)-cnt, 1) == "." ) {
										p(1) = p(1)-cnt+1
										break
									}
								loop

								list(0, p) = -1
								listn(0, p) = strmid(q, p(2), p(1))
								p++
								p(2) += p(1)
							loop

							/********** ANNA CUSTOM - ENDING **********/

						}
					}
					else {
						list(0, p) = 0
						listn(0, p) = q
						if ( cnt == noteinfo(0) - 1 ) {
							list(0, p) = -2
							if ( en ) {
								listn(0, p) = "-" + listn(0, p)
							}
						}
						p++
					}
				loop
			loop
		}
	}
	if ( p == 0 ) {
		list(0, p) = 0
		listn(0, p) = lang("“Б‚ЙЏо•с‚Н‚И‚ў", "There is no information about this object.")
		p++
	}
	listmax = p
	pagemax = (listmax - 1) / pagesize
	if ( dump_return == 1 ) {
		dump_return = 0
		return
	}
	windowshadow = 1
*com_identify_loop_pgchk
	key_list = key_enter
	keyrange = 0
	redraw 0
	page_check
*com_identify_loop
	redraw 0
	s = lang("ѓAѓCѓeѓЂ‚М’mЋЇ", "Known Information"), strhint4 + strhint3
	display_window (windoww - 600) / 2 + inf_screenx, winposy(408), 600, 408
	display_topic itemname(ci), wx + 28, wy + 34
	repeat pagesize
		p = pagesize * page + cnt
		if ( p >= listmax ) {
			break
		}
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		color 0, 0, 0
		pos wx + 68, wy + 68 + cnt * 18
		if ( list(0, p) \ 10000 == 1 ) {
			color 0, 100, 0
		}
		if ( list(0, p) \ 10000 == 2 ) {
			color 0, 0, 100
		}
		if ( list(0, p) \ 10000 == 3 ) {
			color 80, 100, 0
		}
		if ( list(0, p) \ 10000 == 4 ) {
			color 80, 50, 0
		}
		if ( list(0, p) \ 10000 == 9 ) {
			color 180, 0, 0
		}
		if ( list(0, p) \ 10000 == 8 ) {
			color 0, 100, 100
		}
		if ( list(0, p) == (-1) ) {
			font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
		}
		if ( list(0, p) == (-2) ) {
			font lang(cfg_font1, cfg_font2), 13 - en * 2, 2 + en
			pos wx + ww - strlen(listn(0, p)) * 6 - 80, wy + 68 + cnt * 18
		}
		mes listn(0, p)
		if ( list(0, p) > 0 ) {
			pos wx + 40, wy + 61 + cnt * 18
			gcopy 3, 72 + list(0, p) \ 10000 * 24, 336, 24, 24
		}
		if ( list(0, p) > 10000 ) {
			pos wx + 15, wy + 63 + cnt * 18
			gcopy 3, 384, 360, 24, 24
		}
	loop
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	page_change *com_identify_loop_pgchk
	if ( key == key_cancel | key == key_enter ) {
		returnfromidentify = 1
		return
	}
	goto *com_identify_loop

*findTarget
	if ( cdata(CDATA_EXIST, cdata(CDATA_TARGET, cc)) != CHAR_STATE_ALIVE ) {
		cdata(CDATA_TARGET, cc) = 0
	}
	else {
		if ( synccheck(cdata(CDATA_TARGET, cc), -1) == 0 ) {
			cdata(CDATA_TARGET, cc) = 0
		}
	}
	if ( cdata(CDATA_TARGET, cc) == 0 ) {
		gosub *com_findTarget
		if ( listmax != 0 ) {
			f = 0
			if ( cc == CHARA_PLAYER | cdata(CDATA_RELATION, cc) >= 0 ) {
				p = -3, -1, 0
			}
			else {
				p = 10, 0, 0
			}
			repeat 3
				cnt2 = cnt
				repeat listmax
					if ( cdata(CDATA_RELATION, list(0, cnt)) <= p(cnt2) ) {
						cdata(CDATA_TARGET, cc) = list(0, cnt)
						f = 1
						break
					}
				loop
				if ( f == 1 ) {
					break
				}
			loop
		}
	}
	if ( cdata(CDATA_TARGET, cc) == 0 | cdata(CDATA_CONDITION_BLIND, cc) != 0 ) {
		if ( cc == CHARA_PLAYER ) {
			txt lang("ѓ^Ѓ[ѓQѓbѓg‚ЄЊ©“–‚Ѕ‚з‚И‚ўЃB", "You find no target.")
			gosub *screen_draw
		}
		return 0
	}
	if ( cdata(CDATA_TARGET, cc) < 0 ) {
		cdata(CDATA_TARGET, cc) = 0
	}
	return 1

*com_confirmAttack
	if ( efid == SKILL_SPACT_DIRECTIVE ) {
		return 1
	}
	txttargetlevel
	txt s
	txtmore
	txt lang("–{“–‚Й" + name(tc) + "‚рЌUЊ‚‚·‚йЃH ", "Really attack " + name(tc) + "? ")
	promptYesNo
	if ( rtval == 0 ) {
		gosub *screen_draw
		return 1
	}
	else {
		gosub *screen_draw
		return 0
	}

*com_fire
	cc = CHARA_PLAYER
	gosub *findTarget
	if ( stat == 0 ) {
		goto *pc_turn
	}
	tc = cdata(CDATA_TARGET, CHARA_PLAYER)
	if ( cdata(CDATA_RELATION, tc) >= 0 ) {
		gosub *com_confirmAttack
		if ( stat == 0 ) {
			goto *pc_turn
		}
	}
	gosub *FindRangeWeapon
	if ( stat == (-1) ) {
		msgdup++
		txt lang("ЋЛЊ‚—p‚М“№‹п‚р‘•”х‚µ‚Д‚ў‚И‚ўЃB", "You need to equip a firing weapon.")
		gosub *screen_draw
		goto *pc_turn
	}
	if ( stat == (-2) ) {
		msgdup++
		txt lang("–о/’eЉЫ‚р‘•”х‚·‚й•K—v‚Є‚ ‚йЃB", "You need to equip ammo or arrows.")
		gosub *screen_draw
		goto *pc_turn
	}
	if ( stat == (-3) ) {
		msgdup++
		txt lang("–о/’eЉЫ‚МЋн—Ю‚Є“K‚µ‚Д‚ў‚И‚ўЃB", "You're equipped with wrong type of ammo.")
		gosub *screen_draw
		goto *pc_turn
	}
	gosub *act_fire
	goto *turn_end

*FindRangeWeapon
	cw = -1
	ammo = -1
	repeat MAX_EQUIP_SLOT_TOTAL
		body = CDATA_STARTING_EQUIP_SLOTS + cnt
		if ( cdata(body, cc) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_SHOOT ) {
			cw = cdata(body, cc) \ EXT_EQUIP_SLOTS - 1
		}
		if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_AMMO ) {
			ammo = cdata(body, cc) \ EXT_EQUIP_SLOTS - 1
		}
	loop
	if ( cw == (-1) ) {
		cw = 0
		return -1
	}
	if ( ammo == (-1) ) {
		if ( inv(INV_ITEM_SKILL_REF, cw) != SKILL_WEAPON_THROWING & iequiploc(cw) != EQUIP_SLOT_HAND ) {
			cw = 0
			return -2
		}
	}
	if ( ammo != (-1) ) {
		if ( inv(INV_ITEM_ID, ammo) == ITEM_ID_BOLT ) {
			if ( inv(INV_ITEM_SKILL_REF, ammo) != SKILL_WEAPON_CROSSBOW ) {
				inv(INV_ITEM_SKILL_REF, ammo) = SKILL_WEAPON_CROSSBOW
			}
		}
		if ( inv(INV_ITEM_ID, ammo) == ITEM_ID_ARROW ) {
			if ( inv(INV_ITEM_SKILL_REF, ammo) != SKILL_WEAPON_BOW ) {
				inv(INV_ITEM_SKILL_REF, ammo) = SKILL_WEAPON_BOW
			}
		}
		if ( inv(INV_ITEM_SKILL_REF, cw) != inv(INV_ITEM_SKILL_REF, ammo) ) {
			return -3
		}
		if ( inv(INV_ITEM_ID, ammo) == ITEM_ID_MAGNUM ) {
			if ( inv(INV_ITEM_ID, cw) != ITEM_ID_PISTOL & inv(INV_ITEM_ID, cw) != ITEM_ID_MAUSER_C96_CUSTOM ) {
				return -3
			}
		}
	}
	attackskill = inv(INV_ITEM_SKILL_REF, cw)
	if ( iequiploc(cw) == EQUIP_SLOT_HAND ) {
		attackskill = SKILL_WEAPON_THROWING
	}
	return 1

*com_findTarget
	listmax = 0
	repeat 2
		repeat MAX_CHARA_TOTAL
			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
				continue
			}
			if ( synccheck(cnt, -1) == 0 ) {
				continue
			}
			if ( cc == CHARA_PLAYER | cdata(CDATA_RELATION, cc) >= 0 ) {
				if ( cdata(CDATA_RELATION, cnt) == 10 ) {
					if ( cnt == CHARA_PLAYER ) {
						continue
					}
				}
			}
			x = cdata(CDATA_X, cnt)
			y = cdata(CDATA_Y, cnt)
			if ( x == cdata(CDATA_X, cc) & y == cdata(CDATA_Y, cc) ) {
				continue
			}
			if ( cc < MAX_CHARA_FOLLOWER ) {
				if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), x, y) > sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
					continue
				}
			}
			if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), x, y) == 0 ) {
				continue
			}
			if ( cbit(CHARA_BIT_INVISIBLE, cnt) == 1 ) {
				if ( cbit(CHARA_BIT_SEE_INVISIBLE, cc) == 0 ) {
					if ( cdata(CDATA_CONDITION_WET, cnt) == 0 ) {
						continue
					}
				}
			}
			list(0, listmax) = cnt, x, y
			listmax++
			if ( listmax >= 500 - 1 ) {
				break
			}
		loop
		if ( listmax != 0 ) {
			break
		}
	loop
	repeat
		if ( listmax < 2 ) {
			break
		}
		i = 1
		repeat listmax - 1
			p = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), list(1, cnt), list(2, cnt))
			p(1) = dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), list(1, cnt + 1), list(2, cnt + 1))
			if ( p(1) < p ) {
				p = list(0, cnt), list(1, cnt), list(2, cnt)
				list(0, cnt) = list(0, cnt + 1), list(1, cnt + 1), list(2, cnt + 1)
				list(0, cnt + 1) = p, p(1), p(2)
				i = 0
				break
			}
		loop
		if ( i == 1 ) {
			break
		}
	loop
	return

*com_rest
	r1 = 50
	gosub *rest
	goto *turn_end

*com_rowActCancel
	txt lang(actlistn(cdata(CDATA_ROW_ACT, cc)) + "‚р’†’f‚µ‚Ѕ‚Щ‚¤‚Є‚ў‚ў‚ѕ‚л‚¤‚©ЃH ", "Do you want to cancel " + actlistn(cdata(CDATA_ROW_ACT, cc)) + "? ")
	promptYesNo
	return

*com_save
	txtnew
	if ( gdata(GDATA_AREA) == AREA_SHOW_HOUSE | (gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_LEVEL) == 179) ) {
		txtef COLOR_RED
		txt lang("‚±‚±‚Е‚НѓZЃ[ѓu‚Е‚«‚И‚ўЃB‚»‚к‚Е‚аЏI—№‚·‚йЃH", "You can't save the game here. Exit anyway?")
	}
	else {
		txt lang("‚±‚к‚Ь‚Е‚М–`ЊЇ‚р‹L^‚µ‚ДЏI—№‚·‚йЃH", "Do you want to save the game and exit?")
	}

	/********** ORIGINAL - BEGINNING **********

	promptAdd lang("‚Н‚ў", "Exit"), "a"
	promptAdd lang("‚ў‚ў‚¦", "Cancel"), "b"
	promptAdd lang("ѓQЃ[ѓЂђЭ’и", "Game Setting"), "c"
	val = promptx, prompty, 190, 1
	gosub *prompt_key
	if ( rtval == 0 ) {
		if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
			snd SOUNDLIST_WRITE1
			if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL | gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_LOSS | gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_NATURAL ) {
				gdata(GDATA_GAMEMODE_PENALTY) = 1
				snd SOUNDLIST_AMMO
			}
			gosub *game_save
			txt lang("–іЋ–‚Й‹L^‚і‚к‚ЅЃB", "Your game has been saved successfully.")
			txt lang(name(cc) + "‚НђГ‚©‚Й–Ъ‚р•В‚¶‚ЅЃc (ѓLЃ[‚р‰џ‚·‚ЖЋ©“®ЏI—№‚µ‚Ь‚·)", "You close your eyes and peacefully fade away. (Hit any key to exit)")
			msg_halt
			gosub *screen_draw
		}
		await 300
		goto *exit_game
	}
	if ( rtval == 2 ) {
		snd SOUNDLIST_OK1
		goto *com_config
	}
	gosub *screen_draw
	goto *pc_turn

	 ********** ORIGINAL - ENDING **********/

	/********** ANNA/BLOODYSHADE CUSTOM - BEGINNING **********/

	promptAdd lang("ѓQЃ[ѓЂ‚р‚в‚Я‚й", "Exit"), "a"
	promptAdd lang("ѓQЃ[ѓЂђЭ’и", "Game Setting"), "b"
	promptAdd lang("”ч’Іђ®", "Tweaks"), "c"
	promptAdd lang("ѓLѓѓѓ“ѓZѓ‹", "Cancel"), "d"

	val = promptx, prompty, 190, 1
	gosub *prompt_key
	if ( rtval == 0 ) {
		if ( gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
			snd SOUNDLIST_WRITE1
			if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_ABNORMAL | gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_LOSS | gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_NATURAL ) {
				gdata(GDATA_GAMEMODE_PENALTY) = 1
				snd SOUNDLIST_AMMO
			}
			gosub *game_save
			txt lang("–іЋ–‚Й‹L^‚і‚к‚ЅЃB", "Your game has been saved successfully.")
			txt lang(name(cc) + "‚НђГ‚©‚Й–Ъ‚р•В‚¶‚Ѕ... (ѓLЃ[‚р‰џ‚·‚ЖЋ©“®ЏI—№‚µ‚Ь‚·)", "You close your eyes and peacefully fade away. (Hit any key to exit)")
			msg_halt
			gosub *screen_draw
		}
		await 300
		goto *exit_game
	}
	if ( rtval == 1 ) {
		snd SOUNDLIST_OK1
		goto *com_config
	}
	if ( rtval == 2 ) {
		snd SOUNDLIST_OK1
		goto *TweakMenu
	}
	gosub *screen_draw
	goto *pc_turn

	/********** ANNA/BLOODYSHADE CUSTOM - ENDING **********/

*check_return
	f = 0
	repeat 5
		p = gdata(GDATA_QUEST_POOL + cnt)
		if ( qdata(QDATA_STATUS, p) == QUEST_STATE_ONGOING ) {
			if ( qdata(QDATA_EXIST, p) == QUEST_TYPE_ESCORT | qdata(QDATA_EXIST, p) == QUEST_TYPE_DELIVER ) {
				f = 1
				break
			}
		}
	loop
	return f

*com_return
	gosub *check_return
	if ( stat == 1 ) {
		txt lang("€Л—Љђї•‰’†‚М‹AЉТ‚Н–@—Ґ‚Е‹ЦЋ~‚і‚к‚Д‚ў‚йЃB‚»‚к‚Е‚а‹AЉТ‚·‚йЃH", "Returning while taking a quest is forbidden. Are you sure you want to return?")
		promptYesNo
		if ( rtval != 0 ) {
			gosub *screen_draw
			return
		}
	}
	if ( gdata(GDATA_FLAG_MAIN) >= 715 & gdata(GDATA_FLAG_MAIN) < 760 & gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_LEVEL) == 179 ) {
		snd SOUNDLIST_FAIL1
		txt lang("–і—Н‰»‚µ‚И‚ў‚Ж“z‚Єђ_‚МЉФ‚©‚зЏo‚Д‚«‚Д‚µ‚Ь‚¤ЃI", "If you do not weaken the <Chaos Child>, it will come out of the Eternal Seal!")
		gosub *screen_draw
		return
	}
	if ( gdata(GDATA_FLAG_MAIN) >= 845 & gdata(GDATA_FLAG_MAIN) < 1000 & gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_LEVEL) == 179 ) {
		snd SOUNDLIST_FAIL1
		txt lang("ЌЕЊг‚Ь‚Е‚ ‚«‚з‚Я‚ё‚Йђн‚Ё‚¤ЃB", "I shouldn't give up here. Let's finish this.")
		gosub *screen_draw
		return
	}
	p = 0
	p = 0
	i = 7
	if ( gdata(GDATA_AREA) != AREA_NT_SOUTH_BORDER & gdata(GDATA_AREA) != AREA_NOYEL & gdata(GDATA_AREA) != AREA_BLIMP | gdata(GDATA_LEVEL) != 100 ) {
		if ( adata(ADATA_PARENT, i) == gdata(GDATA_WORLD) ) {
			list(0, p) = i, 1
			promptAdd mapname(i)
			p++
		}
	}
	repeat MAX_AREA_COUNT
		i = MAX_AREA_COUNT - (cnt + 1)
		if ( adata(ADATA_ID, i) == AREA_CHAOS_CRADLE ) {
			if ( adata(ADATA_DEEPEST, i) > 178 ) {
				adata(ADATA_DEEPEST, i) = 178
			}
		}
		if ( gdata(GDATA_AREA) == AREA_NT_SOUTH_BORDER | gdata(GDATA_AREA) == AREA_NOYEL ) {
			if ( gdata(GDATA_LEVEL) == 100 ) {
				continue
			}
		}
		if ( adata(ADATA_ID, i) == AREA_NONE ) {
			continue
		}
		if ( adata(ADATA_PARENT, i) != gdata(GDATA_WORLD) ) {
			continue
		}
		if ( adata(ADATA_ID, i) == AREA_HOME ) {
			continue
		}
		if ( adata(ADATA_DEEPEST, i) == 0 ) {
			continue
		}
		f = 0
		if ( adata(ADATA_ID, i) == AREA_MAID_MANSION | adata(ADATA_ID, i) == AREA_NT_SOUTH_BORDER | adata(ADATA_ID, i) == AREA_AMUR_CAGE | adata(ADATA_ID, i) == AREA_ZAILE ) {
			adata(ADATA_DEEPEST, i) = adata(ADATA_MIN_LEVEL, i)
			f = 1
		}
		if ( adata(ADATA_ID, i) == AREA_LESIMAS | adata(ADATA_ID, i) == AREA_LARNA | adata(ADATA_ID, i) == AREA_SISTER_MANSION | adata(ADATA_ID, i) == AREA_VOID | adata(ADATA_ID, i) == AREA_NT_SOUTH_BORDER | adata(ADATA_ID, i) == AREA_ST_NORTH_BORDER | adata(ADATA_ID, i) == AREA_REMIDO | adata(ADATA_ID, i) == AREA_ANCIENT_GARDEN | adata(ADATA_ID, i) == AREA_CHAOS_CRADLE | adata(ADATA_ID, i) == AREA_ULM_LESON | adata(ADATA_ID, i) == AREA_WEST_RASKILIS ) {
			f = 1
		}
		if ( gdata(GDATA_WIZARD) ) {
			if ( adata(ADATA_TYPE, i) == MAP_TYPE_TOWN | adata(ADATA_TYPE, i) == MAP_TYPE_VILLAGE | adata(ADATA_ID, i) == AREA_OBLIVION_PALACE ) {
				f = 1
			}
		}
		if ( f == 1 ) {
			list(0, p) = i, adata(ADATA_DEEPEST, i)
			promptAdd mapname(i) + " " + cnvrank(adata(ADATA_DEEPEST, i) - adata(ADATA_MIN_LEVEL, i) + 1) + lang("ЉK", " Lv")
			p++
		}
	loop
	listmax = p
	if ( listmax == 0 ) {
		txt lang("‚±‚М‘е—¤‚Й‚Н‹AЉТ‚Е‚«‚йЏкЏЉ‚Є–і‚ўЃB", "You don't know any location you can return to.")
		return
	}
	txt lang("‚З‚МЏкЏЉ‚Й‹AЉТ‚·‚йЃH", "Where do you want to go?")
	display_msg inf_screeny + inf_tiles
	val = promptx, prompty, 240, 1
	gosub *prompt_key
	gosub *screen_draw
	if ( rtval >= 0 ) {
		txt lang("Ћь€Н‚М‘е‹C‚Є‚ґ‚н‚Я‚«‚ѕ‚µ‚ЅЃB", "The air around you becomes charged.")
		if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANDOM_DUNGEON ) {
			if ( gdata(GDATA_LEVEL) == adata(ADATA_MAX_LEVEL, gdata(GDATA_AREA)) ) {
				if ( adata(ADATA_BOSS, gdata(GDATA_AREA)) != (-1) ) {
					txt lang("‚±‚М‚Ь‚Ьѓ_ѓ“ѓWѓ‡ѓ“‚рЏo‚й‚ЖЃA‚±‚МЉK‚МѓNѓGѓXѓg‚Н’Bђ¬‚Е‚«‚И‚ўЃc", "The lord of the dungeon might disappear if you escape now.")
				}
			}
		}
		gdata(GDATA_TELEPORT_AREA) = list(0, rtval), list(1, rtval)
		gdata(GDATA_RETURN) = 15 + rnd(15)
	}
	gosub *screen_draw
	return

*com_gasha
	screenupdate = -1
	gosub *screen_draw
	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_RED_TREASURE_MACHINE ) {
		tmat = 40
	}
	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_BLUE_TREASURE_MACHINE ) {
		tmat = 41
	}
	txt lang("" + matname(tmat) + "‚рЋg‚Б‚ДѓKѓVѓѓѓKѓVѓѓ‚·‚йЃH", "Pay " + matname(tmat) + " to gasha-gasha?")
	promptYesNo
	if ( rtval == 0 ) {
		if ( mat(tmat) > 0 ) {
			snd SOUNDLIST_GASHA
			matdelmain tmat
			if ( inv(INV_ITEM_ID, ci) == ITEM_ID_RED_TREASURE_MACHINE ) {
				p = ITEM_ID_TREASURE_BALL
			}
			else {
				p = ITEM_ID_RARE_TREASURE_BALL
			}
			flt
			itemcreate -1, p, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), 0
			if ( stat != 0 ) {
				inv(INV_ITEM_PARAM2, ci) = 0
			}
			txt_questitem
		}
		else {
			txt lang("" + matname(tmat) + "‚рЋќ‚Б‚Д‚ў‚И‚ўЃc", "You don't have " + matname(tmat) + ".")
		}
	}
	goto *turn_end

*com_train
	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_SKILLBOOK ) {
		if ( sorg(inv(INV_ITEM_BOOK_ID, ci), CHARA_PLAYER) == 0 ) {
			txt lang("‚±‚М–{‚М“а—e‚Й‚Н‹»–Ў‚Є‚И‚ўЃB‚»‚к‚Е‚а“З‚ЮЃH ", "You are not interested in this book. Do you want to read it anyway? ")
			promptYesNo
			if ( rtval != 0 ) {
				return 0
			}
		}
	}
	gdata(GDATA_ROW_ACT) = ACTION_TRAIN
	gosub *generalAct
	return 1

*com_dump
	// if ( gdata(GDATA_WIZARD) ) {
	// 	snd SOUNDLIST_FAIL1
	// 	txt lang("ѓfѓoѓbѓOѓ‚Ѓ[ѓh‚Е‚Н–іЊш‚ѕЃB", "This function is disabled in wizard mode.")
	// 	return
	// }
	if ( gdata(GDATA_AREA) == AREA_SHOW_HOUSE | gdata(GDATA_AREA) == AREA_ARENA | gdata(GDATA_AREA) == AREA_PET_ARENA ) {
		redraw 0
		snd SOUNDLIST_FAIL1
		txt lang("‚±‚Мѓ}ѓbѓv‚Е‚Н——p‚Е‚«‚И‚ўЃB", "You can't use it in this area.")
		return
	}
	gosub *dump_config
	redraw 0
	if ( gdatan(GDATAN_TEAM1) == "" ) {
		gdatan(GDATAN_TEAM1) = random_title(2)
		txt lang("ѓ`Ѓ[ѓЂѓlЃ[ѓЂ‚ЄЊ€‚Ь‚Б‚Д‚ў‚И‚ў‚М‚ЕЃAЋ©“®“I‚Й" + gdatan(GDATAN_TEAM1) + "‚Ж‚ў‚¤–ј‘O‚Є•t‚Ї‚з‚к‚ЅЃB", "Your initial team name is " + gdatan(GDATAN_TEAM1) + ". You can change it any time.")
	}
	txtnew
	txt lang("[ѓJѓXѓ^ѓЂ‹@”\]‰Ѕ‚р‚·‚йЃH", "[Customize Menu] What do you want to do?")
	promptAdd lang("ѓVѓ‡ѓEѓ‹Ѓ[ѓЂ‚р‹L^", "Save current area"), "a"
	promptAdd lang("ѓyѓbѓgѓ`Ѓ[ѓЂ‚р‹L^", "Save your pet team"), "b"
	promptAdd lang("ѓ`Ѓ[ѓЂѓlЃ[ѓЂ•ПЌX", "Change your team name"), "c"
	promptAdd lang("ѓJѓXѓ^ѓЂNPC‚рЌмђ¬", "Make custom NPC"), "d"
	if ( gdata(GDATA_WIZARD) == 0 ) {
		promptAdd lang("ѓAѓbѓvѓЌЃ[ѓh", "Upload"), "e"
		promptAdd lang("ђЭ’и", "Setting"), "f"
	}
	val = promptx, prompty, 240, 1
	gosub *prompt_key
	gosub *screen_draw
	gosub *dump_config
	if ( rtval == 0 ) {
		if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD | gdata(GDATA_AREA) == AREA_SHOW_HOUSE ) {
			redraw 0
			snd SOUNDLIST_FAIL1
			txt lang("‚±‚Мѓ}ѓbѓv‚Н•Ы‘¶‚Е‚«‚И‚ўЃB", "You can't save this area.")
			return
		}
		balanm = 0
		txt lang("‚З‚Мѓtѓ@ѓCѓ‹–ј‚Е•Ы‘¶‚·‚йЃH", "Enter file name.")
		redraw 1
		fileext = "pum"
		filedsc = "ElonaPlus User Map"
		_fdialog fileext, 17, filedsc, exedir + "user", "default.pum"
		if ( stat == 0 ) {
			return
		}
		userfile = refstr
		gosub *export_map
		txtef COLOR_GREEN
		txt lang("Њ»ЌЭ’n‚МЏо•с‚р" + userfile + "‚Й•Ы‘¶‚µ‚ЅЃB", "Current area is saved to " + userfile + ".")
		return
	}
	if ( rtval == 1 ) {
		txt lang("‚З‚МѓЃѓ“ѓoЃ[Ќ\ђ¬‚р‹L^‚·‚йЃH", "Which members do you want to save?")
		dim followerexist, MAX_CHARA_FOLLOWER
		repeat MAX_CHARA_FOLLOWER
			followerexist(cnt) = cdata(CDATA_EXIST, cnt)
		loop
		arenaop = 1, 6
		allyctrl = 2
		gosub *com_ally
		if ( stat == (-1) ) {
			return
		}
		lv = 0
		n = 0
		repeat MAX_CHARA_TOTAL
			list(0, cnt) = 0
			if ( cnt < MAX_CHARA_FOLLOWER ) {
				if ( followerin(cnt) == 1 ) {
					list(0, cnt) = 1
					lv += cdata(CDATA_LEVEL, cnt)
					n++
				}
			}
		loop
		if ( listmax == 0 ) {
			return
		}
		else {
			lv = lv / n
		}
		balan = 0
		txt lang("‚З‚Мѓtѓ@ѓCѓ‹–ј‚Е•Ы‘¶‚·‚йЃH", "Enter file name.")
		redraw 1
		fileext = "pet"
		filedsc = "ElonaPlus Extra Team"
		_fdialog fileext, 17, filedsc, exedir + "user", "default.pet"
		if ( stat == 0 ) {
			return
		}
		userfile = refstr
		gosub *export_chara
		txtef COLOR_GREEN
		txt lang("ѓyѓbѓgѓ`Ѓ[ѓЂ‚р" + userfile + "‚Й•Ы‘¶‚µ‚ЅЃB", "Your team is saved to " + userfile + ".")
		return
	}
	if ( rtval == 2 ) {
		val = 2
		gosub *com_aka
		if ( stat == 0 ) {
			return
		}
		txt lang("‚ ‚И‚Ѕ‚Нѓ`Ѓ[ѓЂ–ј‚р" + gdatan(GDATAN_TEAM1) + "‚ЙЊ€‚Я‚ЅЃB", "Your team name is " + gdatan(GDATAN_TEAM1) + " now.")
		return
	}
	if ( rtval == 3 ) {
		gosub *user_npc
		return
	}
	if ( rtval == 4 ) {
		if ( gdata(GDATA_AREA) == AREA_SHOW_HOUSE ) {
			txt lang("‚±‚МЏкЏЉ‚©‚з‚Н‚Е‚«‚И‚ўЃB", "You can't do it in this area.")
			return
		}
		if ( cdata(CDATA_LEVEL, CHARA_PLAYER) < 10 ) {
			txt lang("‚»‚к‚НѓЊѓxѓ‹‚Є10€ИЏг‚Е‚И‚ў‚Ж‚Е‚«‚И‚ўЃB", "You need to be at least level 10 to upload.")
			return
		}
		if ( gdata(GDATA_NEXT_UPLOAD) > gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 ) {
			snd SOUNDLIST_FAIL1
			txt lang("‚Ь‚ѕЋџ‚МѓAѓbѓvѓЌЃ[ѓh‚Н‚Е‚«‚И‚ў(" + cnvdate(gdata(GDATA_NEXT_UPLOAD), 1) + "‚Ь‚Е)", "You can't do this till " + cnvdate(gdata(GDATA_NEXT_UPLOAD), 1) + ".")
			return
		}
		gosub *uploader
		return
	}
	if ( rtval == 5 ) {
		exec exedir + "user\\export.txt", 16
	}
	return

*dump_chara
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:Init" + " ct:" + ct
	cc = CHARA_PLAYER
	dbidn = cdatan(CDATAN_RACE, CHARA_PLAYER)
	dbmode = DBMODE_REF
	gosub *db_race
	dbidn = cdatan(CDATAN_CLASS, CHARA_PLAYER)
	dbmode = DBMODE_REF
	gosub *db_class
	buff = ""
	notesel buff
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:1" + " ct:" + ct
	noteadd lang("Elona Version " + VERSION_STRING + " ѓLѓѓѓ‰ѓNѓ^Ѓ[Џо•с " + gdata(GDATA_YEAR) + "”N" + gdata(GDATA_MONTH) + "ЊЋ" + gdata(GDATA_DAY) + "“ъ " + gdata(GDATA_HOUR) + "Ћћ" + gdata(GDATA_MIN) + "•Є  " + mdatan(MDATAN_NAME), "Elona Version 3.03 Character Report. Generated at " + gdata(GDATA_HOUR) + ":" + gdata(GDATA_MIN) + " " + gdata(GDATA_MONTH) + "/" + gdata(GDATA_DAY) + "/" + gdata(GDATA_YEAR)+ " in " + mdatan(MDATAN_NAME))
	noteadd ""
	noteadd lang("  " + fixtxt("" + cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER), 34) + _sex(cdata(CDATA_SEX, CHARA_PLAYER)) + " " + calcage(CHARA_PLAYER) + "ЌО" + "  " + cdata(CDATA_HEIGHT, CHARA_PLAYER) + "cm" + " " + cdata(CDATA_WEIGHT, CHARA_PLAYER) + "kg", "Name: " + fixtxt("" + cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER), 34) + "Sex: " + _sex(cdata(CDATA_SEX, CHARA_PLAYER)) + "   Age: " + calcage(CHARA_PLAYER) + " \nHeight: " + cdata(CDATA_HEIGHT, CHARA_PLAYER) + "cm   Weight: " + cdata(CDATA_WEIGHT, CHARA_PLAYER) + "kg" )
	noteadd ""
	noteadd lang(fixtxt("Ћн‘°       : " + racename, 30) + fixtxt("ђM‹В      : " + godname(cdata(CDATA_GOD, CHARA_PLAYER)), 32), fixtxt("Race      : " + racename, 30) + fixtxt("God       : " + godname(cdata(CDATA_GOD,0)), 32))
	noteadd lang(fixtxt("ђE‹Ж       : " + classname, 30) + fixtxt("ЏЉ‘®      : " + guildname(), 32), fixtxt("Class     : " + classname, 30) + fixtxt("Guild     : " + guildname(), 32))
	noteadd lang(fixtxt("ѓЊѓxѓ‹     : " + cdata(CDATA_LEVEL, CHARA_PLAYER), 30) + fixtxt("Њo‰Я“ъђ”  : " + gdata(GDATA_DAY_PAST), 32), fixtxt("Level     : " + cdata(CDATA_LEVEL,0), 30) + fixtxt("Tot. Days : " + gdata(GDATA_DAY_PAST), 32))
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:1-2" + " ct:" + ct
	noteadd lang(fixtxt("Ћc‚иBP     : " + cdata(CDATA_SKILLPOINT, CHARA_PLAYER), 30) + fixtxt("Њo‰Яѓ^Ѓ[ѓ“: " + gdata(GDATA_TURN), 32), fixtxt("S. Points : " + cdata(CDATA_SKILLPOINT, CHARA_PLAYER),30) + fixtxt("Turns     : " + gdata(GDATA_TURN), 32))
	noteadd lang(fixtxt("‹а‰Э       : " + cdata(CDATA_GOLD, CHARA_PLAYER), 30) + fixtxt("ЋEЉQђ”    : " + gdata(GDATA_KILLED), 32), fixtxt("Gold      : " + cdata(CDATA_GOLD, CHARA_PLAYER), 30) + fixtxt("Kills     : " + gdata(GDATA_KILLED), 32))
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:1-3" + " ct:" + ct
	noteadd lang(fixtxt("ѓvѓ‰ѓ`ѓi   : " + cdata(CDATA_PLATINUM, CHARA_PLAYER), 30) + fixtxt("ЌЕђ[ЌU—Є  : " + gdata(GDATA_DEEPEST_LEVEL) + "ЉK‘Љ“–", 32), fixtxt("Platinum  : " + cdata(CDATA_PLATINUM, CHARA_PLAYER), 30) + fixtxt("Max D Lvl : " + gdata(GDATA_DEEPEST_LEVEL), 32))
	noteadd lang(fixtxt("ѓvѓЊѓCЋћЉФ : " + cnvplaytime(gdata(GDATA_PLAY_TIME) + timeGetTime() / 1000 - time_begin), 30), fixtxt("Playtime  : " + cnvplaytime(gdata(GDATA_PLAY_TIME) + timeGetTime() / 1000 - time_begin), 30))
	noteadd ""
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:2" + " ct:" + ct
	s(1) = lang("ђ¶–Ѕ—Н    : ", "Life      : ") + sdata(SKILL_ATTR_LIFE, CHARA_PLAYER) + "(" + sorg(SKILL_ATTR_LIFE, CHARA_PLAYER) + ")"
	s(2) = lang("ѓ}ѓi      : ", "Mana      : ") + sdata(SKILL_ATTR_MANA, CHARA_PLAYER) + "(" + sorg(SKILL_ATTR_MANA, CHARA_PLAYER) + ")"
	s(3) = lang("‹¶‹C“x    : ", "Sanity    : ") + cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER)
	s(4) = lang("‘¬“x      : ", "Speed     : ") + cdata(CDATA_SPEED, CHARA_PLAYER)
	s(5) = lang("–јђє“x    : ", "Fame      : ") + cdata(CDATA_FAME, CHARA_PLAYER)
	s(6) = lang("ѓJѓ‹ѓ}    : ", "Karma     : ") + cdata(CDATA_KARMA, CHARA_PLAYER)
	s(7) = lang("DV        : ", "DV        : ") + cdata(CDATA_DV, CHARA_PLAYER)
	s(8) = lang("PV        : ", "PV        : ") + cdata(CDATA_PV, CHARA_PLAYER)
	s(9) = ""
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:3" + " ct:" + ct
	repeat MAX_SKILL_ATTR_BASIC
		s = ""
		p = sdata(STARTING_SKILL_ATTR + cnt + STARTING_SKILL_SPACT, CHARA_PLAYER) \ 1000
		if ( p >= 200 ) {
			s += "superb"
		}
		else {
			if ( p >= 150 ) {
				s += "great"
			}
			else {
				if ( p >= 100 ) {
					s += "good"
				}
				else {
					if ( p >= 50 ) {
						s += "bad"
					}
					else {
						s += "hopeless"
					}
				}
			}
		}
		s = fixtxt(s, 15)
		s = fixtxt(lang(_stats2(cnt), strmid(_stats2(cnt), 1, strlen(_stats2(cnt))-1)) + "    : " + sdata(STARTING_SKILL_ATTR + cnt, CHARA_PLAYER) + "(" + sdata(STARTING_SKILL_ATTR + cnt + STARTING_SKILL_SPACT, CHARA_PLAYER) / 1000000 + ")", 24) + s
		noteadd s + s(1 + cnt)
	loop
	noteadd ""
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:4" + " ct:" + ct
	val = 1
	gosub *com_calcAttack
	tc = CHARA_PLAYER
	attackskill = SKILL_WEAPON_MARTIAL_ARTS
	evade = calcattackhit(2)
	prot = calcattackdmg(2)
	noteadd lang("‰с”р    : ", "Evade     : ") + evade + "%"
	noteadd lang("ЊyЊё    : ", "Prot      : ") + (100 - 10000 / (prot + 100)) + "% + " + protdice1 + "d" + protdice2
	noteadd ""
	noteadd lang("------------------------------ ‘•”х•i Ќ‡ЊvЏd—К", "------------------------------ Equip Weight   ") + cnvweight(cdata(CDATA_EQUIP_WEIGHT, cc)) + " " + cnveqweight(cc)
	noteadd ""
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:5" + " ct:" + ct
	listmax = 0
	repeat MAX_EQUIP_SLOT_TOTAL, CDATA_STARTING_EQUIP_SLOTS
		if ( cdata(cnt, cc) != 0 ) {
			if ( trait(TRAIT_ETHER_EQUIP_NECK) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_NECK ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_EQUIP_LEG) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_LEG ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_EQUIP_BACK) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_BACK ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_EQUIP_HEAD) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HEAD ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_BONES) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_BODY ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_BLADE_HANDS) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_HAND ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_WEBBED) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_RING ) {
					continue
				}
			}
			if ( trait(raitetherarm) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_ARM ) {
					continue
				}
			}
			if ( trait(TRAIT_ETHER_TAIL) != 0 ) {
				if ( cdata(cnt, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_WAIST ) {
					continue
				}
			}
			p(1) = cdata(cnt, cc)
			qqq = lang("‘•”х‚И‚µ", "None"), ""
			if ( p(1) \ EXT_EQUIP_SLOTS != 0 ) {
				p(1) = p(1) \ EXT_EQUIP_SLOTS - 1
				qqq = itemname(p(1)), cnvweight(inv(INV_ITEM_WEIGHT, p(1)))
				ci = p(1)
				dump_return = 1
				gosub *com_identify
				notesel buff
			}
			else {
				listmax = 0
			}
			s = bodyn(cdata(cnt, cc) / EXT_EQUIP_SLOTS)
			if ( strmid(s, 0, 2) == "Ѓ@" ) {
				s = strmid(s, 2, 2)
			}
			noteadd s + ":"
			noteadd qqq + " " + qqq(1)
			repeat listmax
				noteadd listn(0, cnt)
			loop
			noteadd ""
		}
	loop
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:6" + " ct:" + ct
	noteadd lang("------------------------------ “Б’Ґ", "------------------------------ Characteristics")
	noteadd ""
	dump_return = 1
	tc = CHARA_PLAYER
	gosub *com_trait_loop
	repeat listmax
		if ( list(0, cnt) < 0 ) {
			continue
		}
		if ( list(1, cnt) < 10000 ) {
			continue
		}
		noteadd listn(0, cnt)
	loop
	noteadd ""
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:7" + " ct:" + ct
	noteadd lang("------------------------------ ’‡ЉФ", "------------------------------ Companions")
	noteadd ""
	repeat MAX_CHARA_FOLLOWER
		if ( cdata(CDATA_EXIST, cnt) == CHAR_STATE_DEAD ) {
			continue
		}
		if ( cnt == CHARA_PLAYER ) {
			continue
		}
		dbidn = cdatan(CDATAN_RACE, cnt)
		dbmode = DBMODE_REF
		gosub *db_race
		dbidn = cdatan(CDATAN_CLASS, cnt)
		dbmode = DBMODE_REF
		gosub *db_class
		if ( cdatan(CDATAN_NEWSEX, cnt) == "" ) {
			noteadd lang(cdatan(CDATAN_NAME, cnt) + " " + racename + "‚М" + classname + " " + _sex(cdata(CDATA_SEX, cnt)) + " " + calcage(cnt) + "ЌО" + "  " + cdata(CDATA_HEIGHT, cnt) + "cm" + " " + cdata(CDATA_WEIGHT, cnt) + "kg", cdatan(CDATAN_NAME, cnt) + " Race: " + racename + " \nClass: " + classname + "   Sex: " + _sex(cdata(CDATA_SEX, cnt)) + "   Age: " + calcage(cnt) + "" + " \nHeight: " + cdata(CDATA_HEIGHT, cnt) + "cm" + "   Weight: " + cdata(CDATA_WEIGHT, cnt) + "kg")
		}
		if ( cdatan(CDATAN_NEWSEX, cnt) != "" ) {
			noteadd lang(cdatan(CDATAN_NAME, cnt) + " " + racename + "‚М" + classname + " " + cdatan(CDATAN_NEWSEX, cnt) + " " + calcage(cnt) + "ЌО" + "  " + cdata(CDATA_HEIGHT, cnt) + "cm" + " " + cdata(CDATA_WEIGHT, cnt) + "kg", cdatan(CDATAN_NAME, cnt) + " Race: " + racename + " \nClass:" + classname + "   Sex: " + cdatan(CDATAN_NEWSEX, cnt) + "   Age: " + calcage(cnt) + "" + "  \nHeight: " + cdata(CDATA_HEIGHT, cnt) + "cm" + "   Weight: " + cdata(CDATA_WEIGHT, cnt) + "kg")
		}
		s = lang("ѓЊѓxѓ‹ ", "Level: ") + cdata(CDATA_LEVEL, cnt) + " "
		if ( cbit(CHARA_BIT_MARRIED, cnt) == 1 ) {
			s += lang("ЌҐ–сЌП‚Э ", "Engaged   ")
		}
		noteadd s
		noteadd ""
	loop
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:8" + " ct:" + ct
	noteadd lang("------------------------------ ЏМЌ†", "------------------------------ Titles")
	noteadd ""
	repeat 9
		if ( gdata(STARTING_GDATA_RANK + cnt) < 10000 ) {
			noteadd "" + ranktitle(cnt) + " Rank." + gdata(STARTING_GDATA_RANK + cnt) / 100
			s = lang("‹‹—ї: –с ", "Salary   : about ") + calcincome(cnt) + " gold  \n" + lang("ѓmѓ‹ѓ}: ", "Deadline  : ")
			gold += calcincome(cnt)
			if ( cnt == 3 | cnt == 4 | cnt == 5 | cnt == 8 ) {
				s += lang("‚И‚µ", "None")
			}
			else {
				s += lang("", "Within ") + gdata(STARTING_GDATA_RANK_NORMA + cnt) + lang("“ъ€И“а", " days")
			}
			noteadd s
			noteadd ""
		}
	loop
	procid = (procid + 1) \ 4
	proclist(procid) = "Dump:9" + " ct:" + ct
	s = exedir + "\\save\\" + playerid + ".txt"
	notesave s
	exec s, 16
	return

*com_ammo
	f = 0
	repeat MAX_EQUIP_SLOT_TOTAL
		body = CDATA_STARTING_EQUIP_SLOTS + cnt
		if ( cdata(body, cc) \ EXT_EQUIP_SLOTS == 0 ) {
			continue
		}
		if ( cdata(body, cc) / EXT_EQUIP_SLOTS == EQUIP_SLOT_AMMO ) {
			ci = cdata(body, cc) \ EXT_EQUIP_SLOTS - 1
			f = 1
			break
		}
	loop
	if ( f == 0 ) {
		txt lang("–о’e‚р‘•”х‚µ‚Д‚ў‚И‚ўЃB", "You need to equip ammo.")
		goto *pc_turn
	}
	listmax = 0
	cs = -1
	repeat RANGE_INV_ITEM_ENCHANT
		if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci) == 0 ) {
			break
		}
		enc = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci)
		i = enc / EXT_ENCHANTMENT
		if ( i != 0 ) {
			enc = enc \ EXT_ENCHANTMENT
			if ( i == ENCHANT_AMMO ) {
				if ( inv(INV_ITEM_AMMO, ci) == cnt ) {
					cs = cnt
				}
				list(0, listmax) = cnt
				listmax++
				continue
			}
		}
	loop
	if ( listmax == 0 ) {
		inv(INV_ITEM_AMMO, ci) = -1
		txt lang(itemname(ci) + "‚НђШ‚и‘Ц‚¦‚Й‘О‰ћ‚µ‚Д‚ў‚И‚ўЃB", itemname(ci) + " isn't capable of changing ammo.")
		goto *pc_turn
	}
	snd SOUNDLIST_AMMO
	cs++
	if ( cs >= listmax ) {
		inv(INV_ITEM_AMMO, ci) = -1
	}
	else {
		inv(INV_ITEM_AMMO, ci) = list(0, cs)
	}
	txt lang("Њ»ЌЭ‚М‘•“U’e:", "Current Ammo Type:")
	repeat listmax + 1
		if ( cnt == 0 ) {
			s = lang("’КЏн’e", "Normal"), lang("–іЊА", "Unlimited")
		}
		else {
			p = list(0, cnt - 1)
			i = inv(STARTING_INV_ITEM_ENCHANT + p * 2 + 1, ci) \ EXT_ENCHANTMENT_AMMO, inv(STARTING_INV_ITEM_ENCHANT + p * 2 + 1, ci) / EXT_ENCHANTMENT_AMMO
			s = ammoname(inv(STARTING_INV_ITEM_ENCHANT + p * 2, ci) \ EXT_ENCHANTMENT), "" + i + "/" + i(1)
		}
		s = s + ":" + s(1)
		if ( inv(INV_ITEM_AMMO, ci) == cnt - 1 ) {
			chatc@DP = (-1)
			s = "*[" + s + "]*"
			txtef COLOR_BLUE
		}
		else {
			s = " " + s + " "
		}
		txtmore
		txt " " + s
	loop
	goto *pc_turn

